{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Assignment 5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "<b>한국기술교육대학교 컴퓨터공학부<br>\n",
    "스크립트 프로그래밍(Script Programming)<br>\n",
    "2014136129 최은빈\n",
    "___\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "클래스와 모듈의 공통점과 차이점에 대해 설명하시오."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 공통점으로는 둘 다 독립된 이름 공간을 사용할 수 있으며 서로 연관된 코드를 묶어 독립성을 유지하며 재사용할 수 있게 합니다. \n",
    "> - 차이점으로는 클래스는 클래스 영역 내에 이름 공간을 구성하지만, 모듈은 파일 단위로 이름 공간을 구성합니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "다형성에 대해 설명하고 다형성을 보여주는 자신만의 파이썬 코드 예제를 제시하시오."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "> - 다형성은 상속 관계 내의 다른 클래스들의 인스턴스들이 같은 멤버 함수 호출에 대해 각각 다르게 반응하도록 하는 기능입니다. 예를 들어 연산자 오버로딩도 다형성을 지원하는 중요 기술로 a와 b의 객체 형에 따라 a + b의 + 연산자 행동 방식이 변경되는 것입니다. <br><br>\n",
    "> - 다형성의 장점으로는 적은 코딩으로 다양한 객체들에게 유사한 작업을 수행시킬 수 있고 프로그램 작성 코드량이 줄어듭니다. 또한 코드의 가독성을 높혀줍니다. <br><br>\n",
    "> - 형 선언이 없다는 점에서 파이썬에서 다형성을 적용하기에 더욱 용이하고, 실시간으로 객체의 형이 결정되므로 단 하나의 메소드에 의해 처리될 수 있는 객체의 종류에 제한이 없어 다른 언어보다 코드의 양이 줄어듭니다. <br><br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Piano - 도레미파솔\n",
      "Drum - 두구두구두구\n",
      "Trumpet - 빰빰빰\n",
      "Pansori - 얼씨구 절씨구\n",
      "Instrument\n"
     ]
    }
   ],
   "source": [
    "# 다형성에 관한 예제\n",
    "\n",
    "# 가장 상위 부모 클래스\n",
    "class Instrument:  \n",
    "    def play(self):\n",
    "        print('Instrument')\n",
    "    \n",
    "# 자식 클래스\n",
    "class Piano(Instrument): \n",
    "    def play(self):\n",
    "        print('Piano - 도레미파솔')\n",
    "        \n",
    "class Drum(Instrument):\n",
    "    def play(self):\n",
    "        print('Drum - 두구두구두구')\n",
    "    \n",
    "class Trumpet(Instrument): \n",
    "    def play(self):\n",
    "        print('Trumpet - 빰빰빰')\n",
    "              \n",
    "class Pansori(Instrument): \n",
    "    def play(self):\n",
    "        print('Pansori - 얼씨구 절씨구')\n",
    "        \n",
    "class Guitar(Instrument):\n",
    "    pass\n",
    "        \n",
    "\n",
    "# for 루프\n",
    "for each in (Piano(), Drum(), Trumpet(), Pansori(), Guitar()):\n",
    "    each.play() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 위 코드는 제가 작성한 다형성을 보여주는 코드입니다. Instrument 클래스를 상속받은 Piano, Drum, Trumpet, Pansori, Guitar 클래스에서는 Instrument 클래스의 play 메소드를 오버라이딩합니다. 여기서 Guitar 클래스에서는 play 메소드가 오버라이딩 되지 않았으므로 Instrument 클래스의 play 메소드를 가져다 사용합니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "다음 각 요구사항 모두를 만족시키는 Counter 클래스를 코딩하시오 (정답을 각 요구사항별로 입력할 필요 없이 3번 문제에 대해 1개의 클래스 정의 코드를 제시하면 된다.)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 1. 생성자에 count 값과 step 값을 인자로 받을 수 있다.\n",
    "    - count : Counter 인스턴스가 지니는 초기 정수 값\n",
    "    - step: Counter 인스턴스의 count가 증가되는 증분 (defalt 값: 1)\n",
    "    > ```>>> c = Counter(10)``` <br>\n",
    "    > ```>>> d = Counter(10, 2)``` <br>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 2. 다음과 같이 Counter의 인스턴스를 출력을 해주는 ```__str__()``` 메소드를 Counter 클래스 내에 구현하시오.\n",
    "    > ```>>> print(c) \n",
    "[Count (step: 1)] 10 ``` <br>\n",
    "    > ```>>> print(d) \n",
    "[Count (step: 2)] 10 ```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 3. 다음과 같이 step에 주어진 증분만큼 count를 증가시키는 incr() 메소드를 Counter 클래스 내에 구현하시오.\n",
    "    > ```>>> c.incr() ```<br>\n",
    "    > ```>>> d.incr() ``` <br>\n",
    "    > ```>>> print(c) \n",
    "[Count (step: 1)] 11 ```<br>\n",
    "    > ```>>> print(d) \n",
    "[Count (step: 2)] 12``` <br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 4. Counter 클래스 내에 관련 메소드를 추가하여 인스턴스 객체를 직접 호출(call)할 수 있도록 하시오. 인스턴스 객체를 직접 호출했을 때에 내부적으로 incr() 메소드를 호출하는 방법으로 구현하시오.\n",
    "    > ```>>> c()``` <br>\n",
    "    > ```>>> d()``` <br>\n",
    "    > ```>>> print(c) \n",
    "[Count (step: 1)] 12 ```<br>\n",
    "    > ```>>> print(d) \n",
    "[Count (step: 2)] 14 ```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 5. 다음과 같은 두 개의 산술 연산 (+, -)이 수행될 수 있도록 Counter 클래스 내에 관련 메소드를 추가하시오.\n",
    "    > ```>>> c = c + 5``` <br>\n",
    "    > ```>>> d = d - 5``` <br>\n",
    "    > ```>>> print(c) \n",
    "[Count (step: 1)] 17 ```<br>\n",
    "    > ```>>> print(d) \n",
    "[Count (step: 2)] 9 ```<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 요구사항 6. 다음과 같은 관계연산 (>, <, ==)이 수행될 수 있도록 Counter 클래스 내에 관련 메소드를 추가하시오.\n",
    "    > ```>>> print(c > 10) \n",
    "True ```<br>\n",
    "    > ```>>> print(d > 10) \n",
    "False ```<br>\n",
    "    > ```>>> print(c < 10) \n",
    "False ```<br>\n",
    "    > ```>>> print(d < 10) \n",
    "True ```<br>\n",
    "    > ```>>> print(c == 17) \n",
    "True ```<br>\n",
    "    > ```>>> print(d != 9) \n",
    "False ```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class Counter():\n",
    "    # 요구사항 1\n",
    "    def __init__(self, count, step = 1):\n",
    "        self.count = count\n",
    "        self.step = step\n",
    "        \n",
    "    # 요구사항 2\n",
    "    def __str__(self):\n",
    "        return str('[Count (Step : %d)] %d' % (self.step, self.count))\n",
    "    \n",
    "    # 요구사항 3\n",
    "    def incr(self):\n",
    "        self.count += self.step\n",
    "        \n",
    "    # 요구사항 4\n",
    "    def __call__(self):\n",
    "        self.incr()\n",
    "        \n",
    "    # 요구사항 5\n",
    "    def __add__(self, num):\n",
    "        self.count += num\n",
    "        return self\n",
    "    \n",
    "    def __sub__(self, num):\n",
    "        self.count -= num\n",
    "        return self\n",
    "    \n",
    "    # 요구사항 6\n",
    "    def __gt__(self, num):\n",
    "        return self.count > num\n",
    "    \n",
    "    def __lt__(self, num):\n",
    "        return self.count < num\n",
    "    \n",
    "    def __eq__(self, num):\n",
    "        return self.count == num\n",
    "    \n",
    "    def __ne__(self, num):\n",
    "        return self.count != num\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[Count (Step : 1)] 10\n",
      "[Count (Step : 2)] 10\n",
      "\n",
      "[Count (Step : 1)] 11\n",
      "[Count (Step : 2)] 12\n",
      "\n",
      "[Count (Step : 1)] 12\n",
      "[Count (Step : 2)] 14\n",
      "\n",
      "[Count (Step : 1)] 17\n",
      "[Count (Step : 2)] 9\n",
      "\n",
      "True\n",
      "False\n",
      "False\n",
      "True\n",
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "# 요구사항 1    \n",
    "c = Counter(10)\n",
    "d = Counter(10,2)\n",
    "\n",
    "# 요구사항 2\n",
    "print (c)\n",
    "print (d)\n",
    "print ()\n",
    "\n",
    "# 요구사항 3\n",
    "c.incr()\n",
    "d.incr()\n",
    "print (c)\n",
    "print (d)\n",
    "print ()\n",
    "\n",
    "# 요구사항 4\n",
    "c()\n",
    "d()\n",
    "print (c)\n",
    "print (d)\n",
    "print ()\n",
    "\n",
    "# 요구사항 5\n",
    "c = c + 5\n",
    "d = d - 5\n",
    "print (c)\n",
    "print (d)\n",
    "print ()\n",
    "\n",
    "# 요구사항 6\n",
    "print (c > 10)\n",
    "print (d > 10)\n",
    "print (c < 10)\n",
    "print (d < 10)\n",
    "print (c == 17)\n",
    "print (d != 9)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 요구사항 1번을 만족하기 위하여 Counter 클래스의 ```__init__()``` 함수를 정의하였습니다. 먼저 이는 인자로 count값과 step값을 가지게 되는데, 먼저 Counter 클래스의 객체 변수 count와 step에 인자로 들어오는 count, step 값을 대입합니다. 만약 step 값이 인자로 들어오지 않으면 디폴트 값 1로 주게 됩니다.<br><br>\n",
    "> - 요구사항 2번을 만족하기 위하여 Counter 클래스의 ```__str__()``` 함수를 정의하였습니다. 이는 Counter의 인스턴스를 출력해주는 것으로 문자열 포매팅을 이용해서 [Count (step: step)] count 형식으로 출력해줍니다.  <br><br>\n",
    "> - 요구사항 3번을 만족하기 위하여 Counter 클래스의 ```incr()``` 함수를 정의하였습니다. 인자로 객체의 count값을 step만큼 증가시켜주었습니다. <br><br>\n",
    "> - 요구사항 4번을 만족하기 위하여 Counter 클래스의 ```__call__()``` 함수를 정의하였습니다. 함수 내부에 객체 변수의 incr() 함수를 호출하여 call이 불릴 때 incr 함수도 호출되도록 만들었습니다. <br><br>\n",
    "> - 요구사항 5번을 만족하기 위하여 ```__add__()```와 ```__sub__()``` 함수를 정의하였습니다. add 함수에서는 인자로 들어온 값만큼 객체 변수의 count에 더해주고, sub 함수에서는 인자로 들어온 값만큼 객체 변수의 count에 빼줍니다.<br><br>\n",
    "> - 요구사항 6번을 만족하기 위하여 ```__gt__()```와 ```__lt__()```, ```__eq__()```, ```__ne__()``` 함수를 정의하였습니다. 객체 변수의 count와 인자로 들어온 값을 비교해줍니다. 각각 >, <, ==, != 기호를 사용해주면 됩니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "다음은 내장 자료형 list를 서브클래싱하여 만든 MySet 클래스 정의 내용이다. 다음 클래스 정의에서 ```__init__(), __str__(), elimicate_duplicate()```의 세 개의 메소드 코드 내용을 자신이 다른 사람에게 가르친다고 생각하며 설명해보시오.\n",
    "   - MySet은 집합(Set) 자료형을 정의하려는 의도하에 만들어진 클래스이다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MySet: {1 ,2 ,3}\n",
      "MySet: {2 ,3 ,4 ,5 ,6 ,7 ,8 ,9}\n"
     ]
    }
   ],
   "source": [
    "class MySet(list):\n",
    "    def __init__(self, l):\n",
    "        for e in l:\n",
    "            self.append(e)\n",
    "        MySet.eliminate_duplicate(self)\n",
    "    \n",
    "    def __str__(self):\n",
    "        result = \"MySet: {\"\n",
    "        for e in self:\n",
    "            result = result + str(e) + \" ,\"\n",
    "        result = result[0:len(result)-2] + \"}\"\n",
    "        return result\n",
    "\n",
    "    @staticmethod    \n",
    "    def eliminate_duplicate(l):\n",
    "        s = []\n",
    "        for e in l:\n",
    "            if e not in s:\n",
    "                s.append(e)\n",
    "\n",
    "        l[:] = []\n",
    "        for e in s:\n",
    "            l.append(e)\n",
    "\n",
    "    \n",
    "if __name__ == \"__main__\":\n",
    "    s = MySet([1, 2, 2, 3])\n",
    "    print(s)\n",
    "    t = MySet([2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 9])\n",
    "    print(t)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - ```__init__()``` 메소드는 생성자 메소드로 MySet 클래스를 생성할 때 자동으로 호출됩니다. 생성할 때 인자로 받은 리스트의 원소들을 가지는 리스트를 만들고, 리스트를 만들 때에는 append 함수를 이용하였는데, 여기서 MySet 클래스는 list를 상속받았기 때문에 그 자체가 리스트이므로 append 함수의 사용이 가능합니다. 그리고 MySet 클래스를 이용하여 eliminate_duplicate 함수를 호출해주었습니다.  <br><br>\n",
    "\n",
    "> - ```__str__()``` 메소드는 출력할 때 이용하는 함수입니다. 먼저 출력 시 가장 앞에 나오는 \"MySet: {\" 문자열을 저장하고, 인자로 오는 리스트의 원소들을 문자열로 바꿔 변환해줄 문자열에 추가시줍니다. 리스트의 원소를 구분하기 위해 하나의 원소가 추가될 때마다 구분자 \" ,\"(띄어쓰기와 콤마)을 추가시켜주었고, 모든 원소들을 추가시켜준 뒤에는 마지막에 붙는 \" ,\"(띄어쓰기와 콤마) 문자가 필요 없으므로 슬라이싱을 이용하여 제거해주었습니다. 마지막에는 } 문자열을 추가시켜주었고, 이렇게 변환된 문자열을 반환하였습니다.<br><br>\n",
    "\n",
    "\n",
    "> - ```eliminate_duplicate()``` 메소드는 인자로 들어온 리스트에서 중복된 원소들을 제거해주는 함수입니다. 먼저 빈 리스트(s)를 만들어 인자로 들어온 리스트(l)의 원소가 리스트(s)에 존재하지 않으면 리스트(s)에 추가시켜줍니다. 그리고 인자로 들어온 리스트(l)를 비워주고, 인자로 들어왔던 리스트(l)에 만들어 두었던 리스트(s)의 원소를 차례로 추가시켜주면 중복된 원소가 제거된 리스트를 만들 수 있습니다. 여기서 그냥 중복을 제거한 리스트를 반환하는 것이 아니라 중복을 제거한 리스트(s)를 다시 인자로 들어온 리스트(l)에 넣어주기 때문에 이 함수에는 반환값이 존재하지 않는다는 것을 알 수 있습니다. 즉, eliminate_duplicate(self) 만으로도 self는 중복이 제거된 리스트가 됩니다. 또한 이 메소드는 정적 메소드로 선언되었기 때문에 인스턴스 객체가 아니여도 클래스 이름만으로 호출할 수 있습니다.<br><br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4번 문제에 정의된 MySet 클래스에 메소드를 추가하여 다음 각 요구사항 모두를 만족시키는 코딩을 제시하시오.\n",
    "- 정답을 각 요구사항별로 입력할 필요 없이 요구사항 3개 전체에 대해 1개의 MySet 클래스 정의 코드를 제시하고 주석등으로 해당 코드를 설명한다.\n",
    "- 요구사항 1. | 연산으로 두 집합의 합집합을 반환한다.\n",
    "\n",
    "    > ```>>> u = s | t``` <br>\n",
    "    > ```>>> print(u)``` <br>\n",
    "    > ```MySet: {1, 2, 3, 4, 5, 6, 7, 8, 9}``` <br>\n",
    "- 요구사항 2. & 연산으로 두 집합의 교집합을 반환한다.\n",
    "\n",
    "    > ```>>> u = s & t ```<br>\n",
    "    > ```>>> print(u) ```<br>\n",
    "    > ```MySet: {2, 3} ```<br>\n",
    "- 요구사항 3. - 연산으로 두 집합의 차집합을 반환한다.\n",
    "\n",
    "    > ```>>> s = MySet([1, 2, 3])``` <br>\n",
    "    > ```>>> t = MySet([3, 4, 5]) ```<br>\n",
    "    > ```>>> u = s - t ```<br>\n",
    "    > ```>>> print(u) ```<br>\n",
    "    > ```MySet: {1, 2} ```<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MySet: {1 ,2 ,3}\n",
      "MySet: {2 ,3 ,4 ,5 ,6 ,7 ,8 ,9}\n"
     ]
    }
   ],
   "source": [
    "class MySet(list):\n",
    "    def __init__(self, l):\n",
    "        for e in l:\n",
    "            self.append(e)\n",
    "        MySet.eliminate_duplicate(self)\n",
    "    \n",
    "    def __str__(self):\n",
    "        result = \"MySet: {\"\n",
    "        for e in self:\n",
    "            result = result + str(e) + \" ,\"\n",
    "        result = result[0:len(result)-2] + \"}\"\n",
    "        return result\n",
    "    \n",
    "\n",
    "    @staticmethod    \n",
    "    def eliminate_duplicate(l):\n",
    "        s = []\n",
    "        for e in l:\n",
    "            if e not in s:\n",
    "                s.append(e)\n",
    "\n",
    "        l[:] = []\n",
    "        for e in s:\n",
    "            l.append(e)\n",
    "\n",
    "    # 요구사항 1\n",
    "    def __or__(self, l):\n",
    "        s = []\n",
    "        # self와 l를 합친 다음\n",
    "        for e in self: \n",
    "            s.append(e)\n",
    "        for e in l:\n",
    "            s.append(e)\n",
    "        MySet.eliminate_duplicate(s) # 중복 제거\n",
    "        return s\n",
    "    \n",
    "    # 요구사항 2\n",
    "    def __and__(self, l):\n",
    "        s = []\n",
    "        for e in self:\n",
    "            if e in l:\n",
    "                s.append(e) # self와 l에 공통으로 있는 맴버만 추가\n",
    "        return s\n",
    "    \n",
    "    # 요구사항 3\n",
    "    def __sub__(self, l):\n",
    "        s = []\n",
    "        for e in self:\n",
    "            if e not in l:\n",
    "                s.append(e) # self에는 있지만 l에는 없는 원소만 추가\n",
    "        return s\n",
    "    \n",
    "if __name__ == \"__main__\":\n",
    "    s = MySet([1, 2, 2, 3])\n",
    "    print (s)\n",
    "    t = MySet([2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 9])\n",
    "    print (t)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MySet: {1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9}\n",
      "MySet: {2 ,3}\n",
      "MySet: {1 ,2}\n"
     ]
    }
   ],
   "source": [
    "u = MySet(s | t)\n",
    "print (u)\n",
    "\n",
    "u = MySet(s & t)\n",
    "print (u)\n",
    "\n",
    "s = MySet([1, 2, 3]) \n",
    "t = MySet([3, 4, 5]) \n",
    "u = MySet(s - t) \n",
    "print (u)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 먼저 ```__or__()``` 메소드는 리스트 자료구조를 가지는 객체 s에 반복문을 돌면서 첫번째 인자로 들어온 리스트 객체의 변수와 두번째 인자로 들어온 리스트 객체의 변수를 모두 append 함수를 불러 추가시켜줍니다. 그리고 클래스의 eliminate_duplicate() 메소드를 불러 중복을 제거해줍니다. <br><br>\n",
    "> - 그리고 ```__and__()``` 메소드는 리스트 자료구조를 가지는 객체 s에 반복문을 돌면서 첫번째 인자로 들어온 리스트 객체의 변수가 두번째 인자로 들어온 리스트 객체 원소로 존재할 경우에만 append 함수를 불러 추가시켜줍니다. <br><br>\n",
    "> - ```__sub__()``` 메소드는 메소드는 리스트 자료구조를 가지는 객체 s에 반복문을 돌면서 첫번째 인자로 들어온 리스트 객체의 변수가 두번째 인자로 들어온 리스트 객체 변수로 존재하지 않을 경우에만 append 함수를 불러 추가시켜줍니다.<br><br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 6번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5번 문제에서 정의한 MySet 클래스에 대해 다음 예제를 수행하면 오류없이 올바르게 동작하는 것을 확인할 수 있다. 다음 예제 내에 있는 len(), bool() 내장함수와 in 키워드 사용 예제가 별다른 메소드 정의를 하지 않았는 데도 올바르게 수행되는 이유를 설명하시오.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "``` >>> s = MySet([1, 2, 3, 4, 5, 6]) ``` <br>\n",
    "```>>> print(len(s))```<br>\n",
    "```> 6```<br>\n",
    "```>>> print(bool(s))```<br>\n",
    "```> True```<br>\n",
    "```>>> print(2 in s)```<br>\n",
    "```> True ```<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 먼저 코드를 통해 오류없이 올바르게 작동하는 것을 확인하였습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MySet: {1 ,2 ,3}\n",
      "MySet: {2 ,3 ,4 ,5 ,6 ,7 ,8 ,9}\n",
      "6\n",
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "class MySet(list):\n",
    "    def __init__(self, l):\n",
    "        for e in l:\n",
    "            self.append(e)\n",
    "        MySet.eliminate_duplicate(self)\n",
    "    \n",
    "    def __str__(self):\n",
    "        result = \"MySet: {\"\n",
    "        for e in self:\n",
    "            result = result + str(e) + \" ,\"\n",
    "        result = result[0:len(result)-2] + \"}\"\n",
    "        return result\n",
    "\n",
    "    @staticmethod    \n",
    "    def eliminate_duplicate(l):\n",
    "        s = []\n",
    "        for e in l:\n",
    "            if e not in s:\n",
    "                s.append(e)\n",
    "        l[:] = []\n",
    "        for e in s:\n",
    "            l.append(e)\n",
    "\n",
    "    \n",
    "if __name__ == \"__main__\":\n",
    "    s = MySet([1, 2, 2, 3])\n",
    "    print(s)\n",
    "    t = MySet([2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 9])\n",
    "    print(t)\n",
    "    \n",
    "u = MySet([1, 2, 3, 4, 5, 6]) \n",
    "print(len(u))\n",
    "print(bool(u))\n",
    "print(2 in u)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - len()이나 bool()은 내장함수로 별도의 모듈 추가 없이 기본적으로 제공되며, 이름 공간에 명시적으로 들어올 필요 없이 언제든지 사용할 수 있는 것이기 때문에 오류가 나지 않습니다. 아래의 코드는 리스트의 내장함수가 무엇이 있는지 확인해보는 것입니다.<br>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']\n"
     ]
    }
   ],
   "source": [
    "print(dir(list))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 아래 실행과 같이 in은 예약어입니다. 따라서 프로그램 내에서 특정한 역할을 수행하도록 하기 위해 파이썬 언어가 미리 예약해둔 것이기 때문에 사용해도 에러가 나지 않습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n"
     ]
    }
   ],
   "source": [
    "import keyword\n",
    "print(keyword.kwlist)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 7번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "이전 Assignment 3 (Assignment 4가 아님)의 마지막 문제는 웹 URL로 지정된 웹페이지를 문자열로 가져와 모든 HTML 태그 및 CSS와 Javascript를 제외한 순수 텍스트를 얻어내고 그 안에 존재하는 단어를 추출하여 각 단어들에 대해 출현빈도를 사전형태({'world': 2, 'hello': 1, 'python': 1})로 저장하여 출력하는 것이었다. 이번에는 Assignment 3을 다시 확장/변형하여 다음과 같은 조건을 만족하도록 구현하시오."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 1) 새로운 클래스 WebWordsFrequency를 정의하시오.\n",
    "    - 이전 Assignment 4에서 고려했던 pickle 모듈등은 전혀 고려하지 마시오.\n",
    "        - 즉, 하드디스크에 저장하고 다시 로드하는 기능은 본 숙제에는 배제하시오.\n",
    "    - Assignment 4에서 고려했던 영어 불용어 처리는 적용하시오.\n",
    "    - Assignment 4에서 처럼 국문 사이트가 아닌 영어 사이트만을 고려하여 아래 사항을 코딩하시오."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 2) 생성자에 URL을 0개에서 임의의 개수를 넣을 수 있도록 생성자 인수를 가변인수로 정의하여 각각의 URL을 리스트 자료형에 유지하시오."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> ```>>> w1 = WebWordsFrequency('http://www.cnn.com', 'http://www.times.com', 'https://www.amazon.com') ```<br>\n",
    "> ```>>> w2 = WebWordsFrequency('http://www.cnn.com', 'http://www.times.com') ```<br>\n",
    "> ```>>> w3 = WebWordsFrequency() ```<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 3) addUrl() 메소드를 구현하여 인스턴스를 생성한 이후에도 URL을 추가할 수 있도록 한다.\n",
    "    - 반드시 1개의 URL을 추가하도록 구현 (즉, 동시에 여러 개의 URL을 추가하는 것은 배제)\n",
    "    > ```>>> w1.addUrl('https://github.com')```<br>\n",
    "    > ```>>> w3.addUrl('http://stackoverflow.com')```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 4) removeUrl() 메소드를 구현하여 URL을 삭제할 수 있도록 한다.\n",
    "    - 반드시 1개의 URL을 삭제하도록 구현 (즉, 동시에 여러 개의 URL을 삭제하는 것은 배제)\n",
    "    > ```>>> w1.removeUrl('http://www.cnn.com')```<br>\n",
    "    > ```>>> w2.removeUrl('http://stackoverflow.com')```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 5) listUrls() 메소드를 구현하여 현재 등록된 모든 URL을 출력하는 기능을 추가\n",
    "> ```>>> w1.listUrls()```<br>\n",
    "> http://www.times.com <br>\n",
    "> https://www.amazon.com <br>\n",
    "> https://github.com <br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 6) getWordsFrequency() 메소드를 구현하여 각 URL의 웹페이지들을 종합적으로 분석한 단어 출현 빈도 사전을 반환하시오.\n",
    "    - 만약 등록된 URL이 없다면 공백 사전을 반환\n",
    "    > ```>>> w1.getWordsFrequency() ```<br>\n",
    "{'hello': 8, 'site': 12, 'world': 2, 'science': 11, 'program': 1, 'python': 1}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 7) getMaxFreqencyWords() 메소드를 구현하여 각 URL의 웹페이지들을 종합적으로 분석한 단어 출현 빈도 사전에서 가장 많이 출현한 단어 리스트를 반환하시오.\n",
    "> ```>>> w1.getMaxFreqencyWords() ```<br>\n",
    "site \n",
    "    \n",
    "    \n",
    "- 최다 출현 단어의 빈도수가 동일한 경우 모두 출력해주어야 함\n",
    "> ```>>> w2.getMaxFreqencyWords() ```<br>\n",
    "> site <br>\n",
    "> science <br>\n",
    "    - 만약 등록된 URL이 없다면 None을 반환"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- 8) 임의의 단어 1개를 파라미터로 받는 searchUrlByWord() 메소드를 구현하여 유사도가 높은 웹 사이트를 출력하시오.\n",
    "> ```>>> w1.searchUrlByWord(\"news\")``` <br>\n",
    "http://www.cnn.com \n",
    "\n",
    "    - 파라미터로 받은 단어와 유사도가 동일한 URL이 여러 개이면 해당 URL을 모두 출력하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from urllib import request \n",
    "import string\n",
    "\n",
    "class WebWordsFrequency:\n",
    "    def __init__(self, *l):\n",
    "        self.urlList = []\n",
    "        self.words = {}\n",
    "        for url in l:\n",
    "            self.addUrl(url)\n",
    "    \n",
    "    def addUrl(self, url):\n",
    "        self.getWords(url)\n",
    "        self.urlList.append(url)\n",
    "        \n",
    "    def removeUrl(self, url):\n",
    "        if url in self.urlList:\n",
    "            del self.words[url]\n",
    "            self.urlList.remove(url)\n",
    "    \n",
    "    def listUrls(self):\n",
    "        for url in self.urlList:\n",
    "            print (url)\n",
    "    \n",
    "    def getWords(self, url):\n",
    "        self.words[url] = {}\n",
    "        source = request.urlopen(url).read().decode('utf-8')\n",
    "        text = ''\n",
    "        \n",
    "        while ('<!--' in source):\n",
    "            # 주석은 <!-- 과 --> 의 쌍으로 나타내어지므로 index 함수를 사용해 주석을 찾아 없앤다\n",
    "            left = source.index('<!--')\n",
    "            right = source.index('-->')\n",
    "            source = source[:left] + source[right+3:]\n",
    "        \n",
    "        # Html Entities 제거\n",
    "        htmlEntities = ['&nbsp;','&quot;','&lt;','&gt;','&amp;']\n",
    "        for entity in htmlEntities:\n",
    "            while (entity in source):\n",
    "                left = source.index(entity)\n",
    "                right = source.index(entity)\n",
    "                source = source[:left] + source[right+len(entity):]    \n",
    "        \n",
    "        # <script> 태그가 없어질때까지 반복 (javascript 태그)\n",
    "        while ('<script' in source):\n",
    "        # <script> 태그 뒤에는 문장이 올 수 있으므로 <script 으로 검사해준다 \n",
    "        # <script> ~ </script> 사이에 오는 문장은 순수 텍스트가 아니므로 무시한다\n",
    "            left = source.index('<script')\n",
    "            right = source.index('</script>')\n",
    "            source = source[:left] + source[right+9:]\n",
    "    \n",
    "        # <style> 태그가 없어질때까지 반복 (css 태그)\n",
    "        while ('<style' in source):\n",
    "        # <style> 태그 뒤에는 문장이 올 수 있으므로 <style 으로 검사해준다 \n",
    "        # <style> ~ </style> 사이에 오는 문장은 순수 텍스트가 아니므로 무시한다\n",
    "            left = source.index('<style')\n",
    "            right = source.index('</style>')\n",
    "            source = source[:left] + source[right+8:] \n",
    "    \n",
    "        # 태그는 < 과 > 의 쌍으로 나타내어지므로 index 함수를 사용해 태그 부분을 찾아 없앤다\n",
    "        while('<' in source):\n",
    "            left = source.index('<')\n",
    "            right = source.index('>')\n",
    "            text = text + ' ' + source[:left]\n",
    "            source = source[right+1:]\n",
    "            \n",
    "        # 구두 문자 추가\n",
    "        puncList = list(string.punctuation)\n",
    "        puncList.extend(['’','‘','···','【','】','…','·','»','¢','£','¥','€','®','ⓒ','©']) \n",
    "        stopword = \"a,about,above,across,after,again,against,all,almost,alone,along,already,also,although,always,among,an,and,another,any,anybody,anyone,anything,anywhere,are,area,areas,around,as,ask,asked,asking,asks,at,away,b,back,backed,backing,backs,be,became,because,become,becomes,been,before,began,behind,being,beings,best,better,between,big,both,but,by,c,came,can,cannot,case,cases,certain,certainly,clear,clearly,come,could,d,did,differ,different,differently,do,does,done,down,down,downed,downing,downs,during,e,each,early,either,end,ended,ending,ends,enough,even,evenly,ever,every,everybody,everyone,everything,everywhere,f,face,faces,fact,facts,far,felt,few,find,finds,first,for,four,from,full,fully,further,furthered,furthering,furthers,g,gave,general,generally,get,gets,give,given,gives,go,going,good,goods,got,great,greater,greatest,group,grouped,grouping,groups,h,had,has,have,having,he,her,here,herself,high,high,high,higher,highest,him,himself,his,how,however,i,if,important,in,interest,interested,interesting,interests,into,is,it,its,itself,j,just,k,keep,keeps,kind,knew,know,known,knows,l,large,largely,last,later,latest,least,less,let,lets,like,likely,long,longer,longest,m,made,make,making,man,many,may,me,member,members,men,might,more,most,mostly,mr,mrs,much,must,my,myself,n,necessary,need,needed,needing,needs,never,new,new,newer,newest,next,no,nobody,non,noone,not,nothing,now,nowhere,number,numbers,o,of,off,often,old,older,oldest,on,once,one,only,open,opened,opening,opens,or,order,ordered,ordering,orders,other,others,our,out,over,p,part,parted,parting,parts,per,perhaps,place,places,point,pointed,pointing,points,possible,present,presented,presenting,presents,problem,problems,put,puts,q,quite,r,rather,really,right,right,room,rooms,s,said,same,saw,say,says,second,seconds,see,seem,seemed,seeming,seems,sees,several,shall,she,should,show,showed,showing,shows,side,sides,since,small,smaller,smallest,so,some,somebody,someone,something,somewhere,state,states,still,still,such,sure,t,take,taken,than,that,the,their,them,then,there,therefore,these,they,thing,things,think,thinks,this,those,though,thought,thoughts,three,through,thus,to,today,together,too,took,toward,turn,turned,turning,turns,two,u,under,until,up,upon,us,use,used,uses,v,very,w,want,wanted,wanting,wants,was,way,ways,we,well,wells,went,were,what,when,where,whether,which,while,who,whole,whose,why,will,with,within,without,work,worked,working,works,would,x,y,year,years,yet,you,young,younger,youngest,your,yours\".split(',')\n",
    "    \n",
    "        for t in text.split(): # 현재 text에 들어 있는 문장은 순수 텍스트이므로 공백을 기준으로 자름\n",
    "            for char in puncList: \n",
    "                t = t.replace(char, '')\n",
    "            t = t.lower() # 모든 단어를 대소문자를 구분하지 않고 단어를 저장함\n",
    "            if len(t) > 0 and not t in stopword:\n",
    "                if not t in self.words[url].keys():\n",
    "                    self.words[url][t] = 1\n",
    "                else:\n",
    "                    self.words[url][t] += 1\n",
    "\n",
    "    \n",
    "    def getWordsFrequency(self):\n",
    "        if len(self.urlList) == 0:\n",
    "            return {}\n",
    "        \n",
    "        totalWords = {} \n",
    "        for url, word in self.words.items():\n",
    "            for tmp in word.keys():\n",
    "                if not tmp in totalWords.keys():\n",
    "                    totalWords[tmp] = word[tmp]\n",
    "                else:\n",
    "                    totalWords[tmp] += word[tmp]\n",
    "        \n",
    "        return totalWords\n",
    "    \n",
    "    \n",
    "    def getMaxFreqencyWords(self):\n",
    "        if len(self.urlList) == 0:\n",
    "            return None\n",
    "        \n",
    "        totalWords = self.getWordsFrequency()\n",
    "        tmp = []\n",
    "        maxv = 0\n",
    "        for word, cnt in totalWords.items():\n",
    "            if cnt > maxv:\n",
    "                maxv = cnt\n",
    "            \n",
    "        for word, cnt in totalWords.items():\n",
    "            if cnt == maxv:\n",
    "                tmp.append(word)\n",
    "        return tmp\n",
    "    \n",
    "    \n",
    "    def searchUrlByWord(self, keyword):\n",
    "        temp = []\n",
    "        similarity = {}\n",
    "        print(\"\\n\")\n",
    "        print (\"[ KEYWORD : %s ]\" % (keyword))\n",
    "        print(\"--------------------------------------\\n\")\n",
    "        for i in range(len(self.urlList)):\n",
    "            \n",
    "           # print(self.words[self.urlList[i]])\n",
    "            temp = list(self.words[self.urlList[i]].keys())\n",
    "            if keyword in temp:\n",
    "                similarity[self.urlList[i]] = 10 # 기본 유사도를 10으로 줌\n",
    "            \n",
    "                print (\"URL : \" + self.urlList[i])\n",
    "                print (\"키워드 %s 가 포함된 단어 항목입니다\\n\" % (keyword))\n",
    "                \n",
    "                for j in range(len(temp)):\n",
    "                    if temp[j].find(keyword) != -1 and temp[j] != keyword:\n",
    "                        print(\"[word] %s : [similarity] %d\" % (temp[j], self.words[self.urlList[i]][temp[j]]))\n",
    "                        similarity[self.urlList[i]] += self.words[self.urlList[i]][temp[j]]\n",
    "                    # 입력받은 키워드가 단어 일부일 경우, 해당 단어의 출현 빈도를 더해줌\n",
    "        \n",
    "                    elif temp[j] == keyword:\n",
    "                        print(\"[word] %s : [similarity] %d\" % (temp[j], self.words[self.urlList[i]][temp[j]] + 20))\n",
    "                        similarity[self.urlList[i]] += (self.words[self.urlList[i]][temp[j]] + 20) \n",
    "                    # 입력받은 키워드가 단어와 같을 경우에는, 해당 단어의 출현 빈도에 보너스 점수 20을 더한 것을 더해줌\n",
    "                print(\"--------------------------------------\")\n",
    "            else:\n",
    "                print (\"URL : \" + self.urlList[i])\n",
    "                print (\"키워드 %s 가 존재하지 않습니다\\n\" % (keyword))\n",
    "                print(\"--------------------------------------\")    \n",
    "            \n",
    "        \n",
    "        maxv = 0\n",
    "        l = []\n",
    "        for url, count in similarity.items():\n",
    "            if count > maxv:\n",
    "                maxv = count;\n",
    "        # 리스트에 저장\n",
    "        for url, count in similarity.items():\n",
    "            if count == maxv:\n",
    "                l.append(url)\n",
    "                \n",
    "        print(\"=>\" , end = ' ')\n",
    "        return l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "http://www.times.com\n",
      "http://www.apple.com/\n",
      "https://github.com\n",
      "\n",
      "http://www.cnn.com\n",
      "http://www.times.com\n",
      "\n",
      "http://stackoverflow.com\n",
      "\n",
      "\n",
      "{'york': 11, 'times': 13, 'breaking': 1, 'news': 8, 'world': 9, 'multimedia': 2, 'nytimescom': 3, 'supports': 1, 'internet': 1, 'explorer': 1, '9': 1, 'earlier': 1, 'please': 1, 'upgrade': 2, 'browser': 1, 'learn': 9, 'sections': 4, 'search': 7, 'skip': 3, 'content': 2, 'navigation': 8, 'subscribe': 5, 'log': 1, '0': 1, 'settings': 1, 'english': 1, '中文': 1, 'chinese': 1, 'español': 1, 'monday': 2, 'december': 1, '4': 1, '2017': 7, 'todays': 5, 'paper': 2, 'video': 6, 'quick': 1, 'site': 11, 'politics': 5, 'ny': 2, 'business': 12, 'opinion': 11, 'tech': 3, 'science': 4, 'health': 13, 'sports': 4, 'arts': 6, 'style': 5, 'food': 5, 'travel': 4, 'magazine': 8, 'real': 5, 'estate': 5, 'close': 9, 'text': 1, 'input': 1, 'mobile': 3, 'top': 5, 'cvs': 3, 'deal': 4, 'buy': 5, 'aetna': 3, 'reshape': 3, 'industry': 5, 'michael': 4, 'de': 2, 'la': 1, 'merced': 1, 'reed': 2, 'abelson': 1, '1024': 1, 'pm': 3, 'et': 8, '69': 3, 'billion': 3, 'combine': 1, 'drugstore': 1, 'giant': 1, 'united': 3, 'biggest': 1, 'insurers': 1, 'companies': 1, 'touch': 3, 'basic': 1, 'services': 3, 'people': 2, 'regularly': 1, 'critics': 1, 'worry': 2, 'customers': 3, 'choices': 2, 'sharply': 1, 'limited': 1, 'cvsaetna': 3, 'merger': 3, 'benefit': 3, 'consumers': 3, 'trump': 10, 'lashes': 1, 'twitter': 1, 'saying': 1, 'fbi': 2, 'tatters': 1, 'shear': 1, 'extraordinary': 1, 'attack': 1, 'law': 1, 'enforcement': 1, 'body': 1, 'own': 4, 'government': 4, 'president': 5, 'accused': 1, 'career': 2, 'investigators': 1, 'bias': 1, 'emails': 3, 'dispute': 1, 'claim': 2, 'flynn': 2, 'acted': 1, 'russia': 2, 'timeline': 1, 'phone': 1, 'calls': 2, 'shutdown': 2, 'looms': 2, 'republicans': 3, 'stopgap': 1, 'measure': 1, 'thomas': 1, 'kaplan': 1, 'funding': 1, 'set': 4, 'expire': 1, 'friday': 1, 'embroiled': 1, 'feud': 1, 'democratic': 2, 'leadership': 2, 'trying': 2, 'pass': 1, 'twoweek': 1, 'delay': 1, 'negotiate': 1, 'longterm': 1, 'spending': 3, 'package': 1, 'quarry': 1, 'spend': 2, 'gop': 2, 'tax': 7, 'cut': 2, 'isnt': 1, 'stone': 1, 'natalie': 1, 'kitroeff': 1, 'overhaul': 1, 'reinvigorate': 1, 'corporate': 1, 'wave': 1, 'investment': 1, 'hiring': 1, 'raises': 1, 'inside': 2, 'boardrooms': 1, 'executives': 1, 'ideas': 2, 'savings': 1, 'mcconnell': 3, 'care': 4, 'failure': 2, 'map': 4, 'success': 2, 'bill': 2, 'offers': 3, 'lastminute': 1, 'breaks': 1, 'developers': 8, 'banks': 1, 'oil': 1, 'met': 5, 'opera': 2, 'suspends': 3, 'james': 2, 'levine': 3, 'amid': 4, 'abuse': 2, 'accusations': 2, 'cooper': 2, '1056': 1, 'conductor': 1, 'sexually': 1, 'abused': 1, 'decades': 2, 'ago': 1, 'teenagers': 1, 'suspended': 1, 'fourdecade': 1, 'relationship': 1, '74': 1, 'canceled': 1, 'scheduled': 1, 'engagements': 1, 'comments': 5, 'sexual': 3, 'assault': 1, 'furor': 1, 'roils': 2, '2': 2, 'historically': 2, 'black': 3, 'colleges': 4, 'caitlin': 1, 'dickerson': 1, 'stephanie': 1, 'saul': 1, '223': 1, 'am': 5, 'spelman': 1, 'morehouse': 1, 'atlanta': 1, 'schools': 1, 'nationwide': 1, 'fielding': 1, 'complaints': 1, 'misconduct': 1, 'south': 3, 'korea': 4, 'start': 3, 'air': 1, 'force': 1, 'drills': 1, 'heightened': 1, 'tensions': 1, 'jerusalem': 1, 'debate': 3, 'simmers': 1, 'kushner': 1, 'optimistic': 1, 'substantive': 1, 'assessment': 1, 'uae': 1, 'denies': 1, 'yemen': 1, 'rebels': 1, 'fired': 1, 'missile': 1, 'abu': 1, 'dhabi': 1, 'nuclear': 1, 'plant': 2, 'disney': 1, 'resumed': 1, 'talks': 1, 'fox': 1, 'daily': 2, '360': 2, '107': 1, 'seven': 3, 'wonders': 2, 'taj': 1, 'mahal': 1, 'jeremy': 2, 'woodhousegetty': 1, 'images': 1, 'documentaries': 1, 'yousur': 2, 'alhlou': 2, 'independence': 1, 'egypt': 1, 'dangerous': 1, 'egyptian': 1, 'woman': 2, 'rent': 2, 'apartment': 3, 'friends': 1, 'country': 1, 'personal': 3, 'freedom': 2, 'routinely': 1, 'compromised': 1, 'makes': 2, 'rebel': 1, 'mona': 1, 'elnaggar': 1, 'mark': 1, 'meatto': 1, 'rebelled': 2, 'religion': 2, 'shes': 2, 'run': 2, 'briefing': 1, 'patrick': 1, 'boehler': 1, 'mike': 1, 'ives': 1, '254': 1, 'heres': 1, 'day': 2, 'listen': 1, 'washington': 3, 'sean': 2, 'hannity': 2, 'conservative': 1, 'media': 2, 'host': 4, 'spoke': 1, 'matthew': 1, 'shaer': 1, 'contributing': 1, 'writer': 1, 'opinionated': 1, 'considers': 1, 'journalist': 1, 'listening': 1, 'audio': 1, 'follow': 1, 'apple': 21, 'podcasts': 1, 'radio': 1, 'public': 1, 'stitcher': 1, 'smarter': 1, 'living': 2, '6': 1, 'money': 3, '2018': 1, 'tim': 1, 'herrera': 1, 'perfect': 2, 'excuse': 1, 'deep': 2, 'look': 3, 'handle': 1, 'activity': 1, 'trackers': 1, 'dont': 3, 'gretchen': 1, 'reynolds': 1, 'cant': 2, 'child': 1, 'fitbit': 1, 'christmas': 1, 'expect': 1, 'active”': 1, 'expert': 1, '300': 1, 'gifts': 1, '75': 1, 'editors': 1, '15': 1, 'categories': 1, 'holiday': 3, 'gift': 4, 'guide': 4, 'journalism': 1, 'matters': 1, 'essential': 1, 'lure': 2, 'life': 3, 'cold': 3, 'darkness': 3, 'norilsk': 1, 'slave': 1, 'labor': 1, 'camp': 2, 'prospering': 1, 'source': 3, 'palladium': 1, 'bad': 1, 'except': 2, 'months': 1, 'temperatures': 1, 'minus': 1, '80': 1, 'andrew': 2, 'higgins': 1, 'alabamas': 1, 'disdain': 1, 'democrats': 1, 'senate': 1, 'race': 3, 'alan': 1, 'blinder': 1, 'campbell': 1, 'robertson': 1, 'jess': 2, 'bidgood': 1, '925': 1, 'nominee': 1, 'doug': 1, 'jones': 1, 'widely': 1, 'admired': 1, 'roy': 2, 'moore': 2, 'voters': 2, 'struggling': 3, 'past': 1, 'party': 2, 'affiliation': 1, 'hell': 1, 'call': 2, 'costs': 1, 'rebuilding': 1, 'syria': 1, 'political': 1, 'somini': 1, 'sengupta': 1, 'ravaged': 1, 'city': 5, 'homs': 1, 'symbolize': 1, 'bashar': 1, 'alassads': 1, 'ruthless': 1, 'tactics': 1, 'embody': 1, 'looming': 1, 'challenge': 1, 'war': 1, 'approaches': 1, 'reconstruction': 1, 'windows': 1, 'london': 1, 'paris': 1, 'berlin': 1, 'wintry': 1, 'décor': 1, 'season': 1, 'designers': 1, 'incorporated': 1, 'themes': 1, 'displays': 1, 'virtual': 2, 'currency': 1, 'boom': 1, 'hits': 1, 'home': 7, 'suhyun': 1, 'lee': 1, 'nathaniel': 1, 'popper': 1, 'bitcoin': 1, 'currencies': 1, 'booming': 1, 'regular': 1, 'investors': 2, 'leading': 2, 'global': 1, 'frenzy': 1, 'paid': 1, 'parental': 1, 'leave': 1, 'ginia': 1, 'bellafante': 1, 'citys': 2, 'program': 1, 'applies': 1, 'managers': 1, 'omits': 1, 'vast': 1, 'majority': 1, 'workers': 1, 'teachers': 1, 'police': 2, 'officers': 1, 'park': 1, 'rangers': 1, 'unions': 2, 'dealbook': 2, 'newsletter': 2, 'columnist': 1, 'ross': 2, 'sorkin': 1, 'colleagues': 1, 'help': 10, 'sense': 1, 'major': 4, 'policy': 4, 'headlines': 1, '—': 2, 'power': 3, 'brokers': 1, 'shape': 2, 'allnew': 1, 'edition': 2, 'confidential': 1, 'tip': 1, 'provide': 1, 'materials': 1, 'journalists': 1, 'china': 3, 'rises': 1, 'australia': 3, 'rely': 1, 'america': 3, 'prominent': 1, 'strategist': 1, 'clash': 1, 'remain': 1, 'dominant': 1, 'asia': 1, 'gay': 1, 'australian': 2, 'politician': 1, 'proposes': 1, 'samesex': 2, 'marriage': 3, 'proposal': 1, 'legalizing': 1, 'final': 1, 'stages': 1, 'passage': 1, 'parliament': 1, 'revered': 1, 'tv': 4, 'figure': 1, 'feels': 2, 'ripples': 1, 'weinstein': 1, 'scandal': 1, 'allegations': 1, 'don': 1, 'burke': 1, 'longtime': 1, 'star': 1, '“bloke”': 1, 'culture': 2, 'masculinity': 1, 'book': 2, 'review': 14, 'jews': 1, 'funny': 1, 'daubers': 1, '“jewish': 1, 'comedy': 1, 'serious': 1, 'history”': 1, 'looks': 1, 'laughter': 1, '2000': 1, 'laying': 1, 'detailed': 1, 'taxonomy': 1, 'humor': 1, 'norman': 2, 'baker': 2, 'seeker': 1, 'adventure': 1, 'dies': 3, '89': 2, 'crossed': 2, 'atlantic': 2, 'papyrus': 1, 'raft': 2, 'adventures': 1, 'brooklyn': 2, 'boy': 1, 'unconventional': 1, 'traveler': 1, 'island': 4, 'revived': 3, 'ravishing': 3, '1990': 1, 'musical': 1, 'fable': 1, 'love': 1, 'death': 2, 'temperamental': 1, 'gods': 1, 'french': 1, 'antilles': 1, 'bold': 1, 'delight': 1, 'critic': 1, 'writes': 1, 'whats': 1, 'bigger': 1, 'threat': 1, 'normalization': 1, 'alarmism': 1, 'ivan': 1, 'krastev': 1, 'rightwing': 1, 'populists': 1, 'thrive': 1, 'tense': 1, 'polarization': 1, 'shouldnt': 1, 'fractured': 1, 'roger': 1, 'cohen': 1, 'lurches': 1, 'peace': 2, 'fragile': 1, 'truth': 1, 'blurred': 1, 'billy': 2, 'bush': 2, 'yes': 2, 'donald': 3, 'cost': 3, 'clinton': 1, 'election': 1, 'plot': 1, 'saudi': 1, 'arabias': 1, 'fight': 2, 'qatar': 1, '202': 1, 'stop': 1, 'north': 1, 'act': 1, 'israel': 1, 'nitsana': 1, 'darshanleitner': 1, 'negotiations': 1, 'sanctions': 1, 'havent': 1, 'stopped': 1, 'kim': 1, 'regime': 1, 'financial': 1, 'warfare': 1, 'catalans': 1, 'owe': 1, 'explanation': 1, 'albert': 1, 'rivera': 1, '215': 1, 'coexistence': 1, 'union': 1, 'options': 2, 'articulate': 1, 'common': 1, 'project': 4, 'spain': 1, 'soil': 2, 'dirty': 2, 'green': 4, 'planet': 2, 'devaluing': 2, 'women': 4, 'losing': 1, 'elections': 1, '201': 1, 'user': 1, 'subscriptions': 5, 'royal': 2, 'impose': 2, 'story': 4, 'choice': 2, 'jayz': 4, 'editor': 2, 'insider': 2, 'raquo': 33, 'crossword': 4, 'play': 2, 'todayrsquos': 2, 'puzzle': 2, 'wordplay': 1, 'watching': 1, 'neediest': 2, 'serving': 2, 'community': 6, 'ozella': 1, 'finlay': 2, 'sister': 1, 'ran': 1, 'pats': 1, 'luncheonette': 1, '1970s': 1, 'days': 1, 'week': 2, 'restaurant': 1, 'closed': 1, 'ms': 1, 'embarked': 1, 'volunteering': 1, '106th': 1, 'fund': 1, 'provided': 1, 'direct': 1, 'assistance': 1, 'beyond': 2, 'donate': 1, 'advertisers': 1, 'loading': 2, 'explore': 2, 'videos': 1, 'player': 1, 'previous': 1, 'desk': 1, 'vulgarians': 1, 'letters': 2, 'talk': 2, 'male': 2, 'sex': 1, 'drive': 1, 'readers': 1, 'discuss': 1, 'writers': 1, 'mistreatment': 1, 'rooted': 1, '“brutality': 1, 'sexuality”': 1, 'family': 1, 'sisters': 1, 'nurturing': 1, 'countless': 1, 'haircuts': 1, 'dinner': 1, 'sunday': 3, 'happy': 1, 'anniversary': 1, 'heart': 1, 'transplant': 1, 'scallop': 2, 'spaceage': 2, 'eyes': 3, 'sicilys': 2, 'emerald': 2, 'gem': 2, 'bronte': 2, 'pistachio': 2, 'doctors': 1, 'fail': 1, 'children': 1, 'sterilized': 1, 'theater': 3, 'broadway': 1, 'pro': 2, 'basketball': 1, 'ugly': 1, 'streaks': 1, 'warriors': 1, 'knicks': 1, 'terrible': 1, 'navajo': 1, 'economy': 1, 'american': 1, 'singlefamily': 1, '11yearold': 1, 'spent': 1, 'jail': 1, 'serial': 1, 'killer': 1, 'cellmate': 1, 'plan': 1, 'snubs': 1, 'palestinians': 1, 'middle': 1, 'east': 1, 'company': 3, 'actually': 1, 'plans': 2, 'chinas': 1, 'ai': 1, 'advances': 1, 'security': 6, 'oped': 4, 'contributor': 1, 'abc': 1, 'reporter': 1, 'brian': 1, 'erroneous': 1, 'report': 1, 'bound': 1, 'history': 1, 'roiled': 1, 'metoo': 1, 'moment': 1, 'ministers': 1, 'revive': 1, 'martin': 1, 'luther': 1, 'kings': 1, '1968': 1, 'poverty': 1, 'campaign': 1, 'technology': 1, 'shift': 1, '41': 1, 'lithuania': 1, 'facebook': 1, 'feed': 1, 'drone': 1, 'maker': 1, 'dji': 1, 'sending': 3, 'data': 1, 'officials': 1, 'snapchat': 1, 'remakes': 1, 'splitting': 1, 'social': 1, 'el': 2, 'museos': 1, 'leader': 1, 'build': 6, 'bridge': 1, 'latino': 1, 'future': 3, 'kennedy': 1, 'center': 2, 'honors': 1, 'evoke': 1, 'pushes': 1, 'avoid': 1, 'path': 1, 'tricky': 1, 'fashion': 2, 'drag': 1, 'event': 1, 'horizon': 1, 'resort': 1, 'canyon': 1, 'ranch': 1, 'succumbs': 1, 'botox': 1, 'rhythm': 1, 'colombias': 1, 'salsa': 1, 'capital': 1, 'movies': 2, 'water': 1, 'altogether': 1, 'wonderful': 1, 'coco': 1, 'tops': 1, 'box': 1, 'office': 1, 'quiet': 1, 'wonder': 1, 'wheel': 1, 'woody': 1, 'allens': 1, 'coney': 1, 'memory': 1, 'palace': 1, 'boulevard': 1, 'stabs': 1, 'queens': 1, 'drives': 1, 'helpers': 1, 'acting': 1, 'studios': 1, 'matter': 2, 'raiders': 2, '24': 1, 'giants': 2, '17': 1, 'stay': 1, 'eli': 1, 'manning': 1, 'warms': 1, 'bench': 1, 'college': 5, 'football': 2, 'playoff': 1, 'alabama': 1, 'ohio': 1, 'golf': 1, 'tiger': 1, 'woods': 1, 'relishes': 1, 'struggle': 1, 'upanddown': 1, 'return': 1, 'sleepwalking': 1, '70s': 1, 'downtown': 1, 'riot': 1, 'sailing': 1, 'silly': 1, 'seas': 1, 'pirates': 1, 'penzance': 1, '2017s': 1, 'supermoon': 1, 'moons': 1, 'super': 1, 'hundreds': 2, 'trilobites': 1, 'fossilized': 1, 'pterosaur': 1, 'eggs': 1, 'uncovered': 1, 'obituaries': 2, 'leon': 1, 'carried': 1, 'battle': 1, 'tarawa': 1, '98': 1, 'adventurer': 1, 'william': 1, 'mayer': 1, 'wideranging': 1, 'composer': 1, 'dead': 1, '91': 1, 'television': 2, 'saturday': 1, 'night': 1, 'live': 1, 'jabs': 1, 'matt': 1, 'lauer': 1, 'jeanclaude': 2, 'van': 2, 'damme': 2, 'plays': 1, 'kicks': 1, 'word': 1, 'claire': 1, 'foy': 1, 'ready': 1, 'quit': 1, 'playing': 2, 'queen': 1, 'transplanted': 1, 'uterus': 1, 'birth': 1, 'footsteps': 1, 'inescapable': 1, 'poet': 1, 'nicaragua': 1, 'getaway': 1, 'sos': 1, 'rise': 1, 'apps': 3, '36': 2, 'hours': 2, 'shanghai': 1, 'books': 4, '10': 3, 'enthusiast': 1, 'praise': 1, 'romance': 1, '100': 1, 'notable': 1, 'education': 8, 'applicant': 1, 'getting': 1, 'dream': 1, 'six': 1, 'myths': 1, 'choosing': 2, 'pasteles': 1, 'puerto': 1, 'rican': 1, 'tradition': 1, 'special': 1, 'savor': 1, 'kitchen': 1, 'meat': 1, 'potatoes': 1, 'feature': 3, 'rachel': 1, 'brosnahans': 1, 'comic': 1, 'timing': 1, 'answer': 1, 'ferry': 1, 'changing': 1, 'brooklynqueens': 1, 'waterfront': 1, 'ticket': 1, '38': 1, 'million': 2, 'penthouse': 1, 'west': 1, 'chelsea': 1, 'novembers': 1, 'sale': 3, 'renters': 1, 'jersey': 1, 'upshot': 1, 'generation': 2, 'grumpy': 1, 'unhappy': 1, 'youre': 2, '50': 1, 'bills': 1, 'automatic': 1, 'cuts': 1, 'pages': 1, 'explained': 1, 'automobiles': 2, 'detroit': 2, 'exciting': 1, 'indian': 1, 'automakers': 1, 'sign': 9, 'comeback': 1, 'wheels': 1, 'near': 1, 'driving': 1, 'forward': 2, 'hands': 1, 'jenna': 1, 'lyonss': 1, 'space': 2, 'discusses': 1, 'rap': 1, 'trumps': 1, 'studio': 1, 'artist': 1, 'painted': 1, 'landlord': 1, 'stage': 1, 'ronda': 1, 'kaysen': 1, 'tenant': 1, 'protect': 2, 'garden': 1, 'provides': 1, 'access': 3, 'outside': 1, 'homes': 1, 'mortgage': 1, 'calculator': 1, 'emailed': 1, 'viewed': 1, 'trending': 1, 'recommended': 1, 'page': 1, 'index': 2, 'corrections': 1, 'columnists': 1, 'editorials': 1, 'contributors': 1, 'art': 1, 'design': 1, 'dance': 1, 'music': 3, 'nyc': 3, 'events': 4, 'jobs': 1, 'weddings': 1, 'celebrations': 1, 'listings': 1, 'reader': 1, 'classifieds': 1, 'tools': 4, 'photography': 1, 'nyt': 1, 'store': 6, 'journeys': 1, 'manage': 4, 'account': 6, 'nytco': 1, 'delivery': 1, 'digital': 1, 'email': 3, 'newsletters': 1, 'alerts': 1, 'rate': 1, 'applications': 1, 'replica': 1, 'information': 2, 'copy': 2, 'contact': 3, 'advertise': 1, 'ad': 1, 'privacy': 6, 'terms': 6, 'service': 3, 'feedback': 1, 'view': 1, 'version': 1, 'actualmente': 1, 'estás': 1, 'en': 1, 'sitio': 1, 'eeuu': 1, 'elige': 1, 'otro': 1, 'país': 1, 'región': 1, 'para': 1, 'ver': 1, 'contenido': 1, 'específico': 1, 'según': 1, 'tu': 1, 'ubicación': 1, 'méxico': 2, 'estados': 1, 'unidos': 1, 'todos': 1, 'los': 1, 'países': 1, 'continuar': 1, 'menu': 16, 'shopping': 3, 'bag': 2, 'mac': 2, 'ipad': 3, 'iphone': 5, 'watch': 4, 'support': 2, 'applecom': 1, 'hello': 1, '8': 1, 'imagination': 1, 'shop': 6, 'list': 1, 'move': 2, '“sway”': 1, 'series': 1, '3': 1, '4k': 2, 'hdr': 1, 'era': 1, 'macbook': 1, 'light': 1, 'ahead': 1, 'footer': 1, 'itunes': 1, 'homepod': 1, 'ipod': 1, 'accessories': 1, 'cards': 1, 'genius': 1, 'bar': 1, 'field': 1, 'trip': 1, 'app': 1, 'refurbished': 1, 'clearance': 1, 'financing': 1, 'reuse': 1, 'recycling': 1, 'status': 3, 'id': 1, 'icloudcom': 1, 'values': 1, 'accessibility': 1, 'environment': 1, 'inclusion': 1, 'diversity': 1, 'supplier': 1, 'responsibility': 1, 'newsroom': 1, 'job': 2, 'opportunities': 1, 'visit': 1, '1800myapple': 1, 'reseller': 1, 'copyright': 1, 'inc': 1, 'rights': 1, 'reserved': 1, 'sales': 1, 'refunds': 1, 'legal': 1, 'world39s': 1, 'software': 5, 'development': 3, 'platform': 4, 'github': 26, 'features': 2, 'marketplace': 3, 'pricing': 1, 'dashboard': 1, 'built': 1, 'inspired': 1, 'code': 10, 'projects': 3, 'alongside': 3, 'millions': 2, 'otherdevelopers': 1, 'username': 2, 'password': 2, 'letter': 1, 'numeral': 1, 'characters': 1, 'clicking': 2, 'agree': 2, 'occasionally': 2, 'send': 2, 'related': 2, 'teams': 5, 'brings': 1, 'team': 2, 'write': 1, 'collaboration': 1, 'conversations': 1, 'reviews': 1, 'happen': 2, 'pull': 1, 'requests': 1, 'share': 2, 'weight': 1, 'improve': 1, 'chaos': 1, 'breath': 1, 'management': 3, 'happens': 1, 'issues': 1, 'mention': 1, 'teammate': 1, 'involved': 1, 'browse': 2, 'discover': 2, 'favorites—then': 1, 'using': 3, 'minutes': 1, 'integrations': 3, 'administration': 1, 'boxes': 1, 'check': 1, 'administrative': 1, 'flexible': 1, 'hosting': 3, 'authentication': 2, 'meet': 1, 'requirements': 1, 'prevent': 1, 'protected': 1, 'branches': 1, 'signed': 3, 'commits': 1, 'required': 1, 'checks': 1, 'maintain': 2, 'standard': 1, 'controlled': 1, 'encourage': 1, 'limiting': 1, 'granular': 1, 'permissions': 1, 'samlsso': 1, 'ldap': 1, '1clrcodehosting': 1, 'hosted': 1, 'securely': 2, 'reliably': 1, 'githubcom': 1, 'deploy': 1, 'enterprise': 1, 'servers': 1, 'private': 1, 'cloud': 2, 'amazon': 1, 'web': 1, 'azure': 1, 'google': 1, 'compare': 1, 'customize': 1, 'process': 2, 'intuitive': 1, 'api': 1, 'integrate': 1, 'favorites': 1, 'create': 2, 'happier': 1, 'efficient': 1, 'sometimes': 1, 'theres': 2, 'tool': 1, 'try': 1, 'welcome': 1, 'worlds': 2, 'largest': 2, 'theirprojects': 1, 'ariya': 1, 'hidayat': 1, 'phantomjs': 1, 'maintainer': 5, 'russell': 1, 'keithmagee': 1, 'pybee': 1, 'mailchimp': 1, 'marketing': 1, 'customer': 2, 'kris': 1, 'nova': 1, 'kuberneteskops': 1, 'evan': 1, 'vue': 1, 'mapbox': 1, 'frazelle': 1, 'kubernetes': 1, 'previously': 1, 'docker': 1, 'commit': 1, 'rover': 1, 'mars': 1, '73m': 1, 'repositories': 1, 'worldwide': 3, 'githubs': 1, 'users': 1, 'influential': 1, 'technologies': 1, 'sourcecommunity': 1, '26m': 1, 'experimenting': 1, 'programming': 1, 'languages': 1, 'lifes': 1, '117k': 1, 'businesses': 2, 'sizes': 1, 'started': 1, 'free': 1, 'mdash': 1, 'join': 1, 'amazing': 1, 'documentation': 1, 'atom': 1, 'electron': 1, 'desktop': 1, 'partners': 1, 'sponsorships': 1, 'blog': 1, 'careers': 1, 'press': 1, 'resources': 1, 'forum': 1, 'training': 1, 'perform': 1, 'action': 1, 'time': 1, 'tab': 2, 'window': 2, 'reload': 2, 'refresh': 2, 'session': 2}\n",
      "\n",
      "\n",
      "{'cnn': 11, 'breaking': 3, 'news': 13, 'world': 12, 'weather': 3, 'entertainment': 2, 'video': 14, 'home': 8, 'regions': 3, 'politics': 8, 'money': 4, 'tech': 6, 'sport': 3, 'travel': 5, 'style': 6, 'health': 16, 'vr': 3, 'live': 2, 'tv': 6, 'search': 7, 'raquo': 34, 'international': 11, 'edition': 9, 'arabic': 4, 'español': 4, 'set': 8, 'preference': 4, 'confirm': 4, 'africa': 4, 'americas': 2, 'asia': 3, 'china': 5, 'europe': 2, 'middle': 3, 'east': 3, 'opinion': 13, '45': 2, 'congress': 2, 'security': 4, 'nine': 2, 'trumpmerica': 2, 'business': 9, 'markets': 2, 'luxury': 4, 'stars': 2, 'screen': 2, 'binge': 2, 'culture': 6, 'media': 4, 'gadgets': 2, 'future': 4, 'startups': 2, 'football': 4, 'tennis': 2, 'equestrian': 2, 'golf': 3, 'judo': 2, 'horse': 2, 'racing': 2, 'motorsport': 2, 'sailing': 3, 'skiing': 2, 'olympics': 2, 'destinations': 2, 'food': 7, 'drink': 2, 'play': 4, 'stay': 3, 'videos': 3, 'arts': 8, 'design': 3, 'fashion': 4, 'architecture': 2, 'autos': 2, 'diet': 2, 'fitness': 2, 'living': 4, 'parenting': 2, 'family': 3, 'vital': 2, 'signs': 2, 'features': 4, 'freedom': 3, 'project': 3, 'impact': 2, 'inside': 4, '2': 4, 'degrees': 2, 'heroes': 2, 'feature': 5, 'hln': 2, 'schedule': 2, 'worldwide': 2, 'cnnvr': 2, 'watch': 2, 'archives': 2, 'profiles': 2, 'leadership': 3, 'pressroom': 2, 'partner': 2, 'sites': 2, 'ireport': 2, 'espantildeol': 1, 'facebook': 2, 'twitter': 2, 'instagram': 1, 'copy2017cablenewsnetwork': 1, 'turnerbroadcastingsysteminc': 1, 'allrightsreserved': 1, 'cnnsanstradecopy2016cablenewsnetwork': 1, 'terms': 3, 'privacy': 2, 'policy': 2, 'adchoices': 1, 'msa': 1, 'statement': 1, 'advertise': 2, 'store': 2, 'newsletters': 2, 'help': 6, 'transcripts': 1, 'license': 1, 'footage': 1, 'newsource': 1, 'york': 11, 'times': 13, 'multimedia': 2, 'nytimescom': 3, 'supports': 1, 'internet': 1, 'explorer': 1, '9': 1, 'earlier': 1, 'please': 1, 'upgrade': 2, 'browser': 1, 'learn': 2, 'sections': 4, 'skip': 2, 'content': 1, 'navigation': 8, 'subscribe': 5, 'log': 1, '0': 1, 'settings': 1, 'english': 1, '中文': 1, 'chinese': 1, 'monday': 2, 'december': 1, '4': 1, '2017': 5, 'todays': 5, 'paper': 2, 'quick': 1, 'site': 10, 'ny': 2, 'science': 4, 'sports': 4, 'magazine': 8, 'real': 5, 'estate': 5, 'close': 1, 'text': 1, 'input': 1, 'mobile': 3, 'top': 5, 'cvs': 3, 'deal': 4, 'buy': 4, 'aetna': 3, 'reshape': 3, 'industry': 5, 'michael': 4, 'de': 1, 'la': 1, 'merced': 1, 'reed': 2, 'abelson': 1, '1024': 1, 'pm': 3, 'et': 8, '69': 3, 'billion': 3, 'combine': 1, 'drugstore': 1, 'giant': 1, 'united': 2, 'biggest': 1, 'insurers': 1, 'companies': 1, 'touch': 2, 'basic': 1, 'services': 2, 'people': 2, 'regularly': 1, 'critics': 1, 'worry': 1, 'customers': 2, 'choices': 2, 'sharply': 1, 'limited': 1, 'cvsaetna': 3, 'merger': 3, 'benefit': 3, 'consumers': 3, 'trump': 10, 'lashes': 1, 'saying': 1, 'fbi': 2, 'tatters': 1, 'shear': 1, 'extraordinary': 1, 'attack': 1, 'law': 1, 'enforcement': 1, 'body': 1, 'own': 3, 'government': 4, 'president': 5, 'accused': 1, 'career': 2, 'investigators': 1, 'bias': 1, 'emails': 1, 'dispute': 1, 'claim': 2, 'flynn': 2, 'acted': 1, 'russia': 2, 'timeline': 1, 'phone': 1, 'calls': 1, 'shutdown': 2, 'looms': 2, 'republicans': 3, 'stopgap': 1, 'measure': 1, 'thomas': 1, 'kaplan': 1, 'funding': 1, 'expire': 1, 'friday': 1, 'embroiled': 1, 'feud': 1, 'democratic': 2, 'trying': 2, 'pass': 1, 'twoweek': 1, 'delay': 1, 'negotiate': 1, 'longterm': 1, 'spending': 3, 'package': 1, 'quarry': 1, 'spend': 2, 'gop': 2, 'tax': 7, 'cut': 2, 'isnt': 1, 'stone': 1, 'natalie': 1, 'kitroeff': 1, 'overhaul': 1, 'reinvigorate': 1, 'corporate': 1, 'wave': 1, 'investment': 1, 'hiring': 1, 'raises': 1, 'boardrooms': 1, 'executives': 1, 'ideas': 1, 'savings': 1, 'mcconnell': 3, 'care': 4, 'failure': 2, 'map': 3, 'success': 2, 'bill': 2, 'offers': 3, 'lastminute': 1, 'breaks': 1, 'developers': 1, 'banks': 1, 'oil': 1, 'met': 5, 'opera': 2, 'suspends': 3, 'james': 2, 'levine': 3, 'amid': 4, 'abuse': 2, 'accusations': 2, 'cooper': 2, '1056': 1, 'conductor': 1, 'sexually': 1, 'abused': 1, 'decades': 2, 'ago': 1, 'teenagers': 1, 'suspended': 1, 'fourdecade': 1, 'relationship': 1, '74': 1, 'canceled': 1, 'scheduled': 1, 'engagements': 1, 'comments': 5, 'sexual': 3, 'assault': 1, 'furor': 1, 'roils': 2, 'historically': 2, 'black': 3, 'colleges': 4, 'caitlin': 1, 'dickerson': 1, 'stephanie': 1, 'saul': 1, '223': 1, 'am': 5, 'spelman': 1, 'morehouse': 1, 'atlanta': 1, 'schools': 1, 'nationwide': 1, 'fielding': 1, 'complaints': 1, 'misconduct': 1, 'south': 3, 'korea': 4, 'start': 2, 'air': 1, 'force': 1, 'drills': 1, 'heightened': 1, 'tensions': 1, 'jerusalem': 1, 'debate': 3, 'simmers': 1, 'kushner': 1, 'optimistic': 1, 'substantive': 1, 'assessment': 1, 'uae': 1, 'denies': 1, 'yemen': 1, 'rebels': 1, 'fired': 1, 'missile': 1, 'abu': 1, 'dhabi': 1, 'nuclear': 1, 'plant': 2, 'disney': 1, 'resumed': 1, 'talks': 1, 'fox': 1, 'daily': 2, '360': 2, '107': 1, 'seven': 2, 'wonders': 2, 'taj': 1, 'mahal': 1, 'jeremy': 2, 'woodhousegetty': 1, 'images': 1, 'documentaries': 1, 'yousur': 2, 'alhlou': 2, 'independence': 1, 'egypt': 1, 'dangerous': 1, 'egyptian': 1, 'woman': 2, 'rent': 2, 'apartment': 3, 'friends': 1, 'country': 1, 'personal': 1, 'routinely': 1, 'compromised': 1, 'makes': 1, 'rebel': 1, 'mona': 1, 'elnaggar': 1, 'mark': 1, 'meatto': 1, 'rebelled': 2, 'religion': 2, 'shes': 2, 'run': 2, 'briefing': 1, 'patrick': 1, 'boehler': 1, 'mike': 1, 'ives': 1, '254': 1, 'heres': 1, 'day': 2, 'listen': 1, 'washington': 3, 'sean': 2, 'hannity': 2, 'conservative': 1, 'host': 2, 'spoke': 1, 'matthew': 1, 'shaer': 1, 'contributing': 1, 'writer': 1, 'opinionated': 1, 'considers': 1, 'journalist': 1, 'listening': 1, 'audio': 1, 'follow': 1, 'apple': 1, 'podcasts': 1, 'radio': 1, 'public': 1, 'stitcher': 1, 'smarter': 1, '6': 1, '2018': 1, 'tim': 1, 'herrera': 1, 'perfect': 1, 'excuse': 1, 'deep': 1, 'look': 3, 'handle': 1, 'activity': 1, 'trackers': 1, 'dont': 2, 'gretchen': 1, 'reynolds': 1, 'cant': 1, 'child': 1, 'fitbit': 1, 'christmas': 1, 'expect': 1, 'active”': 1, 'expert': 1, '300': 1, 'gifts': 1, '75': 1, 'editors': 1, '15': 1, 'categories': 1, 'holiday': 2, 'gift': 2, 'guide': 4, 'journalism': 1, 'matters': 1, 'essential': 1, 'lure': 2, 'life': 3, 'cold': 3, 'darkness': 3, 'norilsk': 1, 'slave': 1, 'labor': 1, 'camp': 1, 'prospering': 1, 'source': 1, 'palladium': 1, 'bad': 1, 'except': 2, 'months': 1, 'temperatures': 1, 'minus': 1, '80': 1, 'andrew': 2, 'higgins': 1, 'alabamas': 1, 'disdain': 1, 'democrats': 1, 'senate': 1, 'race': 3, 'alan': 1, 'blinder': 1, 'campbell': 1, 'robertson': 1, 'jess': 1, 'bidgood': 1, '925': 1, 'nominee': 1, 'doug': 1, 'jones': 1, 'widely': 1, 'admired': 1, 'roy': 2, 'moore': 2, 'voters': 2, 'struggling': 3, 'past': 1, 'party': 2, 'affiliation': 1, 'hell': 1, 'call': 1, 'costs': 1, 'rebuilding': 1, 'syria': 1, 'political': 1, 'somini': 1, 'sengupta': 1, 'ravaged': 1, 'city': 5, 'homs': 1, 'symbolize': 1, 'bashar': 1, 'alassads': 1, 'ruthless': 1, 'tactics': 1, 'embody': 1, 'looming': 1, 'challenge': 1, 'war': 1, 'approaches': 1, 'reconstruction': 1, 'windows': 1, 'london': 1, 'paris': 1, 'berlin': 1, 'wintry': 1, 'décor': 1, 'season': 1, 'designers': 1, 'incorporated': 1, 'themes': 1, 'displays': 1, 'virtual': 2, 'currency': 1, 'boom': 1, 'hits': 1, 'suhyun': 1, 'lee': 1, 'nathaniel': 1, 'popper': 1, 'bitcoin': 1, 'currencies': 1, 'booming': 1, 'regular': 1, 'investors': 1, 'leading': 1, 'global': 1, 'frenzy': 1, 'paid': 1, 'parental': 1, 'leave': 1, 'ginia': 1, 'bellafante': 1, 'citys': 2, 'program': 1, 'applies': 1, 'managers': 1, 'omits': 1, 'vast': 1, 'majority': 1, 'workers': 1, 'teachers': 1, 'police': 2, 'officers': 1, 'park': 1, 'rangers': 1, 'unions': 2, 'dealbook': 2, 'newsletter': 2, 'columnist': 1, 'ross': 2, 'sorkin': 1, 'colleagues': 1, 'sense': 1, 'major': 4, 'headlines': 1, '—': 2, 'power': 3, 'brokers': 1, 'shape': 2, 'allnew': 1, 'confidential': 1, 'tip': 1, 'provide': 1, 'materials': 1, 'journalists': 1, 'rises': 1, 'australia': 3, 'rely': 1, 'america': 3, 'prominent': 1, 'strategist': 1, 'clash': 1, 'remain': 1, 'dominant': 1, 'gay': 1, 'australian': 2, 'politician': 1, 'proposes': 1, 'samesex': 2, 'marriage': 3, 'proposal': 1, 'legalizing': 1, 'final': 1, 'stages': 1, 'passage': 1, 'parliament': 1, 'revered': 1, 'figure': 1, 'feels': 2, 'ripples': 1, 'weinstein': 1, 'scandal': 1, 'allegations': 1, 'don': 1, 'burke': 1, 'longtime': 1, 'star': 1, '“bloke”': 1, 'masculinity': 1, 'book': 2, 'review': 11, 'jews': 1, 'funny': 1, 'daubers': 1, '“jewish': 1, 'comedy': 1, 'serious': 1, 'history”': 1, 'looks': 1, 'laughter': 1, '2000': 1, 'laying': 1, 'detailed': 1, 'taxonomy': 1, 'humor': 1, 'norman': 2, 'baker': 2, 'seeker': 1, 'adventure': 1, 'dies': 3, '89': 2, 'crossed': 2, 'atlantic': 2, 'papyrus': 1, 'raft': 2, 'adventures': 1, 'brooklyn': 2, 'boy': 1, 'unconventional': 1, 'traveler': 1, 'island': 4, 'revived': 3, 'ravishing': 3, '1990': 1, 'musical': 1, 'fable': 1, 'love': 1, 'death': 2, 'temperamental': 1, 'gods': 1, 'french': 1, 'antilles': 1, 'bold': 1, 'delight': 1, 'critic': 1, 'writes': 1, 'whats': 1, 'bigger': 1, 'threat': 1, 'normalization': 1, 'alarmism': 1, 'ivan': 1, 'krastev': 1, 'rightwing': 1, 'populists': 1, 'thrive': 1, 'tense': 1, 'polarization': 1, 'shouldnt': 1, 'fractured': 1, 'roger': 1, 'cohen': 1, 'lurches': 1, 'peace': 2, 'fragile': 1, 'truth': 1, 'blurred': 1, 'billy': 2, 'bush': 2, 'yes': 2, 'donald': 3, 'cost': 3, 'clinton': 1, 'election': 1, 'plot': 1, 'saudi': 1, 'arabias': 1, 'fight': 2, 'qatar': 1, '202': 1, 'stop': 1, 'north': 1, 'act': 1, 'israel': 1, 'nitsana': 1, 'darshanleitner': 1, 'negotiations': 1, 'sanctions': 1, 'havent': 1, 'stopped': 1, 'kim': 1, 'regime': 1, 'financial': 1, 'warfare': 1, 'catalans': 1, 'owe': 1, 'explanation': 1, 'albert': 1, 'rivera': 1, '215': 1, 'coexistence': 1, 'union': 1, 'options': 1, 'articulate': 1, 'common': 1, 'spain': 1, 'soil': 2, 'dirty': 2, 'green': 4, 'planet': 2, 'devaluing': 2, 'women': 4, 'losing': 1, 'elections': 1, '201': 1, 'user': 1, 'subscriptions': 5, 'royal': 2, 'impose': 2, 'story': 4, 'choice': 2, 'jayz': 4, 'editor': 2, 'insider': 2, 'crossword': 4, 'todayrsquos': 2, 'puzzle': 2, 'wordplay': 1, 'watching': 1, 'neediest': 2, 'serving': 2, 'community': 1, 'ozella': 1, 'finlay': 2, 'sister': 1, 'ran': 1, 'pats': 1, 'luncheonette': 1, '1970s': 1, 'days': 1, 'week': 2, 'restaurant': 1, 'closed': 1, 'ms': 1, 'embarked': 1, 'volunteering': 1, '106th': 1, 'fund': 1, 'provided': 1, 'direct': 1, 'assistance': 1, 'beyond': 2, 'donate': 1, 'advertisers': 1, 'loading': 2, 'explore': 1, 'player': 1, 'previous': 1, 'desk': 1, 'vulgarians': 1, 'letters': 2, 'talk': 2, 'male': 2, 'sex': 1, 'drive': 1, 'readers': 1, 'discuss': 1, 'writers': 1, 'mistreatment': 1, 'rooted': 1, '“brutality': 1, 'sexuality”': 1, 'sisters': 1, 'nurturing': 1, 'countless': 1, 'haircuts': 1, 'dinner': 1, 'sunday': 3, 'happy': 1, 'anniversary': 1, 'heart': 1, 'transplant': 1, 'scallop': 2, 'spaceage': 2, 'eyes': 3, 'sicilys': 2, 'emerald': 2, 'gem': 2, 'bronte': 2, 'pistachio': 2, 'doctors': 1, 'fail': 1, 'children': 1, 'sterilized': 1, 'theater': 3, 'broadway': 1, 'pro': 1, 'basketball': 1, 'ugly': 1, 'streaks': 1, 'warriors': 1, 'knicks': 1, 'terrible': 1, 'navajo': 1, 'economy': 1, 'american': 1, 'singlefamily': 1, '11yearold': 1, 'spent': 1, 'jail': 1, 'serial': 1, 'killer': 1, 'cellmate': 1, 'plan': 1, 'snubs': 1, 'palestinians': 1, 'company': 2, 'actually': 1, 'plans': 1, 'chinas': 1, 'ai': 1, 'advances': 1, 'oped': 4, 'contributor': 1, 'abc': 1, 'reporter': 1, 'brian': 1, 'erroneous': 1, 'report': 1, 'bound': 1, 'history': 1, 'roiled': 1, 'metoo': 1, 'moment': 1, 'ministers': 1, 'revive': 1, 'martin': 1, 'luther': 1, 'kings': 1, '1968': 1, 'poverty': 1, 'campaign': 1, 'technology': 1, 'shift': 1, '41': 1, 'lithuania': 1, 'feed': 1, 'drone': 1, 'maker': 1, 'dji': 1, 'sending': 2, 'data': 1, 'officials': 1, 'snapchat': 1, 'remakes': 1, 'splitting': 1, 'social': 1, 'el': 1, 'museos': 1, 'leader': 1, 'build': 1, 'bridge': 1, 'latino': 1, 'kennedy': 1, 'center': 2, 'honors': 1, 'evoke': 1, 'pushes': 1, 'avoid': 1, 'path': 1, 'tricky': 1, 'drag': 1, 'event': 1, 'horizon': 1, 'resort': 1, 'canyon': 1, 'ranch': 1, 'succumbs': 1, 'botox': 1, 'rhythm': 1, 'colombias': 1, 'salsa': 1, 'capital': 1, 'movies': 2, 'water': 1, 'altogether': 1, 'wonderful': 1, 'coco': 1, 'tops': 1, 'box': 1, 'office': 1, 'quiet': 1, 'wonder': 1, 'wheel': 1, 'woody': 1, 'allens': 1, 'coney': 1, 'memory': 1, 'palace': 1, 'boulevard': 1, 'stabs': 1, 'queens': 1, 'drives': 1, 'helpers': 1, 'acting': 1, 'studios': 1, 'matter': 2, 'raiders': 2, '24': 1, 'giants': 2, '17': 1, 'eli': 1, 'manning': 1, 'warms': 1, 'bench': 1, 'college': 4, 'playoff': 1, 'alabama': 1, 'ohio': 1, 'tiger': 1, 'woods': 1, 'relishes': 1, 'struggle': 1, 'upanddown': 1, 'return': 1, 'sleepwalking': 1, '70s': 1, 'downtown': 1, 'riot': 1, 'silly': 1, 'seas': 1, 'pirates': 1, 'penzance': 1, '2017s': 1, 'supermoon': 1, 'moons': 1, 'super': 1, 'hundreds': 2, 'trilobites': 1, 'fossilized': 1, 'pterosaur': 1, 'eggs': 1, 'uncovered': 1, 'obituaries': 2, 'leon': 1, 'carried': 1, 'battle': 1, 'tarawa': 1, '98': 1, 'adventurer': 1, 'william': 1, 'mayer': 1, 'wideranging': 1, 'composer': 1, 'dead': 1, '91': 1, 'television': 2, 'saturday': 1, 'night': 1, 'jabs': 1, 'matt': 1, 'lauer': 1, 'jeanclaude': 2, 'van': 2, 'damme': 2, 'plays': 1, 'kicks': 1, 'word': 1, 'claire': 1, 'foy': 1, 'ready': 1, 'quit': 1, 'playing': 1, 'queen': 1, 'transplanted': 1, 'uterus': 1, 'birth': 1, 'footsteps': 1, 'inescapable': 1, 'poet': 1, 'nicaragua': 1, 'getaway': 1, 'sos': 1, 'rise': 1, 'apps': 1, '36': 2, 'hours': 2, 'shanghai': 1, 'books': 4, '10': 3, 'enthusiast': 1, 'praise': 1, 'romance': 1, '100': 1, 'notable': 1, 'education': 4, 'applicant': 1, 'getting': 1, 'dream': 1, 'six': 1, 'myths': 1, 'choosing': 2, 'pasteles': 1, 'puerto': 1, 'rican': 1, 'tradition': 1, 'special': 1, 'savor': 1, 'kitchen': 1, 'meat': 1, 'potatoes': 1, 'rachel': 1, 'brosnahans': 1, 'comic': 1, 'timing': 1, 'answer': 1, 'ferry': 1, 'changing': 1, 'brooklynqueens': 1, 'waterfront': 1, 'ticket': 1, '38': 1, 'million': 1, 'penthouse': 1, 'west': 1, 'chelsea': 1, 'novembers': 1, 'sale': 3, 'renters': 1, 'jersey': 1, 'upshot': 1, 'generation': 1, 'grumpy': 1, 'unhappy': 1, 'youre': 1, '50': 1, 'bills': 1, 'automatic': 1, 'cuts': 1, 'pages': 1, 'explained': 1, 'automobiles': 2, 'detroit': 2, 'exciting': 1, 'indian': 1, 'automakers': 1, 'sign': 1, 'comeback': 1, 'wheels': 1, 'near': 1, 'driving': 1, 'forward': 1, 'hands': 1, 'jenna': 1, 'lyonss': 1, 'space': 2, 'discusses': 1, 'rap': 1, 'trumps': 1, 'studio': 1, 'artist': 1, 'painted': 1, 'landlord': 1, 'stage': 1, 'ronda': 1, 'kaysen': 1, 'tenant': 1, 'protect': 1, 'garden': 1, 'provides': 1, 'access': 1, 'outside': 1, 'homes': 1, 'mortgage': 1, 'calculator': 1, 'emailed': 1, 'viewed': 1, 'trending': 1, 'recommended': 1, 'page': 1, 'index': 2, 'corrections': 1, 'columnists': 1, 'editorials': 1, 'contributors': 1, 'art': 1, 'dance': 1, 'music': 1, 'nyc': 3, 'events': 3, 'jobs': 1, 'weddings': 1, 'celebrations': 1, 'listings': 1, 'reader': 1, 'classifieds': 1, 'tools': 1, 'photography': 1, 'nyt': 1, 'journeys': 1, 'manage': 1, 'account': 1, 'nytco': 1, 'delivery': 1, 'digital': 1, 'email': 1, 'alerts': 1, 'rate': 1, 'applications': 1, 'replica': 1, 'information': 2, 'copy': 1, 'contact': 1, 'ad': 1, 'service': 1, 'feedback': 1, 'view': 1, 'version': 1}\n",
      "\n",
      "\n",
      "{'stack': 19, 'overflow': 14, 'developers': 4, 'learn': 6, 'share': 4, 'build': 3, 'careers': 2, 'questions': 9, 'developer': 3, 'jobs': 3, 'tags': 2, 'users': 2, 'current': 1, 'community': 2, 'help': 5, 'chat': 1, 'meta': 3, 'communities': 2, 'sign': 3, 'log': 2, 'customize': 1, 'list': 3, 'exchange': 4, 'company': 3, 'blog': 2, 'tour': 1, 'start': 1, 'quick': 1, 'overview': 1, 'site': 3, 'center': 1, 'detailed': 1, 'answers': 89, 'discuss': 1, 'workings': 1, 'policies': 1, 'business': 3, 'hiring': 1, 'posting': 1, 'ads': 2, 'month': 2, '50': 3, 'million': 1, 'knowledge': 1, 'join': 2, 'worlds': 1, 'largest': 1, 'google': 5, 'facebook': 3, 'display': 4, 'name': 1, 'email': 2, 'address': 4, 'password': 1, 'registering': 1, 'agree': 1, 'privacy': 2, 'policy': 2, 'terms': 1, 'service': 3, 'solutions': 1, 'looking': 2, 'understand': 1, 'engage': 1, 'hire': 1, 'raquo': 1, 'top': 1, '351': 1, 'featured': 1, 'hot': 3, 'week': 1, '0': 142, 'votes': 74, '1': 53, 'view': 2, 'change': 3, 'galaxy': 1, 's8': 1, 'navigation': 1, 'bar': 1, 'color': 1, 'programmatically': 2, 'java': 8, 'android': 15, 'xamarin': 1, 'samsunggalaxy': 1, '25': 2, 'secs': 11, 'ago': 96, 'alsultan': 1, 'resolve': 1, 'ldquodyld': 1, 'library': 2, 'loaded': 1, 'executablepathrdquo': 1, 'error': 6, 'python': 8, 'dyld': 1, 'executablepath': 1, '26': 3, 'newbiecoder': 1, '2': 31, 'views': 95, 'extjs': 2, '411': 2, 'custom': 1, 'text': 3, 'multiselect': 2, 'combobox': 2, 'javascript': 8, 'extjs41': 1, '28': 2, 'tobsenb': 1, '106': 2, 'sapui5': 3, 'data': 5, 'binding': 1, 'xml': 1, 'odata': 3, '38': 5, 'sven': 1, 'schuberth': 1, 'vote': 22, '19': 3, 'handle': 1, 'array': 3, '39promis39': 1, 'nodejs': 5, 'firebase': 3, 'answered': 13, '44': 1, 'willwoo': 1, '124': 1, 'pandas': 2, 'replace': 2, 'values': 2, 'multiple': 2, 'times': 1, 'series': 1, 'shift': 1, '47': 3, 'scipy': 1, '246': 1, '5': 14, 'understanding': 1, 'rest': 3, 'api': 8, 'webservices': 1, '48': 2, 'david': 1, '34': 1, '4': 19, '21': 3, 'regex': 2, 'aba': 1, 'match': 1, 'abab': 1, '49': 2, 'serhat': 1, 'cevikel': 1, '440': 1, 'ssrs': 1, 'report': 2, 'blank': 1, 'space': 3, 'issue': 1, 'reportingservices': 1, 'ssrs2012': 1, 'ssrstablix': 1, 'modified': 28, '51': 3, 'sindu': 1, 'nehaa': 1, '3': 33, 'instanceof': 1, 'function': 1, 'parameter': 2, 'returns': 2, 'false': 1, 'typescriptangular': 1, 'angular': 3, 'typescript': 2, '57': 1, 'nicholas': 1, '369': 1, '7': 11, 'check': 2, 'bad': 1, 'words': 2, 'vbnet': 3, 'caps': 1, '58': 1, '7huan': 1, '30': 3, 'answer': 12, '6': 15, 'reload': 1, 'spfx': 2, 'web': 3, 'post': 4, 'reactjs': 2, 'sharepoint': 2, 'min': 7, 'connor': 1, 'dickson': 1, 'create': 1, 'socketio': 2, 'app': 5, 'accessible': 1, 'website': 1, 'client': 3, 'zero8': 1, '402': 1, 'time': 5, 'delay': 1, 'addchild': 2, 'loop': 1, 'causing': 1, 'swift': 5, 'arrays': 5, 'forloop': 1, 'skaction': 1, 'dave': 1, 'delphi': 2, 'sql': 3, 'return': 1, 'multidimensional': 1, 'multidimensionalarray': 1, 'mommy': 1, '150': 1, 'redirect': 4, 'devtty': 1, 'socket': 1, 'stdin': 1, 'stdout': 3, 'previously': 1, 'closed': 2, 'sockets': 1, 'filedescriptor': 1, 'tty': 1, 'programmer': 1, 'dude': 1, '253k': 1, 'debian': 1, 'kernel': 2, 'compiling': 1, 'amateur': 1, 'radio': 1, 'support': 1, 'linux': 2, 'xtoyred': 1, '14': 6, '23k': 1, 'throttle': 2, 'queue': 1, 'requests': 1, 'due': 1, 'cap': 1, 'asynchronous': 1, 'request': 2, 'manohar': 1, 'reddy': 1, 'poreddy': 1, '2048': 1, 'limiting': 2, 'raylength': 1, 'collider': 1, 'bound': 1, 'unity3d': 1, 'raycasting': 1, 'mins': 78, 'hojeong': 1, 'lee': 1, 'foldable': 1, 'inherits': 1, 'functor': 1, 'frege': 2, 'types': 1, 'ohashi': 1, '189': 1, 'invalid': 1, 'twofactor': 1, 'code': 5, 'gitlab': 1, 'mike': 1, 'anderson': 1, '314': 1, 'fetch': 2, 'image': 1, 'pdf': 1, 'file': 1, 'json': 11, 'tableviewcell': 1, 'uitableview': 1, 'swift3': 1, 'uiimageview': 1, 'eduard': 1, 'malakhov': 1, '778': 1, '3k': 1, 'direction': 2, 'button': 2, 'mapview': 1, 'using': 7, 'googlemaps': 4, 'ios': 4, 'anson': 1, '110': 1, '8': 16, 'result': 1, 'osx': 5, 'windows': 2, 'netcore': 1, 'sea': 1, 'cucumber': 1, '11': 5, 'mysql': 4, 'mutiple': 1, 'performance': 2, 'inacio': 1, '32': 2, 'creating': 2, 'skeleton': 1, 'project': 2, 'directory': 3, 'python27': 1, 'powershell': 3, 'directorystructure': 1, 'mkdir': 1, 'jeanfran231ois': 1, 'corbett': 1, '265k': 1, 'query': 2, 'takes': 1, 'graph': 1, 'neo4j': 1, 'neo4japoc': 1, 'swapnil': 1, '487': 1, 'git': 2, 'option': 1, 'doesn39t': 2, 'studio': 3, 'anymore': 1, 'androidstudio': 1, 'versioncontrol': 1, 'marina': 1, 'liu': 1, 'msft': 1, '105k': 1, '12': 5, 'gwt': 2, 'bootstrap': 1, 'datetimepicker': 1, 'bootstrapdatetimepicker': 1, 'knarf': 1, '1200': 1, 'getcolumndisplayrectangle': 1, 'value': 3, 'rows': 1, 'winforms': 1, 'datagridview': 1, 'net40': 1, 'ghiboz': 1, '3657': 1, '2k': 1, 'eclipsehibernate': 1, 'tools': 1, 'archive': 1, 'classpath': 1, 'entry': 1, 'exist': 1, 'eclipse': 1, 'spring': 1, 'hibernate': 1, 'postgresql': 4, 'kenneth': 1, 'kolano': 1, 'goroutine': 1, 'leakage': 1, 'happen': 1, 'channel': 1, 'buffer': 1, 'inputs': 1, 'output': 1, 'flimzy': 1, '258k': 1, 'ofbiz': 2, 'log4j': 2, 'add': 5, 'item': 3, 'fildor': 1, '6382': 1, 'framework7': 2, 'router': 1, 'converting': 1, 'apk': 1, 'cordova': 1, 'suat': 1, 'atan': 1, 'phd': 1, 'read': 1, 'tibco': 1, 'message': 1, 'grails': 2, 'jms': 3, 'grails3': 1, 'abhiroop': 1, '27': 2, 'oracle': 3, 'matched': 1, 'unmatched': 1, 'structured': 1, 'table': 1, 'plsql': 1, 'oracle11g': 1, 'simone': 1, 'xavier': 2, 'forward': 1, 'slash': 2, 'automatically': 2, 'converted': 1, 'backward': 1, 'cakephp': 2, 'htaccess': 2, 'routing': 1, 'sushilkumar': 1, '215': 1, 'author': 1, 'weights': 1, 'xgboost': 2, 'machinelearning': 1, 'gary': 1, 'yong': 1, 'close': 1, 'modal': 2, 'successful': 1, 'local': 1, 'else': 1, 'bootstrapmodal': 1, 'angular2services': 1, 'anuj': 1, 'elementwise': 1, 'multidimension': 1, 'index': 2, 'tensorflow': 3, 'user1190882': 1, '2077': 1, '13': 1, 'django': 4, 'oauth': 2, 'separate': 1, 'resource': 1, 'authorization': 1, 'server': 5, 'djangooauth': 1, 'pythonenthusiast': 1, '3263': 1, 'installation': 2, 'dockerfile': 2, 'ahorsewithnoname': 1, '237k': 1, 'methods': 1, 'sorting': 1, 'arraylist': 1, 'dm': 1, 'jhones': 1, 'set': 3, 'location': 1, 'contains': 1, 'ldquordquo': 1, 'user91504': 1, '535': 1, 'classcastexception': 1, 'calling': 1, 'dialogfragment': 2, 'recyclerview': 1, 'androidrecyclerview': 1, 'user8601021': 1, '41': 2, 'correct': 1, 'extract': 1, 'video': 5, 'render': 1, 'surface': 1, 'huawei': 2, 'nova': 1, 'opengles': 1, 'anton111111': 1, '69': 1, 'intellij': 1, 'idea': 2, 'plugin': 1, 'dev': 1, 'missing': 1, 'gson': 1, 'intellijidea': 1, 'intellijplugin': 1, 'ice1000': 1, '1030': 1, 'schedule': 1, 'delayed': 1, 'mailer': 2, 'job': 1, 'resque': 3, 'scheduler': 1, 'rubyonrails': 5, 'resquescheduler': 1, 'strohy1210': 1, '163': 1, 'tokens': 1, 'cookie': 1, 'authentication': 4, 'cookies': 1, 'aspnetcore': 1, 'alexk': 1, 'label': 2, 's233rgio': 1, 'wilker': 1, '55': 1, 'reduce': 1, 'size': 1, 'sent': 1, 'twilio': 2, 'reliably': 1, 'low': 1, 'bandwidths': 1, 'videostreaming': 1, 'lightbringer': 1, '67': 1, 'pass': 1, 'znclient': 1, 'method': 1, 'smalltalk': 1, 'pharo': 1, 'pharocloud': 1, 'ludo': 1, '24': 1, 'calculate': 2, 'difference': 2, 'hours': 1, 'php': 3, 'akrout': 1, '1037': 1, 'deal': 1, 'simple': 1, 'cnn39s': 1, 'loss': 1, 'convneuralnetwork': 1, '韩家辉': 1, 'relational': 1, 'division': 1, 'luke4211': 1, 'can39t': 1, 'swatch': 1, 'magento': 2, 'attributes': 2, 'magento2': 1, 'jed': 1, '641': 1, 'visual': 1, 'standard': 1, 'style': 2, 'linting': 1, 'files': 1, 'network': 4, 'visualstudiocode': 1, 'standardjs': 1, 'rubjo': 1, '9': 7, 'access': 1, 'recorded': 1, 'filepath': 1, 'reactnative': 3, 'er': 1, 'ekta': 1, 'sahu': 1, 'hide': 2, 'imageview': 2, 'textwatcher': 2, 'emilly': 1, 'handling': 1, 'buttons': 1, 'xbox': 2, 'media': 1, 'remote': 1, 'uwp': 1, 'windowsphone': 1, 'jakub': 1, 'krampl': 1, '1436': 1, '22': 1, 'generic': 1, 'foreign': 1, 'key': 3, 'forms': 1, 'saji': 1, '193': 1, 'id': 3, 'removed': 1, 'url': 2, 'original': 1, 'wordpress': 2, 'permalinks': 1, 'gokul': 1, 'anand': 1, '15': 4, 'paramiko': 2, 'signalling': 1, 'python3x': 1, '10': 8, 'amon': 1, 'sunspot': 2, 'dynamic': 1, 'neongrau': 1, '374': 1, '46': 1, 'date': 1, 'correctly': 1, 'ui': 1, 'enum': 1, 'mac': 1, 'macoshighsierra': 1, 'macbookprotouchbar': 1, 'sergey': 1, 'moskvin': 1, 'update': 1, 'null': 1, 'classic': 1, 'asp': 1, 'sqlserver': 1, 'aspclassic': 1, 'naa': 1, 'sending': 1, 'nested': 1, 'rails': 3, 'hapijs': 1, 'railsnjs': 1, 'validation': 1, 'datatype': 1, 'activerecord': 2, 'postgres': 1, 'ruby': 4, 'rubyonrails5': 1, 'jcdjulian': 1, '324': 1, 'isn39t': 1, 'maps': 1, 'reloading': 1, 'coordinates': 1, 'detail': 1, 'reactredux': 1, 'user74843': 1, '42': 1, 'videocaptureelement': 1, 'newvideosample': 1, 'event': 2, 'fired': 1, 'wpf': 1, 'directshow': 1, 'wpfmediakit': 1, 'xmedeko': 1, '3020': 1, 'modjkdll': 1, 'tomcatconnectors1242src': 1, 'apache': 1, 'tomcat': 1, 'undead': 1, 'left': 2, 'click': 1, 'exists': 1, 'database': 2, 'reactnativefirebase': 1, 'firebasedatabase': 1, 'reactnativeandroid': 1, 'reactnativeios': 1, 'gajjar': 1, 'tejas': 1, 'capture': 1, 'screen': 1, 'user': 6, 'screencapture': 1, '16': 5, 'nathan': 1, '1496': 1, 'ssh': 2, 'vagrant': 2, 'username': 1, 'vagrantfile': 1, 'jma': 1, '741': 1, 'addtoset': 1, 'mongodb': 2, 'unique': 1, 'ynkdk': 1, '192': 1, 'deploy': 1, 'version': 2, 'weblogic': 2, 'throw': 1, 'javaxmanagementinstancealreadyexistsexception': 1, 'deployment': 1, 'springjms': 1, 'var': 1, 'enable': 1, 'run': 1, 'addon': 2, 'kodi': 2, '17': 5, 'razze': 1, '576': 1, 'nginx': 2, 'mobile': 3, 'tablet': 2, 'redirection': 1, 'nginxlocation': 1, 'ken': 1, 'villanueva': 1, 'tapdasan': 1, 'gmail': 4, 'appengine': 1, 'googleappengine': 1, 'user3259937': 1, '126': 1, 'struct': 1, 'irwan': 1, '191': 1, 'splitter': 1, 'component': 1, 'reacting': 1, 'rtl': 1, 'apmodule': 1, 'kendouiangular2': 1, 'idekkers': 1, '33': 1, 'iis': 2, 'flask': 2, 'hosting': 1, 'flasksqlalchemy': 1, '18': 5, 'machazthegamer': 1, 'allow': 1, 'public': 1, 'private': 1, 'meteor': 2, 'evans': 1, '3908': 1, 'certificate': 1, 'chain': 1, 'keystore': 1, 'ssl': 1, 'keytool': 1, 'ca': 1, 'cer': 1, 'alertdialog': 1, 'sqlcontext': 1, 'dataset': 2, 'rdd': 2, 'containing': 1, 'strings': 1, 'spark': 1, 'scala': 1, 'apachespark': 1, 'osk': 1, '123': 1, 'map': 1, 'published': 1, 'playstore': 1, 'sha1': 1, 'beta': 1, 'beam': 1, 'banner': 1, 'ldquoupdate': 1, 'license': 1, 'expire': 1, 'daysrdquo': 1, 'liferay': 1, 'liferay7': 1, 'nicolas': 1, 'raoul': 1, '30k': 1, '39authorized': 2, 'uris39': 1, 'origins39': 1, 'credentials': 1, 'googleapiclient': 1, 'googlelogin': 1, 'dmitry': 1, '2434': 1, 'detect': 2, 'line': 1, 'ace': 2, 'editor': 2, '35': 2, 'aa': 1, 'noman': 1, '704': 1, 'aspnet': 2, 'mvc': 1, 'viewmodel': 2, 'edit': 2, 'empty': 1, 'fields': 1, 'identified': 1, 'riwi': 1, 'guzzle6': 2, 'pfxcertificate': 1, '36': 1, 'jjei': 1, '385': 1, 'mock': 1, 'agent': 1, 'mocha': 2, 'unittesting': 1, 'automation': 1, 'useragent': 1, '37': 1, 'nativ': 1, 'barak': 1, 'fastest': 1, 'eta': 1, 'real': 1, 'realtime': 1, 'googledirection': 1, 'abhishek': 1, 'opencv': 2, 'segment': 1, 'conntected': 1, 'characters': 1, 'imageprocessing': 1, 'ocr': 1, 'tesseract': 1, 'wesley': 1, '401': 1, 'detecting': 1, 'fast': 1, 'switch': 1, 'events': 1, 'application': 1, 'running': 1, 'rdp': 3, 'session': 1, 'window': 1, 'minimize': 1, 'visualc': 1, 'remotedesktop': 1, 'bitblt': 1, 'mstsc': 1, 'ram': 1, '233': 1, 'browse': 1, 'complete': 1, 'popular': 1, 'unanswered': 1, 'question': 1, 'edwards': 1, 'actually': 1, 'considered': 1, 'admission': 1, 'black': 1, 'source': 1, 'dreidel': 1, 'nes': 1, 'gadol': 1, 'haya': 1, 'sham': 1, '「ロワイヤル」': 1, 'aren39t': 1, 'boyfriend': 1, 'contact': 2, 'skype': 3, 'matrix': 1, 'row': 1, 'column': 1, 'studded': 1, 'leather': 1, 'breastplate': 1, 'ac': 1, 'lowest': 1, 'sum': 1, 'sequence': 1, 'exceeds': 1, 'tries': 1, 'roll': 1, 'tikzpicture': 1, 'destroyed': 1, 'added': 1, 'inside': 1, 'documentation': 1, 'sense': 1, 'feminine': 2, 'adjective': 1, 'describing': 1, 'pronoun': 1, 'noun': 1, 'there39s': 1, 'product': 1, 'described': 1, 'omaha': 1, 'steaks': 1, 'burgers': 1, 'proper': 1, 'english': 3, 'unity': 1, 'collision': 1, 'occuring': 1, 'child': 1, 'object': 1, 'parent': 1, 'script': 1, 'electric': 1, 'skateboard': 1, 'russia': 1, 'finance': 2, 'what39s': 1, 'significance': 1, 'shooting': 1, 'star': 1, 'jaws': 1, 'step': 1, 'infinite': 1, 'process': 1, 'balls': 2, 'urn': 1, 'remove': 2, 'random': 1, 'virtual': 1, 'larger': 1, 'physical': 1, 'mappings': 1, 'stored': 1, 'memory': 1, 'lightninginput': 1, 'keycode': 1, 'meeting': 1, 'chinese': 1, 'swiss': 1, 'phantom': 1, 'directive': 1, 'expect': 1, 'macbook': 1, 'pro': 1, 'sierra': 2, 'install': 1, 'lens': 1, 'heavy': 1, 'camera': 1, 'conditions': 1, 'society': 1, 'develop': 1, 'themselves': 1, 'recent': 1, 'feed': 1, 'salary': 1, 'calculator': 1, 'talent': 1, 'enterprise': 1, 'press': 1, 'legal': 1, 'technology': 1, 'life': 1, 'arts': 1, 'culture': 1, 'recreation': 1, 'science': 5, 'fault': 1, 'super': 1, 'applications': 1, 'ubuntu': 1, 'webmasters': 1, 'game': 1, 'development': 2, 'tex': 1, 'latex': 1, 'software': 2, 'engineering': 3, 'unix': 1, 'apple': 1, 'geographic': 1, 'information': 2, 'systems': 1, 'electrical': 1, 'enthusiasts': 1, 'security': 1, 'administrators': 1, 'drupal': 1, 'experience': 1, 'mathematica': 1, 'salesforce': 1, 'expressionengine174': 1, 'em': 1, 'portugu234s': 1, 'blender': 1, 'cryptography': 1, 'review': 1, 'recommendations': 1, 'signal': 1, 'processing': 1, 'emacs': 1, 'raspberry': 1, 'pi': 1, 'на': 1, 'русском': 1, 'programming': 1, 'puzzles': 1, 'golf': 1, 'en': 1, 'espa241ol': 1, 'ethereum': 1, 'arduino': 1, 'bitcoin': 1, 'photography': 1, 'fiction': 1, 'fantasy': 1, 'graphic': 1, 'design': 2, 'movies': 1, 'tv': 1, 'music': 1, 'practice': 1, 'theory': 1, 'worldbuilding': 1, 'seasoned': 1, 'advice': 1, 'cooking': 1, 'home': 1, 'improvement': 1, 'personal': 1, 'money': 1, 'academia': 1, 'law': 1, 'language': 3, 'usage': 1, 'skeptics': 1, 'mi': 1, 'yodeya': 1, 'judaism': 1, 'travel': 1, 'christianity': 1, 'learners': 1, 'japanese': 1, 'arqade': 1, 'gaming': 1, 'bicycles': 1, 'roleplaying': 1, 'games': 1, 'anime': 1, 'manga': 1, 'puzzling': 1, 'motor': 1, 'vehicle': 1, 'maintenance': 1, 'repair': 1, 'mathoverflow': 1, 'mathematics': 1, 'cross': 1, 'validated': 1, 'stats': 1, 'theoretical': 1, 'computer': 2, 'physics': 1, 'chemistry': 1, 'biology': 1, 'philosophy': 1, 'apps': 1, 'twitter': 1, 'linkedin': 1, 'logo': 1, '169': 1, '2017': 1, 'inc': 1, 'contributions': 1, 'licensed': 1, 'cc': 1, 'bysa': 1, 'attribution': 1, 'required': 1, 'rev201712127977': 1, 'enabled': 1}\n",
      "\n",
      "['raquo']\n",
      "\n",
      "['raquo']\n",
      "\n",
      "['0']\n",
      "\n",
      "\n",
      "\n",
      "[ KEYWORD : news ]\n",
      "--------------------------------------\n",
      "\n",
      "URL : http://www.times.com\n",
      "키워드 news 가 포함된 단어 항목입니다\n",
      "\n",
      "[word] news : [similarity] 28\n",
      "[word] newsletter : [similarity] 2\n",
      "[word] newsletters : [similarity] 1\n",
      "--------------------------------------\n",
      "URL : http://www.apple.com/\n",
      "키워드 news 가 존재하지 않습니다\n",
      "\n",
      "--------------------------------------\n",
      "URL : https://github.com\n",
      "키워드 news 가 존재하지 않습니다\n",
      "\n",
      "--------------------------------------\n",
      "=> ['http://www.times.com']\n",
      "\n",
      "\n",
      "\n",
      "[ KEYWORD : apple ]\n",
      "--------------------------------------\n",
      "\n",
      "URL : http://www.times.com\n",
      "키워드 apple 가 포함된 단어 항목입니다\n",
      "\n",
      "[word] apple : [similarity] 21\n",
      "--------------------------------------\n",
      "URL : http://www.apple.com/\n",
      "키워드 apple 가 포함된 단어 항목입니다\n",
      "\n",
      "[word] apple : [similarity] 40\n",
      "[word] applecom : [similarity] 1\n",
      "[word] 1800myapple : [similarity] 1\n",
      "--------------------------------------\n",
      "URL : https://github.com\n",
      "키워드 apple 가 존재하지 않습니다\n",
      "\n",
      "--------------------------------------\n",
      "=> ['http://www.apple.com/']\n"
     ]
    }
   ],
   "source": [
    "# 인스턴스 생성\n",
    "w1 = WebWordsFrequency('http://www.cnn.com', 'http://www.times.com', 'http://www.apple.com/')\n",
    "w2 = WebWordsFrequency('http://www.cnn.com', 'http://www.times.com')\n",
    "w3 = WebWordsFrequency()\n",
    "\n",
    "# add 테스트\n",
    "w1.addUrl('https://github.com')\n",
    "w3.addUrl('http://stackoverflow.com')\n",
    "\n",
    "# remove 테스트\n",
    "w1.removeUrl('http://www.cnn.com')\n",
    "w2.removeUrl('http://stackoverflow.com')\n",
    "\n",
    "# listUrls 테스트\n",
    "w1.listUrls()\n",
    "print ()\n",
    "w2.listUrls()\n",
    "print ()\n",
    "w3.listUrls()\n",
    "print ()\n",
    "print ()\n",
    "\n",
    "# getWordsFrequency 테스트\n",
    "print (w1.getWordsFrequency())\n",
    "print ()\n",
    "print ()\n",
    "print (w2.getWordsFrequency())\n",
    "print ()\n",
    "print ()\n",
    "print (w3.getWordsFrequency())\n",
    "print ()\n",
    "\n",
    "# getMaxFreqencyWords 테스트\n",
    "print (w1.getMaxFreqencyWords())\n",
    "print ()\n",
    "print (w2.getMaxFreqencyWords())\n",
    "print ()\n",
    "print (w3.getMaxFreqencyWords())\n",
    "print ()\n",
    "\n",
    "# searchUrlByWord 테스트\n",
    "print (w1.searchUrlByWord(\"news\"))\n",
    "print ()\n",
    "print (w1.searchUrlByWord('apple'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 먼저 새로운 클래스 WebWordsFrequency을 정의하고 생성자에서는 URL을 담는 리스트(urlList)와 {URL, {단어, 단어의 출현 빈도}}를 가지는 사전 객체(words)를 초기화해주고, for~in 구문을 돌면서 생성자의 인자에 나온 여러개의 url을 각각 addUrl(url) 함수를 호출해줍니다. <br><br>\n",
    "> - addUrl() 함수는 getWords() 함수를 호출하고 인자로 들어온 url의 값을 urlList에 append 합니다. <br><br>\n",
    "> - removeUrl() 함수는 인자로 들어온 url이 현재까지 들어온 url을 저장하는 리스트(urlList)에 존재하면 단어으 출현빈도를 저장하는 사전(word[url])을 del 식별자로 삭제하고 urlList에서 url 값을 remove 함수를 통해 삭제해줍니다.<br><br>\n",
    "> - listUrls() 함수에서는 현재 urlList에 존재하는 url 값을 출력해줍니다.<br><br>\n",
    "> - getWords() 함수는 Assignment 3의 방법으로 url을 가지고 와 해당 웹페이지를 문자열로 가져와 모든 HTML 태그 및 CSS와 Javascript를 제외한 순수 텍스트를 얻어내고 그 안에 존재하는 단어들을 추출하여 각 단어들에 대해 출현빈도를 사전형태로 저장하는 함수입니다. <br><br>\n",
    "> - getWordsFrequency() 함수는 해당 url의 웹페이지들을 종합적으로 분석하여 단어 출현 빈도 사전을 반환하는 함수로, 만약 등록된 url이 없다면 공백 사전을 반환합니다. 먼저 url을 등록하는 urlList의 갯수가 0이라면 공백 사전을 반환하고, 종합적으로 단어와 단어 출현비도를 키로 가지는 사전(totalWords)를 초기화합니다. for~in을 돌면서 words 사전에 저장된 키(url)와 벨류(word)를 읽어오고 사전 객체 words 사전의 키 중 totalWords에 저장되지 않은 것이 있으면 해당 키 값의 벨류 값을 totalWords에 저장하고, 이미 words 사전의 키가 totalWords에 저장되어있으면 현재 값에 words의 벨류 값을 더해줍니다. 마지막으로 totalWords 사전을 반환합니다.<br><br>\n",
    "> - getMaxFreqencyWords() 메소드를 구현하여 각 URL의 웹페이지들을 종합적으로 분석한 단어 출현 빈도 사전에서 가장 많이 출현한 단어 리스트를 반환합니다. 만약 url을 등록하는 urlList의 갯수가 0이라면 None 객체를 반환하고 totalWords 값에 getWordsFrequency() 함수를 호출하여 종합적으로 분석된 사전객체를 넣어줍니다. 그리고 최다 출현 빈도수가 동일한 경우, 해당 단어를 모두 출력해주기 위해 단어를 저장할 리스트(tmp)를 초기화하고 최다출현 빈도수를 저장할 변수(maxv)를 0으로 초기화합니다. for~in 구문을 돌면서 totalWords에 저장된 키와 벨류값을 가져오면서 만약 저장된 최대값보다 현재 벨류값(출현빈도 값)이 더 크다면 최대값을 저장하는 변수(maxv)에 현재 벨류값을 저장해줍니다. 그리고 totalWords을 다시 돌면서 저장된 최대값이랑 동일한 출현빈도를 가진 단어가 나오면 리스트(tmp)에 저장합니다. 이 리스트는 원소 갯수가 하나 이상일 수 있습니다.(최다 출현 빈도를 가지는 단어가 여러개일 수 있기 때문에)<br><br>\n",
    "> - searchUrlByWord() 메소드는 유사도가 높은 웹사이트를 출력하는 메소드로 제가 Assignment 4에서 정의한 유사도 법칙에 따라 구현해주었습니다. 먼저 현재 url의 words의 키 값을 저장하는 temp와 유사도를 저장하는 사전 객체(similarity)을 초기화해줍니다. 그리고 url의 갯수만큼 for~in 구문을 돌면서 temp에 words[현재 url]의 키 값들을 리스트로 저장하고 만약 temp에 함수의 인자로 들어온 검색할 단어 keyword가 존재하면 기본 유사도를 10으로 줍니다. 그리고 temp의 길이만큼 반복문을 돌면서 입력받은 키워드기 단어의 일부일 경우, 해당 단어의 출현빈도를 similarity[현재 url]에 더해주고, 만약 단어이 일부가 아니라 키워드가 단어와 완전히 독같을 경우에는 출현빈도에 보너스 점수 20을 더한 것을 similarity[현재 url]에 더해줍니다. 만약 temp에 함수의 인자로 들어온 검색할 단어 keyword가 존재하지 않으면 키워드가 존재하지 않는다는 메시지를 출력해줍니다. 마지막으로 유사도가 가장 높은 웹사이트를 출력하기 위해 유사도의 최대값을 저장하는 maxv을 0으로 초기화해주고 유사도의 최대값이 동일한 웹사이트가 여러개 존재할 수 있으므로 이를 저장해줄 리스트(l)을 초기화합니다. for~in 구문을 similarity의 아이템 갯수만큼 돌면서 만약 similarity의 벨류값이 현재 저장된 최대값보다 크다면 maxv값을 similarity의 벨류값으로 저장해줍니다. 이 작업이 모두 끝나면 similarity의 아이템 갯수만큼 돌면서 similarity의 벨류값이 현재 저장된 유사도의 최대값과 같으면 리스트(l)에 추가해줍니다. 최종적으로 리스트(l)을 반환합니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 8번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "위 7번 문제에서 정의한 WebWordsFrequency 클래스를 상속하여 OrderedWebWordsFrequency 클래스를 정의하고 슈퍼클래스에 정의된 getWordsFrequency() 메소드를 오버라이드 하여 단어 출현 빈도를 내림 차순으로 정렬하여 리스트로 출력하시오.\n",
    "- 리스트 내의 각 원소는 단어와 빈도를 쌍으로 지니는 튜플이다.\n",
    "- getWordFrequence() 메소드에 reverse 라는 인자를 만들고 true 또는 false를 인자로 받을 수 있도록 한다.\n",
    "    - reverse 인자의 디폴트 값은 false 이며, 기본적으로 내림차순으로 정렬한다.\n",
    "    - reverse 인자에 true를 넣으면 오름차순으로 정렬한다.\n",
    "    > ```>>> w4 = OrderedWebWordsFrequency('http://www.times.com', 'https://www.amazon.com', 'https://github.com')```\n",
    "\n",
    "    > ```>>> w4.getWordsFrequency()\n",
    "[('site', 12), ('science', 11), ('hello', 8), ('world', 2), ('program', 1), ('python', 1)]```\n",
    "\n",
    "    > ```>>> w4.getWordsFrequency(reverse=true)\n",
    "[('program', 1), ('python', 1), ('world', 2), ('hello', 8), ('science', 11), ('site', 12)]```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class OrderedWebWordsFrequency(WebWordsFrequency):\n",
    "    def __init__(self, *l):\n",
    "        WebWordsFrequency.__init__(self, *l)\n",
    "    \n",
    "    def getWordsFrequency(self, reverse = False):\n",
    "        totalWords = WebWordsFrequency.getWordsFrequency(self)\n",
    "        \n",
    "        # 기본적으로 내림차순 정렬 후 반환\n",
    "        li = []\n",
    "        temp = list(totalWords.values())\n",
    "        temp.sort(reverse = not reverse)\n",
    "        for value in temp:\n",
    "            for key in totalWords.keys():\n",
    "                if value == totalWords[key]:\n",
    "                    li.append((key, totalWords[key]))\n",
    "                    del totalWords[key]\n",
    "                    break\n",
    "        return li"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('raquo', 34), ('github', 26), ('health', 16), ('video', 14), ('review', 14), ('times', 13), ('news', 13), ('business', 13), ('opinion', 13), ('world', 12), ('york', 11), ('cnn', 11), ('international', 11), ('site', 10), ('trump', 10), ('home', 10), ('help', 10), ('code', 10), ('edition', 9), ('sign', 9), ('learn', 8), ('navigation', 8), ('politics', 8), ('arts', 8), ('magazine', 8), ('et', 8), ('set', 8), ('developers', 8), ('security', 8), ('search', 7), ('food', 7), ('tax', 7), ('2017', 6), ('tech', 6), ('style', 6), ('tv', 6), ('culture', 6), ('project', 6), ('community', 6), ('build', 6), ('terms', 6), ('features', 6), ('subscribe', 5), ('todays', 5), ('travel', 5), ('real', 5), ('estate', 5), ('top', 5), ('buy', 5), ('industry', 5), ('president', 5), ('met', 5), ('comments', 5), ('am', 5), ('city', 5), ('china', 5), ('subscriptions', 5), ('education', 5), ('feature', 5), ('privacy', 5), ('worldwide', 5), ('software', 5), ('teams', 5), ('maintainer', 5), ('sections', 4), ('español', 4), ('science', 4), ('sports', 4), ('deal', 4), ('michael', 4), ('own', 4), ('government', 4), ('inside', 4), ('care', 4), ('amid', 4), ('2', 4), ('colleges', 4), ('korea', 4), ('media', 4), ('host', 4), ('living', 4), ('money', 4), ('guide', 4), ('major', 4), ('policy', 4), ('island', 4), ('green', 4), ('women', 4), ('story', 4), ('jayz', 4), ('crossword', 4), ('play', 4), ('oped', 4), ('future', 4), ('fashion', 4), ('college', 4), ('football', 4), ('books', 4), ('tools', 4), ('account', 4), ('arabic', 4), ('preference', 4), ('confirm', 4), ('africa', 4), ('luxury', 4), ('platform', 4), ('breaking', 3), ('nytimescom', 3), ('skip', 3), ('mobile', 3), ('cvs', 3), ('aetna', 3), ('reshape', 3), ('pm', 3), ('69', 3), ('billion', 3), ('services', 3), ('customers', 3), ('cvsaetna', 3), ('merger', 3), ('benefit', 3), ('consumers', 3), ('emails', 3), ('republicans', 3), ('leadership', 3), ('spending', 3), ('mcconnell', 3), ('map', 3), ('offers', 3), ('suspends', 3), ('levine', 3), ('sexual', 3), ('black', 3), ('south', 3), ('start', 3), ('debate', 3), ('seven', 3), ('apartment', 3), ('personal', 3), ('freedom', 3), ('washington', 3), ('look', 3), ('dont', 3), ('life', 3), ('cold', 3), ('darkness', 3), ('source', 3), ('race', 3), ('struggling', 3), ('power', 3), ('australia', 3), ('america', 3), ('asia', 3), ('marriage', 3), ('dies', 3), ('revived', 3), ('ravishing', 3), ('donald', 3), ('cost', 3), ('videos', 3), ('family', 3), ('sunday', 3), ('eyes', 3), ('theater', 3), ('middle', 3), ('east', 3), ('company', 3), ('sending', 3), ('stay', 3), ('golf', 3), ('sailing', 3), ('apps', 3), ('10', 3), ('sale', 3), ('access', 3), ('design', 3), ('nyc', 3), ('events', 3), ('manage', 3), ('email', 3), ('service', 3), ('weather', 3), ('regions', 3), ('sport', 3), ('vr', 3), ('development', 3), ('marketplace', 3), ('projects', 3), ('alongside', 3), ('management', 3), ('using', 3), ('integrations', 3), ('hosting', 3), ('signed', 3), ('multimedia', 2), ('upgrade', 2), ('content', 2), ('monday', 2), ('paper', 2), ('ny', 2), ('reed', 2), ('united', 2), ('touch', 2), ('people', 2), ('worry', 2), ('choices', 2), ('twitter', 2), ('fbi', 2), ('career', 2), ('claim', 2), ('flynn', 2), ('russia', 2), ('shutdown', 2), ('looms', 2), ('democratic', 2), ('trying', 2), ('spend', 2), ('gop', 2), ('cut', 2), ('ideas', 2), ('failure', 2), ('success', 2), ('bill', 2), ('opera', 2), ('james', 2), ('abuse', 2), ('accusations', 2), ('cooper', 2), ('decades', 2), ('roils', 2), ('historically', 2), ('plant', 2), ('daily', 2), ('360', 2), ('wonders', 2), ('jeremy', 2), ('yousur', 2), ('alhlou', 2), ('woman', 2), ('rent', 2), ('makes', 2), ('rebelled', 2), ('religion', 2), ('shes', 2), ('run', 2), ('day', 2), ('sean', 2), ('hannity', 2), ('perfect', 2), ('deep', 2), ('cant', 2), ('holiday', 2), ('gift', 2), ('lure', 2), ('except', 2), ('andrew', 2), ('jess', 2), ('roy', 2), ('moore', 2), ('voters', 2), ('party', 2), ('virtual', 2), ('leading', 2), ('citys', 2), ('police', 2), ('unions', 2), ('dealbook', 2), ('newsletter', 2), ('ross', 2), ('—', 2), ('shape', 2), ('australian', 2), ('samesex', 2), ('feels', 2), ('book', 2), ('norman', 2), ('baker', 2), ('89', 2), ('crossed', 2), ('atlantic', 2), ('raft', 2), ('brooklyn', 2), ('death', 2), ('peace', 2), ('billy', 2), ('bush', 2), ('yes', 2), ('fight', 2), ('options', 2), ('soil', 2), ('dirty', 2), ('planet', 2), ('devaluing', 2), ('royal', 2), ('impose', 2), ('choice', 2), ('editor', 2), ('insider', 2), ('todayrsquos', 2), ('puzzle', 2), ('neediest', 2), ('serving', 2), ('finlay', 2), ('week', 2), ('beyond', 2), ('loading', 2), ('explore', 2), ('letters', 2), ('talk', 2), ('male', 2), ('scallop', 2), ('spaceage', 2), ('sicilys', 2), ('emerald', 2), ('gem', 2), ('bronte', 2), ('pistachio', 2), ('plans', 2), ('facebook', 2), ('center', 2), ('movies', 2), ('matter', 2), ('raiders', 2), ('giants', 2), ('hundreds', 2), ('obituaries', 2), ('television', 2), ('live', 2), ('jeanclaude', 2), ('van', 2), ('damme', 2), ('36', 2), ('hours', 2), ('choosing', 2), ('million', 2), ('youre', 2), ('automobiles', 2), ('detroit', 2), ('forward', 2), ('space', 2), ('protect', 2), ('index', 2), ('store', 2), ('newsletters', 2), ('information', 2), ('copy', 2), ('contact', 2), ('advertise', 2), ('entertainment', 2), ('americas', 2), ('europe', 2), ('45', 2), ('congress', 2), ('nine', 2), ('trumpmerica', 2), ('markets', 2), ('stars', 2), ('screen', 2), ('binge', 2), ('gadgets', 2), ('startups', 2), ('tennis', 2), ('equestrian', 2), ('judo', 2), ('horse', 2), ('racing', 2), ('motorsport', 2), ('skiing', 2), ('olympics', 2), ('destinations', 2), ('drink', 2), ('architecture', 2), ('autos', 2), ('diet', 2), ('fitness', 2), ('parenting', 2), ('vital', 2), ('signs', 2), ('impact', 2), ('degrees', 2), ('heroes', 2), ('hln', 2), ('schedule', 2), ('cnnvr', 2), ('watch', 2), ('archives', 2), ('profiles', 2), ('pressroom', 2), ('partner', 2), ('sites', 2), ('ireport', 2), ('millions', 2), ('username', 2), ('password', 2), ('clicking', 2), ('agree', 2), ('occasionally', 2), ('send', 2), ('related', 2), ('team', 2), ('happen', 2), ('share', 2), ('browse', 2), ('discover', 2), ('authentication', 2), ('status', 2), ('maintain', 2), ('securely', 2), ('cloud', 2), ('process', 2), ('create', 2), ('theres', 2), ('worlds', 2), ('largest', 2), ('customer', 2), ('businesses', 2), ('tab', 2), ('window', 2), ('reload', 2), ('refresh', 2), ('session', 2), ('supports', 1), ('internet', 1), ('explorer', 1), ('9', 1), ('earlier', 1), ('please', 1), ('browser', 1), ('log', 1), ('0', 1), ('settings', 1), ('english', 1), ('中文', 1), ('chinese', 1), ('december', 1), ('4', 1), ('quick', 1), ('close', 1), ('text', 1), ('input', 1), ('de', 1), ('la', 1), ('merced', 1), ('abelson', 1), ('1024', 1), ('combine', 1), ('drugstore', 1), ('giant', 1), ('biggest', 1), ('insurers', 1), ('companies', 1), ('basic', 1), ('regularly', 1), ('critics', 1), ('sharply', 1), ('limited', 1), ('lashes', 1), ('saying', 1), ('tatters', 1), ('shear', 1), ('extraordinary', 1), ('attack', 1), ('law', 1), ('enforcement', 1), ('body', 1), ('accused', 1), ('investigators', 1), ('bias', 1), ('dispute', 1), ('acted', 1), ('timeline', 1), ('phone', 1), ('calls', 1), ('stopgap', 1), ('measure', 1), ('thomas', 1), ('kaplan', 1), ('funding', 1), ('expire', 1), ('friday', 1), ('embroiled', 1), ('feud', 1), ('pass', 1), ('twoweek', 1), ('delay', 1), ('negotiate', 1), ('longterm', 1), ('package', 1), ('quarry', 1), ('isnt', 1), ('stone', 1), ('natalie', 1), ('kitroeff', 1), ('overhaul', 1), ('reinvigorate', 1), ('corporate', 1), ('wave', 1), ('investment', 1), ('hiring', 1), ('raises', 1), ('boardrooms', 1), ('executives', 1), ('savings', 1), ('lastminute', 1), ('breaks', 1), ('banks', 1), ('oil', 1), ('1056', 1), ('conductor', 1), ('sexually', 1), ('abused', 1), ('ago', 1), ('teenagers', 1), ('suspended', 1), ('fourdecade', 1), ('relationship', 1), ('74', 1), ('canceled', 1), ('scheduled', 1), ('engagements', 1), ('assault', 1), ('furor', 1), ('caitlin', 1), ('dickerson', 1), ('stephanie', 1), ('saul', 1), ('223', 1), ('spelman', 1), ('morehouse', 1), ('atlanta', 1), ('schools', 1), ('nationwide', 1), ('fielding', 1), ('complaints', 1), ('misconduct', 1), ('air', 1), ('force', 1), ('drills', 1), ('heightened', 1), ('tensions', 1), ('jerusalem', 1), ('simmers', 1), ('kushner', 1), ('optimistic', 1), ('substantive', 1), ('assessment', 1), ('uae', 1), ('denies', 1), ('yemen', 1), ('rebels', 1), ('fired', 1), ('missile', 1), ('abu', 1), ('dhabi', 1), ('nuclear', 1), ('disney', 1), ('resumed', 1), ('talks', 1), ('fox', 1), ('107', 1), ('taj', 1), ('mahal', 1), ('woodhousegetty', 1), ('images', 1), ('documentaries', 1), ('independence', 1), ('egypt', 1), ('dangerous', 1), ('egyptian', 1), ('friends', 1), ('country', 1), ('routinely', 1), ('compromised', 1), ('rebel', 1), ('mona', 1), ('elnaggar', 1), ('mark', 1), ('meatto', 1), ('briefing', 1), ('patrick', 1), ('boehler', 1), ('mike', 1), ('ives', 1), ('254', 1), ('heres', 1), ('listen', 1), ('conservative', 1), ('spoke', 1), ('matthew', 1), ('shaer', 1), ('contributing', 1), ('writer', 1), ('opinionated', 1), ('considers', 1), ('journalist', 1), ('listening', 1), ('audio', 1), ('follow', 1), ('apple', 1), ('podcasts', 1), ('radio', 1), ('public', 1), ('stitcher', 1), ('smarter', 1), ('6', 1), ('2018', 1), ('tim', 1), ('herrera', 1), ('excuse', 1), ('handle', 1), ('activity', 1), ('trackers', 1), ('gretchen', 1), ('reynolds', 1), ('child', 1), ('fitbit', 1), ('christmas', 1), ('expect', 1), ('active”', 1), ('expert', 1), ('300', 1), ('gifts', 1), ('75', 1), ('editors', 1), ('15', 1), ('categories', 1), ('journalism', 1), ('matters', 1), ('essential', 1), ('norilsk', 1), ('slave', 1), ('labor', 1), ('camp', 1), ('prospering', 1), ('palladium', 1), ('bad', 1), ('months', 1), ('temperatures', 1), ('minus', 1), ('80', 1), ('higgins', 1), ('alabamas', 1), ('disdain', 1), ('democrats', 1), ('senate', 1), ('alan', 1), ('blinder', 1), ('campbell', 1), ('robertson', 1), ('bidgood', 1), ('925', 1), ('nominee', 1), ('doug', 1), ('jones', 1), ('widely', 1), ('admired', 1), ('past', 1), ('affiliation', 1), ('hell', 1), ('call', 1), ('costs', 1), ('rebuilding', 1), ('syria', 1), ('political', 1), ('somini', 1), ('sengupta', 1), ('ravaged', 1), ('homs', 1), ('symbolize', 1), ('bashar', 1), ('alassads', 1), ('ruthless', 1), ('tactics', 1), ('embody', 1), ('looming', 1), ('challenge', 1), ('war', 1), ('approaches', 1), ('reconstruction', 1), ('windows', 1), ('london', 1), ('paris', 1), ('berlin', 1), ('wintry', 1), ('décor', 1), ('season', 1), ('designers', 1), ('incorporated', 1), ('themes', 1), ('displays', 1), ('currency', 1), ('boom', 1), ('hits', 1), ('suhyun', 1), ('lee', 1), ('nathaniel', 1), ('popper', 1), ('bitcoin', 1), ('currencies', 1), ('booming', 1), ('regular', 1), ('investors', 1), ('global', 1), ('frenzy', 1), ('paid', 1), ('parental', 1), ('leave', 1), ('ginia', 1), ('bellafante', 1), ('program', 1), ('applies', 1), ('managers', 1), ('omits', 1), ('vast', 1), ('majority', 1), ('workers', 1), ('teachers', 1), ('officers', 1), ('park', 1), ('rangers', 1), ('columnist', 1), ('sorkin', 1), ('colleagues', 1), ('sense', 1), ('headlines', 1), ('brokers', 1), ('allnew', 1), ('confidential', 1), ('tip', 1), ('provide', 1), ('materials', 1), ('journalists', 1), ('rises', 1), ('rely', 1), ('prominent', 1), ('strategist', 1), ('clash', 1), ('remain', 1), ('dominant', 1), ('gay', 1), ('politician', 1), ('proposes', 1), ('proposal', 1), ('legalizing', 1), ('final', 1), ('stages', 1), ('passage', 1), ('parliament', 1), ('revered', 1), ('figure', 1), ('ripples', 1), ('weinstein', 1), ('scandal', 1), ('allegations', 1), ('don', 1), ('burke', 1), ('longtime', 1), ('star', 1), ('“bloke”', 1), ('masculinity', 1), ('jews', 1), ('funny', 1), ('daubers', 1), ('“jewish', 1), ('comedy', 1), ('serious', 1), ('history”', 1), ('looks', 1), ('laughter', 1), ('2000', 1), ('laying', 1), ('detailed', 1), ('taxonomy', 1), ('humor', 1), ('seeker', 1), ('adventure', 1), ('papyrus', 1), ('adventures', 1), ('boy', 1), ('unconventional', 1), ('traveler', 1), ('1990', 1), ('musical', 1), ('fable', 1), ('love', 1), ('temperamental', 1), ('gods', 1), ('french', 1), ('antilles', 1), ('bold', 1), ('delight', 1), ('critic', 1), ('writes', 1), ('whats', 1), ('bigger', 1), ('threat', 1), ('normalization', 1), ('alarmism', 1), ('ivan', 1), ('krastev', 1), ('rightwing', 1), ('populists', 1), ('thrive', 1), ('tense', 1), ('polarization', 1), ('shouldnt', 1), ('fractured', 1), ('roger', 1), ('cohen', 1), ('lurches', 1), ('fragile', 1), ('truth', 1), ('blurred', 1), ('clinton', 1), ('election', 1), ('plot', 1), ('saudi', 1), ('arabias', 1), ('qatar', 1), ('202', 1), ('stop', 1), ('north', 1), ('act', 1), ('israel', 1), ('nitsana', 1), ('darshanleitner', 1), ('negotiations', 1), ('sanctions', 1), ('havent', 1), ('stopped', 1), ('kim', 1), ('regime', 1), ('financial', 1), ('warfare', 1), ('catalans', 1), ('owe', 1), ('explanation', 1), ('albert', 1), ('rivera', 1), ('215', 1), ('coexistence', 1), ('union', 1), ('articulate', 1), ('common', 1), ('spain', 1), ('losing', 1), ('elections', 1), ('201', 1), ('user', 1), ('wordplay', 1), ('watching', 1), ('ozella', 1), ('sister', 1), ('ran', 1), ('pats', 1), ('luncheonette', 1), ('1970s', 1), ('days', 1), ('restaurant', 1), ('closed', 1), ('ms', 1), ('embarked', 1), ('volunteering', 1), ('106th', 1), ('fund', 1), ('provided', 1), ('direct', 1), ('assistance', 1), ('donate', 1), ('advertisers', 1), ('player', 1), ('previous', 1), ('desk', 1), ('vulgarians', 1), ('sex', 1), ('drive', 1), ('readers', 1), ('discuss', 1), ('writers', 1), ('mistreatment', 1), ('rooted', 1), ('“brutality', 1), ('sexuality”', 1), ('sisters', 1), ('nurturing', 1), ('countless', 1), ('haircuts', 1), ('dinner', 1), ('happy', 1), ('anniversary', 1), ('heart', 1), ('transplant', 1), ('doctors', 1), ('fail', 1), ('children', 1), ('sterilized', 1), ('broadway', 1), ('pro', 1), ('basketball', 1), ('ugly', 1), ('streaks', 1), ('warriors', 1), ('knicks', 1), ('terrible', 1), ('navajo', 1), ('economy', 1), ('american', 1), ('singlefamily', 1), ('11yearold', 1), ('spent', 1), ('jail', 1), ('serial', 1), ('killer', 1), ('cellmate', 1), ('plan', 1), ('snubs', 1), ('palestinians', 1), ('actually', 1), ('chinas', 1), ('ai', 1), ('advances', 1), ('contributor', 1), ('abc', 1), ('reporter', 1), ('brian', 1), ('erroneous', 1), ('report', 1), ('bound', 1), ('history', 1), ('roiled', 1), ('metoo', 1), ('moment', 1), ('ministers', 1), ('revive', 1), ('martin', 1), ('luther', 1), ('kings', 1), ('1968', 1), ('poverty', 1), ('campaign', 1), ('technology', 1), ('shift', 1), ('41', 1), ('lithuania', 1), ('feed', 1), ('drone', 1), ('maker', 1), ('dji', 1), ('data', 1), ('officials', 1), ('snapchat', 1), ('remakes', 1), ('splitting', 1), ('social', 1), ('el', 1), ('museos', 1), ('leader', 1), ('bridge', 1), ('latino', 1), ('kennedy', 1), ('honors', 1), ('evoke', 1), ('pushes', 1), ('avoid', 1), ('path', 1), ('tricky', 1), ('drag', 1), ('event', 1), ('horizon', 1), ('resort', 1), ('canyon', 1), ('ranch', 1), ('succumbs', 1), ('botox', 1), ('rhythm', 1), ('colombias', 1), ('salsa', 1), ('capital', 1), ('water', 1), ('altogether', 1), ('wonderful', 1), ('coco', 1), ('tops', 1), ('box', 1), ('office', 1), ('quiet', 1), ('wonder', 1), ('wheel', 1), ('woody', 1), ('allens', 1), ('coney', 1), ('memory', 1), ('palace', 1), ('boulevard', 1), ('stabs', 1), ('queens', 1), ('drives', 1), ('helpers', 1), ('acting', 1), ('studios', 1), ('24', 1), ('17', 1), ('eli', 1), ('manning', 1), ('warms', 1), ('bench', 1), ('playoff', 1), ('alabama', 1), ('ohio', 1), ('tiger', 1), ('woods', 1), ('relishes', 1), ('struggle', 1), ('upanddown', 1), ('return', 1), ('sleepwalking', 1), ('70s', 1), ('downtown', 1), ('riot', 1), ('silly', 1), ('seas', 1), ('pirates', 1), ('penzance', 1), ('2017s', 1), ('supermoon', 1), ('moons', 1), ('super', 1), ('trilobites', 1), ('fossilized', 1), ('pterosaur', 1), ('eggs', 1), ('uncovered', 1), ('leon', 1), ('carried', 1), ('battle', 1), ('tarawa', 1), ('98', 1), ('adventurer', 1), ('william', 1), ('mayer', 1), ('wideranging', 1), ('composer', 1), ('dead', 1), ('91', 1), ('saturday', 1), ('night', 1), ('jabs', 1), ('matt', 1), ('lauer', 1), ('plays', 1), ('kicks', 1), ('word', 1), ('claire', 1), ('foy', 1), ('ready', 1), ('quit', 1), ('playing', 1), ('queen', 1), ('transplanted', 1), ('uterus', 1), ('birth', 1), ('footsteps', 1), ('inescapable', 1), ('poet', 1), ('nicaragua', 1), ('getaway', 1), ('sos', 1), ('rise', 1), ('shanghai', 1), ('enthusiast', 1), ('praise', 1), ('romance', 1), ('100', 1), ('notable', 1), ('applicant', 1), ('getting', 1), ('dream', 1), ('six', 1), ('myths', 1), ('pasteles', 1), ('puerto', 1), ('rican', 1), ('tradition', 1), ('special', 1), ('savor', 1), ('kitchen', 1), ('meat', 1), ('potatoes', 1), ('rachel', 1), ('brosnahans', 1), ('comic', 1), ('timing', 1), ('answer', 1), ('ferry', 1), ('changing', 1), ('brooklynqueens', 1), ('waterfront', 1), ('ticket', 1), ('38', 1), ('penthouse', 1), ('west', 1), ('chelsea', 1), ('novembers', 1), ('renters', 1), ('jersey', 1), ('upshot', 1), ('generation', 1), ('grumpy', 1), ('unhappy', 1), ('50', 1), ('bills', 1), ('automatic', 1), ('cuts', 1), ('pages', 1), ('explained', 1), ('exciting', 1), ('indian', 1), ('automakers', 1), ('comeback', 1), ('wheels', 1), ('near', 1), ('driving', 1), ('hands', 1), ('jenna', 1), ('lyonss', 1), ('discusses', 1), ('rap', 1), ('trumps', 1), ('studio', 1), ('artist', 1), ('painted', 1), ('landlord', 1), ('stage', 1), ('ronda', 1), ('kaysen', 1), ('tenant', 1), ('garden', 1), ('provides', 1), ('outside', 1), ('homes', 1), ('mortgage', 1), ('calculator', 1), ('emailed', 1), ('viewed', 1), ('trending', 1), ('recommended', 1), ('page', 1), ('corrections', 1), ('columnists', 1), ('editorials', 1), ('contributors', 1), ('art', 1), ('dance', 1), ('music', 1), ('jobs', 1), ('weddings', 1), ('celebrations', 1), ('listings', 1), ('reader', 1), ('classifieds', 1), ('photography', 1), ('nyt', 1), ('journeys', 1), ('nytco', 1), ('delivery', 1), ('digital', 1), ('alerts', 1), ('rate', 1), ('applications', 1), ('replica', 1), ('ad', 1), ('feedback', 1), ('view', 1), ('version', 1), ('espantildeol', 1), ('instagram', 1), ('copy2017cablenewsnetwork', 1), ('turnerbroadcastingsysteminc', 1), ('allrightsreserved', 1), ('cnnsanstradecopy2016cablenewsnetwork', 1), ('adchoices', 1), ('msa', 1), ('statement', 1), ('transcripts', 1), ('license', 1), ('footage', 1), ('newsource', 1), ('world39s', 1), ('pricing', 1), ('dashboard', 1), ('built', 1), ('inspired', 1), ('otherdevelopers', 1), ('letter', 1), ('numeral', 1), ('characters', 1), ('brings', 1), ('move', 1), ('write', 1), ('collaboration', 1), ('conversations', 1), ('reviews', 1), ('pull', 1), ('requests', 1), ('weight', 1), ('improve', 1), ('chaos', 1), ('breath', 1), ('happens', 1), ('issues', 1), ('mention', 1), ('teammate', 1), ('involved', 1), ('favorites—then', 1), ('minutes', 1), ('administration', 1), ('boxes', 1), ('check', 1), ('administrative', 1), ('flexible', 1), ('meet', 1), ('requirements', 1), ('prevent', 1), ('protected', 1), ('branches', 1), ('commits', 1), ('required', 1), ('checks', 1), ('standard', 1), ('controlled', 1), ('encourage', 1), ('limiting', 1), ('granular', 1), ('permissions', 1), ('samlsso', 1), ('ldap', 1), ('1clrcodehosting', 1), ('hosted', 1), ('reliably', 1), ('githubcom', 1), ('deploy', 1), ('enterprise', 1), ('servers', 1), ('private', 1), ('amazon', 1), ('web', 1), ('azure', 1), ('google', 1), ('compare', 1), ('customize', 1), ('intuitive', 1), ('api', 1), ('integrate', 1), ('favorites', 1), ('happier', 1), ('efficient', 1), ('sometimes', 1), ('tool', 1), ('job', 1), ('try', 1), ('welcome', 1), ('theirprojects', 1), ('ariya', 1), ('hidayat', 1), ('phantomjs', 1), ('russell', 1), ('keithmagee', 1), ('pybee', 1), ('mailchimp', 1), ('marketing', 1), ('kris', 1), ('nova', 1), ('kuberneteskops', 1), ('evan', 1), ('vue', 1), ('mapbox', 1), ('frazelle', 1), ('kubernetes', 1), ('previously', 1), ('docker', 1), ('commit', 1), ('rover', 1), ('mars', 1), ('73m', 1), ('repositories', 1), ('githubs', 1), ('users', 1), ('influential', 1), ('technologies', 1), ('sourcecommunity', 1), ('26m', 1), ('experimenting', 1), ('programming', 1), ('languages', 1), ('lifes', 1), ('117k', 1), ('sizes', 1), ('support', 1), ('started', 1), ('free', 1), ('mdash', 1), ('join', 1), ('amazing', 1), ('documentation', 1), ('atom', 1), ('electron', 1), ('desktop', 1), ('partners', 1), ('sponsorships', 1), ('blog', 1), ('careers', 1), ('press', 1), ('shop', 1), ('resources', 1), ('forum', 1), ('training', 1), ('perform', 1), ('action', 1), ('time', 1)]\n",
      "\n",
      "\n",
      "[('supports', 1), ('internet', 1), ('explorer', 1), ('9', 1), ('earlier', 1), ('please', 1), ('browser', 1), ('log', 1), ('0', 1), ('settings', 1), ('english', 1), ('中文', 1), ('chinese', 1), ('december', 1), ('4', 1), ('quick', 1), ('close', 1), ('text', 1), ('input', 1), ('de', 1), ('la', 1), ('merced', 1), ('abelson', 1), ('1024', 1), ('combine', 1), ('drugstore', 1), ('giant', 1), ('biggest', 1), ('insurers', 1), ('companies', 1), ('basic', 1), ('regularly', 1), ('critics', 1), ('sharply', 1), ('limited', 1), ('lashes', 1), ('saying', 1), ('tatters', 1), ('shear', 1), ('extraordinary', 1), ('attack', 1), ('law', 1), ('enforcement', 1), ('body', 1), ('accused', 1), ('investigators', 1), ('bias', 1), ('dispute', 1), ('acted', 1), ('timeline', 1), ('phone', 1), ('calls', 1), ('stopgap', 1), ('measure', 1), ('thomas', 1), ('kaplan', 1), ('funding', 1), ('expire', 1), ('friday', 1), ('embroiled', 1), ('feud', 1), ('pass', 1), ('twoweek', 1), ('delay', 1), ('negotiate', 1), ('longterm', 1), ('package', 1), ('quarry', 1), ('isnt', 1), ('stone', 1), ('natalie', 1), ('kitroeff', 1), ('overhaul', 1), ('reinvigorate', 1), ('corporate', 1), ('wave', 1), ('investment', 1), ('hiring', 1), ('raises', 1), ('boardrooms', 1), ('executives', 1), ('savings', 1), ('lastminute', 1), ('breaks', 1), ('banks', 1), ('oil', 1), ('1056', 1), ('conductor', 1), ('sexually', 1), ('abused', 1), ('ago', 1), ('teenagers', 1), ('suspended', 1), ('fourdecade', 1), ('relationship', 1), ('74', 1), ('canceled', 1), ('scheduled', 1), ('engagements', 1), ('assault', 1), ('furor', 1), ('caitlin', 1), ('dickerson', 1), ('stephanie', 1), ('saul', 1), ('223', 1), ('spelman', 1), ('morehouse', 1), ('atlanta', 1), ('schools', 1), ('nationwide', 1), ('fielding', 1), ('complaints', 1), ('misconduct', 1), ('air', 1), ('force', 1), ('drills', 1), ('heightened', 1), ('tensions', 1), ('jerusalem', 1), ('simmers', 1), ('kushner', 1), ('optimistic', 1), ('substantive', 1), ('assessment', 1), ('uae', 1), ('denies', 1), ('yemen', 1), ('rebels', 1), ('fired', 1), ('missile', 1), ('abu', 1), ('dhabi', 1), ('nuclear', 1), ('disney', 1), ('resumed', 1), ('talks', 1), ('fox', 1), ('107', 1), ('taj', 1), ('mahal', 1), ('woodhousegetty', 1), ('images', 1), ('documentaries', 1), ('independence', 1), ('egypt', 1), ('dangerous', 1), ('egyptian', 1), ('friends', 1), ('country', 1), ('routinely', 1), ('compromised', 1), ('rebel', 1), ('mona', 1), ('elnaggar', 1), ('mark', 1), ('meatto', 1), ('briefing', 1), ('patrick', 1), ('boehler', 1), ('mike', 1), ('ives', 1), ('254', 1), ('heres', 1), ('listen', 1), ('conservative', 1), ('spoke', 1), ('matthew', 1), ('shaer', 1), ('contributing', 1), ('writer', 1), ('opinionated', 1), ('considers', 1), ('journalist', 1), ('listening', 1), ('audio', 1), ('follow', 1), ('apple', 1), ('podcasts', 1), ('radio', 1), ('public', 1), ('stitcher', 1), ('smarter', 1), ('6', 1), ('2018', 1), ('tim', 1), ('herrera', 1), ('excuse', 1), ('handle', 1), ('activity', 1), ('trackers', 1), ('gretchen', 1), ('reynolds', 1), ('child', 1), ('fitbit', 1), ('christmas', 1), ('expect', 1), ('active”', 1), ('expert', 1), ('300', 1), ('gifts', 1), ('75', 1), ('editors', 1), ('15', 1), ('categories', 1), ('journalism', 1), ('matters', 1), ('essential', 1), ('norilsk', 1), ('slave', 1), ('labor', 1), ('camp', 1), ('prospering', 1), ('palladium', 1), ('bad', 1), ('months', 1), ('temperatures', 1), ('minus', 1), ('80', 1), ('higgins', 1), ('alabamas', 1), ('disdain', 1), ('democrats', 1), ('senate', 1), ('alan', 1), ('blinder', 1), ('campbell', 1), ('robertson', 1), ('bidgood', 1), ('925', 1), ('nominee', 1), ('doug', 1), ('jones', 1), ('widely', 1), ('admired', 1), ('past', 1), ('affiliation', 1), ('hell', 1), ('call', 1), ('costs', 1), ('rebuilding', 1), ('syria', 1), ('political', 1), ('somini', 1), ('sengupta', 1), ('ravaged', 1), ('homs', 1), ('symbolize', 1), ('bashar', 1), ('alassads', 1), ('ruthless', 1), ('tactics', 1), ('embody', 1), ('looming', 1), ('challenge', 1), ('war', 1), ('approaches', 1), ('reconstruction', 1), ('windows', 1), ('london', 1), ('paris', 1), ('berlin', 1), ('wintry', 1), ('décor', 1), ('season', 1), ('designers', 1), ('incorporated', 1), ('themes', 1), ('displays', 1), ('currency', 1), ('boom', 1), ('hits', 1), ('suhyun', 1), ('lee', 1), ('nathaniel', 1), ('popper', 1), ('bitcoin', 1), ('currencies', 1), ('booming', 1), ('regular', 1), ('investors', 1), ('global', 1), ('frenzy', 1), ('paid', 1), ('parental', 1), ('leave', 1), ('ginia', 1), ('bellafante', 1), ('program', 1), ('applies', 1), ('managers', 1), ('omits', 1), ('vast', 1), ('majority', 1), ('workers', 1), ('teachers', 1), ('officers', 1), ('park', 1), ('rangers', 1), ('columnist', 1), ('sorkin', 1), ('colleagues', 1), ('sense', 1), ('headlines', 1), ('brokers', 1), ('allnew', 1), ('confidential', 1), ('tip', 1), ('provide', 1), ('materials', 1), ('journalists', 1), ('rises', 1), ('rely', 1), ('prominent', 1), ('strategist', 1), ('clash', 1), ('remain', 1), ('dominant', 1), ('gay', 1), ('politician', 1), ('proposes', 1), ('proposal', 1), ('legalizing', 1), ('final', 1), ('stages', 1), ('passage', 1), ('parliament', 1), ('revered', 1), ('figure', 1), ('ripples', 1), ('weinstein', 1), ('scandal', 1), ('allegations', 1), ('don', 1), ('burke', 1), ('longtime', 1), ('star', 1), ('“bloke”', 1), ('masculinity', 1), ('jews', 1), ('funny', 1), ('daubers', 1), ('“jewish', 1), ('comedy', 1), ('serious', 1), ('history”', 1), ('looks', 1), ('laughter', 1), ('2000', 1), ('laying', 1), ('detailed', 1), ('taxonomy', 1), ('humor', 1), ('seeker', 1), ('adventure', 1), ('papyrus', 1), ('adventures', 1), ('boy', 1), ('unconventional', 1), ('traveler', 1), ('1990', 1), ('musical', 1), ('fable', 1), ('love', 1), ('temperamental', 1), ('gods', 1), ('french', 1), ('antilles', 1), ('bold', 1), ('delight', 1), ('critic', 1), ('writes', 1), ('whats', 1), ('bigger', 1), ('threat', 1), ('normalization', 1), ('alarmism', 1), ('ivan', 1), ('krastev', 1), ('rightwing', 1), ('populists', 1), ('thrive', 1), ('tense', 1), ('polarization', 1), ('shouldnt', 1), ('fractured', 1), ('roger', 1), ('cohen', 1), ('lurches', 1), ('fragile', 1), ('truth', 1), ('blurred', 1), ('clinton', 1), ('election', 1), ('plot', 1), ('saudi', 1), ('arabias', 1), ('qatar', 1), ('202', 1), ('stop', 1), ('north', 1), ('act', 1), ('israel', 1), ('nitsana', 1), ('darshanleitner', 1), ('negotiations', 1), ('sanctions', 1), ('havent', 1), ('stopped', 1), ('kim', 1), ('regime', 1), ('financial', 1), ('warfare', 1), ('catalans', 1), ('owe', 1), ('explanation', 1), ('albert', 1), ('rivera', 1), ('215', 1), ('coexistence', 1), ('union', 1), ('articulate', 1), ('common', 1), ('spain', 1), ('losing', 1), ('elections', 1), ('201', 1), ('user', 1), ('wordplay', 1), ('watching', 1), ('ozella', 1), ('sister', 1), ('ran', 1), ('pats', 1), ('luncheonette', 1), ('1970s', 1), ('days', 1), ('restaurant', 1), ('closed', 1), ('ms', 1), ('embarked', 1), ('volunteering', 1), ('106th', 1), ('fund', 1), ('provided', 1), ('direct', 1), ('assistance', 1), ('donate', 1), ('advertisers', 1), ('player', 1), ('previous', 1), ('desk', 1), ('vulgarians', 1), ('sex', 1), ('drive', 1), ('readers', 1), ('discuss', 1), ('writers', 1), ('mistreatment', 1), ('rooted', 1), ('“brutality', 1), ('sexuality”', 1), ('sisters', 1), ('nurturing', 1), ('countless', 1), ('haircuts', 1), ('dinner', 1), ('happy', 1), ('anniversary', 1), ('heart', 1), ('transplant', 1), ('doctors', 1), ('fail', 1), ('children', 1), ('sterilized', 1), ('broadway', 1), ('pro', 1), ('basketball', 1), ('ugly', 1), ('streaks', 1), ('warriors', 1), ('knicks', 1), ('terrible', 1), ('navajo', 1), ('economy', 1), ('american', 1), ('singlefamily', 1), ('11yearold', 1), ('spent', 1), ('jail', 1), ('serial', 1), ('killer', 1), ('cellmate', 1), ('plan', 1), ('snubs', 1), ('palestinians', 1), ('actually', 1), ('chinas', 1), ('ai', 1), ('advances', 1), ('contributor', 1), ('abc', 1), ('reporter', 1), ('brian', 1), ('erroneous', 1), ('report', 1), ('bound', 1), ('history', 1), ('roiled', 1), ('metoo', 1), ('moment', 1), ('ministers', 1), ('revive', 1), ('martin', 1), ('luther', 1), ('kings', 1), ('1968', 1), ('poverty', 1), ('campaign', 1), ('technology', 1), ('shift', 1), ('41', 1), ('lithuania', 1), ('feed', 1), ('drone', 1), ('maker', 1), ('dji', 1), ('data', 1), ('officials', 1), ('snapchat', 1), ('remakes', 1), ('splitting', 1), ('social', 1), ('el', 1), ('museos', 1), ('leader', 1), ('bridge', 1), ('latino', 1), ('kennedy', 1), ('honors', 1), ('evoke', 1), ('pushes', 1), ('avoid', 1), ('path', 1), ('tricky', 1), ('drag', 1), ('event', 1), ('horizon', 1), ('resort', 1), ('canyon', 1), ('ranch', 1), ('succumbs', 1), ('botox', 1), ('rhythm', 1), ('colombias', 1), ('salsa', 1), ('capital', 1), ('water', 1), ('altogether', 1), ('wonderful', 1), ('coco', 1), ('tops', 1), ('box', 1), ('office', 1), ('quiet', 1), ('wonder', 1), ('wheel', 1), ('woody', 1), ('allens', 1), ('coney', 1), ('memory', 1), ('palace', 1), ('boulevard', 1), ('stabs', 1), ('queens', 1), ('drives', 1), ('helpers', 1), ('acting', 1), ('studios', 1), ('24', 1), ('17', 1), ('eli', 1), ('manning', 1), ('warms', 1), ('bench', 1), ('playoff', 1), ('alabama', 1), ('ohio', 1), ('tiger', 1), ('woods', 1), ('relishes', 1), ('struggle', 1), ('upanddown', 1), ('return', 1), ('sleepwalking', 1), ('70s', 1), ('downtown', 1), ('riot', 1), ('silly', 1), ('seas', 1), ('pirates', 1), ('penzance', 1), ('2017s', 1), ('supermoon', 1), ('moons', 1), ('super', 1), ('trilobites', 1), ('fossilized', 1), ('pterosaur', 1), ('eggs', 1), ('uncovered', 1), ('leon', 1), ('carried', 1), ('battle', 1), ('tarawa', 1), ('98', 1), ('adventurer', 1), ('william', 1), ('mayer', 1), ('wideranging', 1), ('composer', 1), ('dead', 1), ('91', 1), ('saturday', 1), ('night', 1), ('jabs', 1), ('matt', 1), ('lauer', 1), ('plays', 1), ('kicks', 1), ('word', 1), ('claire', 1), ('foy', 1), ('ready', 1), ('quit', 1), ('playing', 1), ('queen', 1), ('transplanted', 1), ('uterus', 1), ('birth', 1), ('footsteps', 1), ('inescapable', 1), ('poet', 1), ('nicaragua', 1), ('getaway', 1), ('sos', 1), ('rise', 1), ('shanghai', 1), ('enthusiast', 1), ('praise', 1), ('romance', 1), ('100', 1), ('notable', 1), ('applicant', 1), ('getting', 1), ('dream', 1), ('six', 1), ('myths', 1), ('pasteles', 1), ('puerto', 1), ('rican', 1), ('tradition', 1), ('special', 1), ('savor', 1), ('kitchen', 1), ('meat', 1), ('potatoes', 1), ('rachel', 1), ('brosnahans', 1), ('comic', 1), ('timing', 1), ('answer', 1), ('ferry', 1), ('changing', 1), ('brooklynqueens', 1), ('waterfront', 1), ('ticket', 1), ('38', 1), ('penthouse', 1), ('west', 1), ('chelsea', 1), ('novembers', 1), ('renters', 1), ('jersey', 1), ('upshot', 1), ('generation', 1), ('grumpy', 1), ('unhappy', 1), ('50', 1), ('bills', 1), ('automatic', 1), ('cuts', 1), ('pages', 1), ('explained', 1), ('exciting', 1), ('indian', 1), ('automakers', 1), ('comeback', 1), ('wheels', 1), ('near', 1), ('driving', 1), ('hands', 1), ('jenna', 1), ('lyonss', 1), ('discusses', 1), ('rap', 1), ('trumps', 1), ('studio', 1), ('artist', 1), ('painted', 1), ('landlord', 1), ('stage', 1), ('ronda', 1), ('kaysen', 1), ('tenant', 1), ('garden', 1), ('provides', 1), ('outside', 1), ('homes', 1), ('mortgage', 1), ('calculator', 1), ('emailed', 1), ('viewed', 1), ('trending', 1), ('recommended', 1), ('page', 1), ('corrections', 1), ('columnists', 1), ('editorials', 1), ('contributors', 1), ('art', 1), ('dance', 1), ('music', 1), ('jobs', 1), ('weddings', 1), ('celebrations', 1), ('listings', 1), ('reader', 1), ('classifieds', 1), ('photography', 1), ('nyt', 1), ('journeys', 1), ('nytco', 1), ('delivery', 1), ('digital', 1), ('alerts', 1), ('rate', 1), ('applications', 1), ('replica', 1), ('ad', 1), ('feedback', 1), ('view', 1), ('version', 1), ('espantildeol', 1), ('instagram', 1), ('copy2017cablenewsnetwork', 1), ('turnerbroadcastingsysteminc', 1), ('allrightsreserved', 1), ('cnnsanstradecopy2016cablenewsnetwork', 1), ('adchoices', 1), ('msa', 1), ('statement', 1), ('transcripts', 1), ('license', 1), ('footage', 1), ('newsource', 1), ('world39s', 1), ('pricing', 1), ('dashboard', 1), ('built', 1), ('inspired', 1), ('otherdevelopers', 1), ('letter', 1), ('numeral', 1), ('characters', 1), ('brings', 1), ('move', 1), ('write', 1), ('collaboration', 1), ('conversations', 1), ('reviews', 1), ('pull', 1), ('requests', 1), ('weight', 1), ('improve', 1), ('chaos', 1), ('breath', 1), ('happens', 1), ('issues', 1), ('mention', 1), ('teammate', 1), ('involved', 1), ('favorites—then', 1), ('minutes', 1), ('administration', 1), ('boxes', 1), ('check', 1), ('administrative', 1), ('flexible', 1), ('meet', 1), ('requirements', 1), ('prevent', 1), ('protected', 1), ('branches', 1), ('commits', 1), ('required', 1), ('checks', 1), ('standard', 1), ('controlled', 1), ('encourage', 1), ('limiting', 1), ('granular', 1), ('permissions', 1), ('samlsso', 1), ('ldap', 1), ('1clrcodehosting', 1), ('hosted', 1), ('reliably', 1), ('githubcom', 1), ('deploy', 1), ('enterprise', 1), ('servers', 1), ('private', 1), ('amazon', 1), ('web', 1), ('azure', 1), ('google', 1), ('compare', 1), ('customize', 1), ('intuitive', 1), ('api', 1), ('integrate', 1), ('favorites', 1), ('happier', 1), ('efficient', 1), ('sometimes', 1), ('tool', 1), ('job', 1), ('try', 1), ('welcome', 1), ('theirprojects', 1), ('ariya', 1), ('hidayat', 1), ('phantomjs', 1), ('russell', 1), ('keithmagee', 1), ('pybee', 1), ('mailchimp', 1), ('marketing', 1), ('kris', 1), ('nova', 1), ('kuberneteskops', 1), ('evan', 1), ('vue', 1), ('mapbox', 1), ('frazelle', 1), ('kubernetes', 1), ('previously', 1), ('docker', 1), ('commit', 1), ('rover', 1), ('mars', 1), ('73m', 1), ('repositories', 1), ('githubs', 1), ('users', 1), ('influential', 1), ('technologies', 1), ('sourcecommunity', 1), ('26m', 1), ('experimenting', 1), ('programming', 1), ('languages', 1), ('lifes', 1), ('117k', 1), ('sizes', 1), ('support', 1), ('started', 1), ('free', 1), ('mdash', 1), ('join', 1), ('amazing', 1), ('documentation', 1), ('atom', 1), ('electron', 1), ('desktop', 1), ('partners', 1), ('sponsorships', 1), ('blog', 1), ('careers', 1), ('press', 1), ('shop', 1), ('resources', 1), ('forum', 1), ('training', 1), ('perform', 1), ('action', 1), ('time', 1), ('multimedia', 2), ('upgrade', 2), ('content', 2), ('monday', 2), ('paper', 2), ('ny', 2), ('reed', 2), ('united', 2), ('touch', 2), ('people', 2), ('worry', 2), ('choices', 2), ('twitter', 2), ('fbi', 2), ('career', 2), ('claim', 2), ('flynn', 2), ('russia', 2), ('shutdown', 2), ('looms', 2), ('democratic', 2), ('trying', 2), ('spend', 2), ('gop', 2), ('cut', 2), ('ideas', 2), ('failure', 2), ('success', 2), ('bill', 2), ('opera', 2), ('james', 2), ('abuse', 2), ('accusations', 2), ('cooper', 2), ('decades', 2), ('roils', 2), ('historically', 2), ('plant', 2), ('daily', 2), ('360', 2), ('wonders', 2), ('jeremy', 2), ('yousur', 2), ('alhlou', 2), ('woman', 2), ('rent', 2), ('makes', 2), ('rebelled', 2), ('religion', 2), ('shes', 2), ('run', 2), ('day', 2), ('sean', 2), ('hannity', 2), ('perfect', 2), ('deep', 2), ('cant', 2), ('holiday', 2), ('gift', 2), ('lure', 2), ('except', 2), ('andrew', 2), ('jess', 2), ('roy', 2), ('moore', 2), ('voters', 2), ('party', 2), ('virtual', 2), ('leading', 2), ('citys', 2), ('police', 2), ('unions', 2), ('dealbook', 2), ('newsletter', 2), ('ross', 2), ('—', 2), ('shape', 2), ('australian', 2), ('samesex', 2), ('feels', 2), ('book', 2), ('norman', 2), ('baker', 2), ('89', 2), ('crossed', 2), ('atlantic', 2), ('raft', 2), ('brooklyn', 2), ('death', 2), ('peace', 2), ('billy', 2), ('bush', 2), ('yes', 2), ('fight', 2), ('options', 2), ('soil', 2), ('dirty', 2), ('planet', 2), ('devaluing', 2), ('royal', 2), ('impose', 2), ('choice', 2), ('editor', 2), ('insider', 2), ('todayrsquos', 2), ('puzzle', 2), ('neediest', 2), ('serving', 2), ('finlay', 2), ('week', 2), ('beyond', 2), ('loading', 2), ('explore', 2), ('letters', 2), ('talk', 2), ('male', 2), ('scallop', 2), ('spaceage', 2), ('sicilys', 2), ('emerald', 2), ('gem', 2), ('bronte', 2), ('pistachio', 2), ('plans', 2), ('facebook', 2), ('center', 2), ('movies', 2), ('matter', 2), ('raiders', 2), ('giants', 2), ('hundreds', 2), ('obituaries', 2), ('television', 2), ('live', 2), ('jeanclaude', 2), ('van', 2), ('damme', 2), ('36', 2), ('hours', 2), ('choosing', 2), ('million', 2), ('youre', 2), ('automobiles', 2), ('detroit', 2), ('forward', 2), ('space', 2), ('protect', 2), ('index', 2), ('store', 2), ('newsletters', 2), ('information', 2), ('copy', 2), ('contact', 2), ('advertise', 2), ('entertainment', 2), ('americas', 2), ('europe', 2), ('45', 2), ('congress', 2), ('nine', 2), ('trumpmerica', 2), ('markets', 2), ('stars', 2), ('screen', 2), ('binge', 2), ('gadgets', 2), ('startups', 2), ('tennis', 2), ('equestrian', 2), ('judo', 2), ('horse', 2), ('racing', 2), ('motorsport', 2), ('skiing', 2), ('olympics', 2), ('destinations', 2), ('drink', 2), ('architecture', 2), ('autos', 2), ('diet', 2), ('fitness', 2), ('parenting', 2), ('vital', 2), ('signs', 2), ('impact', 2), ('degrees', 2), ('heroes', 2), ('hln', 2), ('schedule', 2), ('cnnvr', 2), ('watch', 2), ('archives', 2), ('profiles', 2), ('pressroom', 2), ('partner', 2), ('sites', 2), ('ireport', 2), ('millions', 2), ('username', 2), ('password', 2), ('clicking', 2), ('agree', 2), ('occasionally', 2), ('send', 2), ('related', 2), ('team', 2), ('happen', 2), ('share', 2), ('browse', 2), ('discover', 2), ('authentication', 2), ('status', 2), ('maintain', 2), ('securely', 2), ('cloud', 2), ('process', 2), ('create', 2), ('theres', 2), ('worlds', 2), ('largest', 2), ('customer', 2), ('businesses', 2), ('tab', 2), ('window', 2), ('reload', 2), ('refresh', 2), ('session', 2), ('breaking', 3), ('nytimescom', 3), ('skip', 3), ('mobile', 3), ('cvs', 3), ('aetna', 3), ('reshape', 3), ('pm', 3), ('69', 3), ('billion', 3), ('services', 3), ('customers', 3), ('cvsaetna', 3), ('merger', 3), ('benefit', 3), ('consumers', 3), ('emails', 3), ('republicans', 3), ('leadership', 3), ('spending', 3), ('mcconnell', 3), ('map', 3), ('offers', 3), ('suspends', 3), ('levine', 3), ('sexual', 3), ('black', 3), ('south', 3), ('start', 3), ('debate', 3), ('seven', 3), ('apartment', 3), ('personal', 3), ('freedom', 3), ('washington', 3), ('look', 3), ('dont', 3), ('life', 3), ('cold', 3), ('darkness', 3), ('source', 3), ('race', 3), ('struggling', 3), ('power', 3), ('australia', 3), ('america', 3), ('asia', 3), ('marriage', 3), ('dies', 3), ('revived', 3), ('ravishing', 3), ('donald', 3), ('cost', 3), ('videos', 3), ('family', 3), ('sunday', 3), ('eyes', 3), ('theater', 3), ('middle', 3), ('east', 3), ('company', 3), ('sending', 3), ('stay', 3), ('golf', 3), ('sailing', 3), ('apps', 3), ('10', 3), ('sale', 3), ('access', 3), ('design', 3), ('nyc', 3), ('events', 3), ('manage', 3), ('email', 3), ('service', 3), ('weather', 3), ('regions', 3), ('sport', 3), ('vr', 3), ('development', 3), ('marketplace', 3), ('projects', 3), ('alongside', 3), ('management', 3), ('using', 3), ('integrations', 3), ('hosting', 3), ('signed', 3), ('sections', 4), ('español', 4), ('science', 4), ('sports', 4), ('deal', 4), ('michael', 4), ('own', 4), ('government', 4), ('inside', 4), ('care', 4), ('amid', 4), ('2', 4), ('colleges', 4), ('korea', 4), ('media', 4), ('host', 4), ('living', 4), ('money', 4), ('guide', 4), ('major', 4), ('policy', 4), ('island', 4), ('green', 4), ('women', 4), ('story', 4), ('jayz', 4), ('crossword', 4), ('play', 4), ('oped', 4), ('future', 4), ('fashion', 4), ('college', 4), ('football', 4), ('books', 4), ('tools', 4), ('account', 4), ('arabic', 4), ('preference', 4), ('confirm', 4), ('africa', 4), ('luxury', 4), ('platform', 4), ('subscribe', 5), ('todays', 5), ('travel', 5), ('real', 5), ('estate', 5), ('top', 5), ('buy', 5), ('industry', 5), ('president', 5), ('met', 5), ('comments', 5), ('am', 5), ('city', 5), ('china', 5), ('subscriptions', 5), ('education', 5), ('feature', 5), ('privacy', 5), ('worldwide', 5), ('software', 5), ('teams', 5), ('maintainer', 5), ('2017', 6), ('tech', 6), ('style', 6), ('tv', 6), ('culture', 6), ('project', 6), ('community', 6), ('build', 6), ('terms', 6), ('features', 6), ('search', 7), ('food', 7), ('tax', 7), ('learn', 8), ('navigation', 8), ('politics', 8), ('arts', 8), ('magazine', 8), ('et', 8), ('set', 8), ('developers', 8), ('security', 8), ('edition', 9), ('sign', 9), ('site', 10), ('trump', 10), ('home', 10), ('help', 10), ('code', 10), ('york', 11), ('cnn', 11), ('international', 11), ('world', 12), ('times', 13), ('news', 13), ('business', 13), ('opinion', 13), ('video', 14), ('review', 14), ('health', 16), ('github', 26), ('raquo', 34)]\n"
     ]
    }
   ],
   "source": [
    "w4 = OrderedWebWordsFrequency('http://www.times.com', 'http://edition.cnn.com', 'https://github.com')\n",
    "print(w4.getWordsFrequency())\n",
    "print()\n",
    "print()\n",
    "print(w4.getWordsFrequency(reverse = True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - 먼저 OrderedWebWordsFrequency 클래스는 WebWordsFrequency 클래스를 상속받습니다. 그리고 ```__init___()``` 함수를 정의하고 이 함수 내에서는 부모 클래스인 WebWordsFrequency 클래스의  ```__init___()``` 함수를 호출합니다. <br><br>\n",
    "\n",
    "> - getWordsFrequency 함수에서는 인자로 reverse 값이 들어가는데, 디폴트값을 False으로 설정해놓습니다. 그리고 각 URL의 웹페이지들을 종합적으로 분석한 단어 출현빈도를 저장하는 사전(totalWords)에 부모 클래스의 getWordsFrequency() 함수를 호출해줍니다. 기본적으로 출현빈도의 내림차순(즉, 사전의 벨류값을 기준으로 내림차순)으로 정렬하므로 totalWords의 벨류값들을 저장하는 리스트(temp)을 선언하고, 이를 sort 함수를 통해 정렬해줍니다. 여기서 reverse 값은 현재 getWordsFrequency에서 들어온 인자값 reverse에 not을 붙이면 됩니다. 이렇게 하는 이유는 현재 getWordsFrequency 함수의 reverse는 디폴트값으로 False를 설정해놓는데, 이는 내림차순을 기본으로 한다는 것입니다. 하지만 sort 함수에서는 reverse의 값을 True로 지정해주면 내림차순으로 되기 때문입니다. 반복문을 돌면서 totalWords의 벨류값을 저장하는 리스트(temp)에서 하나의 벨류값(value)을 뽑고, totalWords의 키값들을 뽑아 반복문을 돌면서 하나의 키값(key)에 해당하는 벨류값이 value와 동일하면 사전의 벨류값을 기준으로 정렬된 리스트를 저장하는 li에 해당 키와 벨류값을 저장시켜줍니다. 그리고 li에 저장된 totalWords의 벨류값을 지워주고 break 합니다. (이렇게 해주는 이유는 다음 정렬시 동일한 벨류값의 접근을 막기 위함) 마지막으로 정렬된 li을 반환합니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 9번 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "다음과 같은 코딩이 가능하도록 OrderedWebWordsFrequency 안에 반복자와 관련된 메소드를 추가하시오.\n",
    "> ```>>> for i in w4:```<br>\n",
    "> ```>>>       print(i)```<br>\n",
    "> ('site, 12)<br>\n",
    "> ('science', 11)<br>\n",
    "> ('hello', 8)<br>\n",
    "> ('world', 2)<br>\n",
    "> ('program', 1)<br>\n",
    "> ('python', 1)<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class OrderedWebWordsFrequency(WebWordsFrequency):\n",
    "    def __init__(self, *l):\n",
    "        WebWordsFrequency.__init__(self, *l)\n",
    "    \n",
    "    def getWordsFrequency(self, reverse = False):\n",
    "        totalWords = WebWordsFrequency.getWordsFrequency(self)\n",
    "        \n",
    "        # 기본적으로 내림차순 정렬 후 반환\n",
    "        li = []\n",
    "        temp = list(totalWords.values())\n",
    "        temp.sort(reverse = not reverse)\n",
    "        for value in temp:\n",
    "            for key in totalWords.keys():\n",
    "                if value == totalWords[key]:\n",
    "                    li.append((key, totalWords[key]))\n",
    "                    del totalWords[key]\n",
    "                    break\n",
    "        return li\n",
    "    \n",
    "    def __iter__(self):\n",
    "        self.i = -1\n",
    "        self.tmpFrequency = self.getWordsFrequency()\n",
    "        return self\n",
    "    \n",
    "    def __next__(self):\n",
    "        self.i += 1\n",
    "        if len(self.tmpFrequency) <= self.i:\n",
    "            raise StopIteration\n",
    "            \n",
    "        return self.tmpFrequency[self.i]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('raquo', 34)\n",
      "('github', 26)\n",
      "('health', 16)\n",
      "('video', 14)\n",
      "('review', 14)\n",
      "('times', 13)\n",
      "('news', 13)\n",
      "('business', 13)\n",
      "('opinion', 13)\n",
      "('world', 12)\n",
      "('york', 11)\n",
      "('cnn', 11)\n",
      "('international', 11)\n",
      "('site', 10)\n",
      "('trump', 10)\n",
      "('home', 10)\n",
      "('help', 10)\n",
      "('code', 10)\n",
      "('edition', 9)\n",
      "('sign', 9)\n",
      "('learn', 8)\n",
      "('navigation', 8)\n",
      "('politics', 8)\n",
      "('arts', 8)\n",
      "('magazine', 8)\n",
      "('et', 8)\n",
      "('set', 8)\n",
      "('developers', 8)\n",
      "('security', 8)\n",
      "('search', 7)\n",
      "('food', 7)\n",
      "('tax', 7)\n",
      "('2017', 6)\n",
      "('tech', 6)\n",
      "('style', 6)\n",
      "('tv', 6)\n",
      "('culture', 6)\n",
      "('project', 6)\n",
      "('community', 6)\n",
      "('build', 6)\n",
      "('terms', 6)\n",
      "('features', 6)\n",
      "('subscribe', 5)\n",
      "('todays', 5)\n",
      "('travel', 5)\n",
      "('real', 5)\n",
      "('estate', 5)\n",
      "('top', 5)\n",
      "('buy', 5)\n",
      "('industry', 5)\n",
      "('president', 5)\n",
      "('met', 5)\n",
      "('comments', 5)\n",
      "('am', 5)\n",
      "('city', 5)\n",
      "('china', 5)\n",
      "('subscriptions', 5)\n",
      "('education', 5)\n",
      "('feature', 5)\n",
      "('privacy', 5)\n",
      "('worldwide', 5)\n",
      "('software', 5)\n",
      "('teams', 5)\n",
      "('maintainer', 5)\n",
      "('sections', 4)\n",
      "('español', 4)\n",
      "('science', 4)\n",
      "('sports', 4)\n",
      "('deal', 4)\n",
      "('michael', 4)\n",
      "('own', 4)\n",
      "('government', 4)\n",
      "('inside', 4)\n",
      "('care', 4)\n",
      "('amid', 4)\n",
      "('2', 4)\n",
      "('colleges', 4)\n",
      "('korea', 4)\n",
      "('media', 4)\n",
      "('host', 4)\n",
      "('living', 4)\n",
      "('money', 4)\n",
      "('guide', 4)\n",
      "('major', 4)\n",
      "('policy', 4)\n",
      "('island', 4)\n",
      "('green', 4)\n",
      "('women', 4)\n",
      "('story', 4)\n",
      "('jayz', 4)\n",
      "('crossword', 4)\n",
      "('play', 4)\n",
      "('oped', 4)\n",
      "('future', 4)\n",
      "('fashion', 4)\n",
      "('college', 4)\n",
      "('football', 4)\n",
      "('books', 4)\n",
      "('tools', 4)\n",
      "('account', 4)\n",
      "('arabic', 4)\n",
      "('preference', 4)\n",
      "('confirm', 4)\n",
      "('africa', 4)\n",
      "('luxury', 4)\n",
      "('platform', 4)\n",
      "('breaking', 3)\n",
      "('nytimescom', 3)\n",
      "('skip', 3)\n",
      "('mobile', 3)\n",
      "('cvs', 3)\n",
      "('aetna', 3)\n",
      "('reshape', 3)\n",
      "('pm', 3)\n",
      "('69', 3)\n",
      "('billion', 3)\n",
      "('services', 3)\n",
      "('customers', 3)\n",
      "('cvsaetna', 3)\n",
      "('merger', 3)\n",
      "('benefit', 3)\n",
      "('consumers', 3)\n",
      "('emails', 3)\n",
      "('republicans', 3)\n",
      "('leadership', 3)\n",
      "('spending', 3)\n",
      "('mcconnell', 3)\n",
      "('map', 3)\n",
      "('offers', 3)\n",
      "('suspends', 3)\n",
      "('levine', 3)\n",
      "('sexual', 3)\n",
      "('black', 3)\n",
      "('south', 3)\n",
      "('start', 3)\n",
      "('debate', 3)\n",
      "('seven', 3)\n",
      "('apartment', 3)\n",
      "('personal', 3)\n",
      "('freedom', 3)\n",
      "('washington', 3)\n",
      "('look', 3)\n",
      "('dont', 3)\n",
      "('life', 3)\n",
      "('cold', 3)\n",
      "('darkness', 3)\n",
      "('source', 3)\n",
      "('race', 3)\n",
      "('struggling', 3)\n",
      "('power', 3)\n",
      "('australia', 3)\n",
      "('america', 3)\n",
      "('asia', 3)\n",
      "('marriage', 3)\n",
      "('dies', 3)\n",
      "('revived', 3)\n",
      "('ravishing', 3)\n",
      "('donald', 3)\n",
      "('cost', 3)\n",
      "('videos', 3)\n",
      "('family', 3)\n",
      "('sunday', 3)\n",
      "('eyes', 3)\n",
      "('theater', 3)\n",
      "('middle', 3)\n",
      "('east', 3)\n",
      "('company', 3)\n",
      "('sending', 3)\n",
      "('stay', 3)\n",
      "('golf', 3)\n",
      "('sailing', 3)\n",
      "('apps', 3)\n",
      "('10', 3)\n",
      "('sale', 3)\n",
      "('access', 3)\n",
      "('design', 3)\n",
      "('nyc', 3)\n",
      "('events', 3)\n",
      "('manage', 3)\n",
      "('email', 3)\n",
      "('service', 3)\n",
      "('weather', 3)\n",
      "('regions', 3)\n",
      "('sport', 3)\n",
      "('vr', 3)\n",
      "('development', 3)\n",
      "('marketplace', 3)\n",
      "('projects', 3)\n",
      "('alongside', 3)\n",
      "('management', 3)\n",
      "('using', 3)\n",
      "('integrations', 3)\n",
      "('hosting', 3)\n",
      "('signed', 3)\n",
      "('multimedia', 2)\n",
      "('upgrade', 2)\n",
      "('content', 2)\n",
      "('monday', 2)\n",
      "('paper', 2)\n",
      "('ny', 2)\n",
      "('reed', 2)\n",
      "('united', 2)\n",
      "('touch', 2)\n",
      "('people', 2)\n",
      "('worry', 2)\n",
      "('choices', 2)\n",
      "('twitter', 2)\n",
      "('fbi', 2)\n",
      "('career', 2)\n",
      "('claim', 2)\n",
      "('flynn', 2)\n",
      "('russia', 2)\n",
      "('shutdown', 2)\n",
      "('looms', 2)\n",
      "('democratic', 2)\n",
      "('trying', 2)\n",
      "('spend', 2)\n",
      "('gop', 2)\n",
      "('cut', 2)\n",
      "('ideas', 2)\n",
      "('failure', 2)\n",
      "('success', 2)\n",
      "('bill', 2)\n",
      "('opera', 2)\n",
      "('james', 2)\n",
      "('abuse', 2)\n",
      "('accusations', 2)\n",
      "('cooper', 2)\n",
      "('decades', 2)\n",
      "('roils', 2)\n",
      "('historically', 2)\n",
      "('plant', 2)\n",
      "('daily', 2)\n",
      "('360', 2)\n",
      "('wonders', 2)\n",
      "('jeremy', 2)\n",
      "('yousur', 2)\n",
      "('alhlou', 2)\n",
      "('woman', 2)\n",
      "('rent', 2)\n",
      "('makes', 2)\n",
      "('rebelled', 2)\n",
      "('religion', 2)\n",
      "('shes', 2)\n",
      "('run', 2)\n",
      "('day', 2)\n",
      "('sean', 2)\n",
      "('hannity', 2)\n",
      "('perfect', 2)\n",
      "('deep', 2)\n",
      "('cant', 2)\n",
      "('holiday', 2)\n",
      "('gift', 2)\n",
      "('lure', 2)\n",
      "('except', 2)\n",
      "('andrew', 2)\n",
      "('jess', 2)\n",
      "('roy', 2)\n",
      "('moore', 2)\n",
      "('voters', 2)\n",
      "('party', 2)\n",
      "('virtual', 2)\n",
      "('leading', 2)\n",
      "('citys', 2)\n",
      "('police', 2)\n",
      "('unions', 2)\n",
      "('dealbook', 2)\n",
      "('newsletter', 2)\n",
      "('ross', 2)\n",
      "('—', 2)\n",
      "('shape', 2)\n",
      "('australian', 2)\n",
      "('samesex', 2)\n",
      "('feels', 2)\n",
      "('book', 2)\n",
      "('norman', 2)\n",
      "('baker', 2)\n",
      "('89', 2)\n",
      "('crossed', 2)\n",
      "('atlantic', 2)\n",
      "('raft', 2)\n",
      "('brooklyn', 2)\n",
      "('death', 2)\n",
      "('peace', 2)\n",
      "('billy', 2)\n",
      "('bush', 2)\n",
      "('yes', 2)\n",
      "('fight', 2)\n",
      "('options', 2)\n",
      "('soil', 2)\n",
      "('dirty', 2)\n",
      "('planet', 2)\n",
      "('devaluing', 2)\n",
      "('royal', 2)\n",
      "('impose', 2)\n",
      "('choice', 2)\n",
      "('editor', 2)\n",
      "('insider', 2)\n",
      "('todayrsquos', 2)\n",
      "('puzzle', 2)\n",
      "('neediest', 2)\n",
      "('serving', 2)\n",
      "('finlay', 2)\n",
      "('week', 2)\n",
      "('beyond', 2)\n",
      "('loading', 2)\n",
      "('explore', 2)\n",
      "('letters', 2)\n",
      "('talk', 2)\n",
      "('male', 2)\n",
      "('scallop', 2)\n",
      "('spaceage', 2)\n",
      "('sicilys', 2)\n",
      "('emerald', 2)\n",
      "('gem', 2)\n",
      "('bronte', 2)\n",
      "('pistachio', 2)\n",
      "('plans', 2)\n",
      "('facebook', 2)\n",
      "('center', 2)\n",
      "('movies', 2)\n",
      "('matter', 2)\n",
      "('raiders', 2)\n",
      "('giants', 2)\n",
      "('hundreds', 2)\n",
      "('obituaries', 2)\n",
      "('television', 2)\n",
      "('live', 2)\n",
      "('jeanclaude', 2)\n",
      "('van', 2)\n",
      "('damme', 2)\n",
      "('36', 2)\n",
      "('hours', 2)\n",
      "('choosing', 2)\n",
      "('million', 2)\n",
      "('youre', 2)\n",
      "('automobiles', 2)\n",
      "('detroit', 2)\n",
      "('forward', 2)\n",
      "('space', 2)\n",
      "('protect', 2)\n",
      "('index', 2)\n",
      "('store', 2)\n",
      "('newsletters', 2)\n",
      "('information', 2)\n",
      "('copy', 2)\n",
      "('contact', 2)\n",
      "('advertise', 2)\n",
      "('entertainment', 2)\n",
      "('americas', 2)\n",
      "('europe', 2)\n",
      "('45', 2)\n",
      "('congress', 2)\n",
      "('nine', 2)\n",
      "('trumpmerica', 2)\n",
      "('markets', 2)\n",
      "('stars', 2)\n",
      "('screen', 2)\n",
      "('binge', 2)\n",
      "('gadgets', 2)\n",
      "('startups', 2)\n",
      "('tennis', 2)\n",
      "('equestrian', 2)\n",
      "('judo', 2)\n",
      "('horse', 2)\n",
      "('racing', 2)\n",
      "('motorsport', 2)\n",
      "('skiing', 2)\n",
      "('olympics', 2)\n",
      "('destinations', 2)\n",
      "('drink', 2)\n",
      "('architecture', 2)\n",
      "('autos', 2)\n",
      "('diet', 2)\n",
      "('fitness', 2)\n",
      "('parenting', 2)\n",
      "('vital', 2)\n",
      "('signs', 2)\n",
      "('impact', 2)\n",
      "('degrees', 2)\n",
      "('heroes', 2)\n",
      "('hln', 2)\n",
      "('schedule', 2)\n",
      "('cnnvr', 2)\n",
      "('watch', 2)\n",
      "('archives', 2)\n",
      "('profiles', 2)\n",
      "('pressroom', 2)\n",
      "('partner', 2)\n",
      "('sites', 2)\n",
      "('ireport', 2)\n",
      "('millions', 2)\n",
      "('username', 2)\n",
      "('password', 2)\n",
      "('clicking', 2)\n",
      "('agree', 2)\n",
      "('occasionally', 2)\n",
      "('send', 2)\n",
      "('related', 2)\n",
      "('team', 2)\n",
      "('happen', 2)\n",
      "('share', 2)\n",
      "('browse', 2)\n",
      "('discover', 2)\n",
      "('authentication', 2)\n",
      "('status', 2)\n",
      "('maintain', 2)\n",
      "('securely', 2)\n",
      "('cloud', 2)\n",
      "('process', 2)\n",
      "('create', 2)\n",
      "('theres', 2)\n",
      "('worlds', 2)\n",
      "('largest', 2)\n",
      "('customer', 2)\n",
      "('businesses', 2)\n",
      "('tab', 2)\n",
      "('window', 2)\n",
      "('reload', 2)\n",
      "('refresh', 2)\n",
      "('session', 2)\n",
      "('supports', 1)\n",
      "('internet', 1)\n",
      "('explorer', 1)\n",
      "('9', 1)\n",
      "('earlier', 1)\n",
      "('please', 1)\n",
      "('browser', 1)\n",
      "('log', 1)\n",
      "('0', 1)\n",
      "('settings', 1)\n",
      "('english', 1)\n",
      "('中文', 1)\n",
      "('chinese', 1)\n",
      "('december', 1)\n",
      "('4', 1)\n",
      "('quick', 1)\n",
      "('close', 1)\n",
      "('text', 1)\n",
      "('input', 1)\n",
      "('de', 1)\n",
      "('la', 1)\n",
      "('merced', 1)\n",
      "('abelson', 1)\n",
      "('1024', 1)\n",
      "('combine', 1)\n",
      "('drugstore', 1)\n",
      "('giant', 1)\n",
      "('biggest', 1)\n",
      "('insurers', 1)\n",
      "('companies', 1)\n",
      "('basic', 1)\n",
      "('regularly', 1)\n",
      "('critics', 1)\n",
      "('sharply', 1)\n",
      "('limited', 1)\n",
      "('lashes', 1)\n",
      "('saying', 1)\n",
      "('tatters', 1)\n",
      "('shear', 1)\n",
      "('extraordinary', 1)\n",
      "('attack', 1)\n",
      "('law', 1)\n",
      "('enforcement', 1)\n",
      "('body', 1)\n",
      "('accused', 1)\n",
      "('investigators', 1)\n",
      "('bias', 1)\n",
      "('dispute', 1)\n",
      "('acted', 1)\n",
      "('timeline', 1)\n",
      "('phone', 1)\n",
      "('calls', 1)\n",
      "('stopgap', 1)\n",
      "('measure', 1)\n",
      "('thomas', 1)\n",
      "('kaplan', 1)\n",
      "('funding', 1)\n",
      "('expire', 1)\n",
      "('friday', 1)\n",
      "('embroiled', 1)\n",
      "('feud', 1)\n",
      "('pass', 1)\n",
      "('twoweek', 1)\n",
      "('delay', 1)\n",
      "('negotiate', 1)\n",
      "('longterm', 1)\n",
      "('package', 1)\n",
      "('quarry', 1)\n",
      "('isnt', 1)\n",
      "('stone', 1)\n",
      "('natalie', 1)\n",
      "('kitroeff', 1)\n",
      "('overhaul', 1)\n",
      "('reinvigorate', 1)\n",
      "('corporate', 1)\n",
      "('wave', 1)\n",
      "('investment', 1)\n",
      "('hiring', 1)\n",
      "('raises', 1)\n",
      "('boardrooms', 1)\n",
      "('executives', 1)\n",
      "('savings', 1)\n",
      "('lastminute', 1)\n",
      "('breaks', 1)\n",
      "('banks', 1)\n",
      "('oil', 1)\n",
      "('1056', 1)\n",
      "('conductor', 1)\n",
      "('sexually', 1)\n",
      "('abused', 1)\n",
      "('ago', 1)\n",
      "('teenagers', 1)\n",
      "('suspended', 1)\n",
      "('fourdecade', 1)\n",
      "('relationship', 1)\n",
      "('74', 1)\n",
      "('canceled', 1)\n",
      "('scheduled', 1)\n",
      "('engagements', 1)\n",
      "('assault', 1)\n",
      "('furor', 1)\n",
      "('caitlin', 1)\n",
      "('dickerson', 1)\n",
      "('stephanie', 1)\n",
      "('saul', 1)\n",
      "('223', 1)\n",
      "('spelman', 1)\n",
      "('morehouse', 1)\n",
      "('atlanta', 1)\n",
      "('schools', 1)\n",
      "('nationwide', 1)\n",
      "('fielding', 1)\n",
      "('complaints', 1)\n",
      "('misconduct', 1)\n",
      "('air', 1)\n",
      "('force', 1)\n",
      "('drills', 1)\n",
      "('heightened', 1)\n",
      "('tensions', 1)\n",
      "('jerusalem', 1)\n",
      "('simmers', 1)\n",
      "('kushner', 1)\n",
      "('optimistic', 1)\n",
      "('substantive', 1)\n",
      "('assessment', 1)\n",
      "('uae', 1)\n",
      "('denies', 1)\n",
      "('yemen', 1)\n",
      "('rebels', 1)\n",
      "('fired', 1)\n",
      "('missile', 1)\n",
      "('abu', 1)\n",
      "('dhabi', 1)\n",
      "('nuclear', 1)\n",
      "('disney', 1)\n",
      "('resumed', 1)\n",
      "('talks', 1)\n",
      "('fox', 1)\n",
      "('107', 1)\n",
      "('taj', 1)\n",
      "('mahal', 1)\n",
      "('woodhousegetty', 1)\n",
      "('images', 1)\n",
      "('documentaries', 1)\n",
      "('independence', 1)\n",
      "('egypt', 1)\n",
      "('dangerous', 1)\n",
      "('egyptian', 1)\n",
      "('friends', 1)\n",
      "('country', 1)\n",
      "('routinely', 1)\n",
      "('compromised', 1)\n",
      "('rebel', 1)\n",
      "('mona', 1)\n",
      "('elnaggar', 1)\n",
      "('mark', 1)\n",
      "('meatto', 1)\n",
      "('briefing', 1)\n",
      "('patrick', 1)\n",
      "('boehler', 1)\n",
      "('mike', 1)\n",
      "('ives', 1)\n",
      "('254', 1)\n",
      "('heres', 1)\n",
      "('listen', 1)\n",
      "('conservative', 1)\n",
      "('spoke', 1)\n",
      "('matthew', 1)\n",
      "('shaer', 1)\n",
      "('contributing', 1)\n",
      "('writer', 1)\n",
      "('opinionated', 1)\n",
      "('considers', 1)\n",
      "('journalist', 1)\n",
      "('listening', 1)\n",
      "('audio', 1)\n",
      "('follow', 1)\n",
      "('apple', 1)\n",
      "('podcasts', 1)\n",
      "('radio', 1)\n",
      "('public', 1)\n",
      "('stitcher', 1)\n",
      "('smarter', 1)\n",
      "('6', 1)\n",
      "('2018', 1)\n",
      "('tim', 1)\n",
      "('herrera', 1)\n",
      "('excuse', 1)\n",
      "('handle', 1)\n",
      "('activity', 1)\n",
      "('trackers', 1)\n",
      "('gretchen', 1)\n",
      "('reynolds', 1)\n",
      "('child', 1)\n",
      "('fitbit', 1)\n",
      "('christmas', 1)\n",
      "('expect', 1)\n",
      "('active”', 1)\n",
      "('expert', 1)\n",
      "('300', 1)\n",
      "('gifts', 1)\n",
      "('75', 1)\n",
      "('editors', 1)\n",
      "('15', 1)\n",
      "('categories', 1)\n",
      "('journalism', 1)\n",
      "('matters', 1)\n",
      "('essential', 1)\n",
      "('norilsk', 1)\n",
      "('slave', 1)\n",
      "('labor', 1)\n",
      "('camp', 1)\n",
      "('prospering', 1)\n",
      "('palladium', 1)\n",
      "('bad', 1)\n",
      "('months', 1)\n",
      "('temperatures', 1)\n",
      "('minus', 1)\n",
      "('80', 1)\n",
      "('higgins', 1)\n",
      "('alabamas', 1)\n",
      "('disdain', 1)\n",
      "('democrats', 1)\n",
      "('senate', 1)\n",
      "('alan', 1)\n",
      "('blinder', 1)\n",
      "('campbell', 1)\n",
      "('robertson', 1)\n",
      "('bidgood', 1)\n",
      "('925', 1)\n",
      "('nominee', 1)\n",
      "('doug', 1)\n",
      "('jones', 1)\n",
      "('widely', 1)\n",
      "('admired', 1)\n",
      "('past', 1)\n",
      "('affiliation', 1)\n",
      "('hell', 1)\n",
      "('call', 1)\n",
      "('costs', 1)\n",
      "('rebuilding', 1)\n",
      "('syria', 1)\n",
      "('political', 1)\n",
      "('somini', 1)\n",
      "('sengupta', 1)\n",
      "('ravaged', 1)\n",
      "('homs', 1)\n",
      "('symbolize', 1)\n",
      "('bashar', 1)\n",
      "('alassads', 1)\n",
      "('ruthless', 1)\n",
      "('tactics', 1)\n",
      "('embody', 1)\n",
      "('looming', 1)\n",
      "('challenge', 1)\n",
      "('war', 1)\n",
      "('approaches', 1)\n",
      "('reconstruction', 1)\n",
      "('windows', 1)\n",
      "('london', 1)\n",
      "('paris', 1)\n",
      "('berlin', 1)\n",
      "('wintry', 1)\n",
      "('décor', 1)\n",
      "('season', 1)\n",
      "('designers', 1)\n",
      "('incorporated', 1)\n",
      "('themes', 1)\n",
      "('displays', 1)\n",
      "('currency', 1)\n",
      "('boom', 1)\n",
      "('hits', 1)\n",
      "('suhyun', 1)\n",
      "('lee', 1)\n",
      "('nathaniel', 1)\n",
      "('popper', 1)\n",
      "('bitcoin', 1)\n",
      "('currencies', 1)\n",
      "('booming', 1)\n",
      "('regular', 1)\n",
      "('investors', 1)\n",
      "('global', 1)\n",
      "('frenzy', 1)\n",
      "('paid', 1)\n",
      "('parental', 1)\n",
      "('leave', 1)\n",
      "('ginia', 1)\n",
      "('bellafante', 1)\n",
      "('program', 1)\n",
      "('applies', 1)\n",
      "('managers', 1)\n",
      "('omits', 1)\n",
      "('vast', 1)\n",
      "('majority', 1)\n",
      "('workers', 1)\n",
      "('teachers', 1)\n",
      "('officers', 1)\n",
      "('park', 1)\n",
      "('rangers', 1)\n",
      "('columnist', 1)\n",
      "('sorkin', 1)\n",
      "('colleagues', 1)\n",
      "('sense', 1)\n",
      "('headlines', 1)\n",
      "('brokers', 1)\n",
      "('allnew', 1)\n",
      "('confidential', 1)\n",
      "('tip', 1)\n",
      "('provide', 1)\n",
      "('materials', 1)\n",
      "('journalists', 1)\n",
      "('rises', 1)\n",
      "('rely', 1)\n",
      "('prominent', 1)\n",
      "('strategist', 1)\n",
      "('clash', 1)\n",
      "('remain', 1)\n",
      "('dominant', 1)\n",
      "('gay', 1)\n",
      "('politician', 1)\n",
      "('proposes', 1)\n",
      "('proposal', 1)\n",
      "('legalizing', 1)\n",
      "('final', 1)\n",
      "('stages', 1)\n",
      "('passage', 1)\n",
      "('parliament', 1)\n",
      "('revered', 1)\n",
      "('figure', 1)\n",
      "('ripples', 1)\n",
      "('weinstein', 1)\n",
      "('scandal', 1)\n",
      "('allegations', 1)\n",
      "('don', 1)\n",
      "('burke', 1)\n",
      "('longtime', 1)\n",
      "('star', 1)\n",
      "('“bloke”', 1)\n",
      "('masculinity', 1)\n",
      "('jews', 1)\n",
      "('funny', 1)\n",
      "('daubers', 1)\n",
      "('“jewish', 1)\n",
      "('comedy', 1)\n",
      "('serious', 1)\n",
      "('history”', 1)\n",
      "('looks', 1)\n",
      "('laughter', 1)\n",
      "('2000', 1)\n",
      "('laying', 1)\n",
      "('detailed', 1)\n",
      "('taxonomy', 1)\n",
      "('humor', 1)\n",
      "('seeker', 1)\n",
      "('adventure', 1)\n",
      "('papyrus', 1)\n",
      "('adventures', 1)\n",
      "('boy', 1)\n",
      "('unconventional', 1)\n",
      "('traveler', 1)\n",
      "('1990', 1)\n",
      "('musical', 1)\n",
      "('fable', 1)\n",
      "('love', 1)\n",
      "('temperamental', 1)\n",
      "('gods', 1)\n",
      "('french', 1)\n",
      "('antilles', 1)\n",
      "('bold', 1)\n",
      "('delight', 1)\n",
      "('critic', 1)\n",
      "('writes', 1)\n",
      "('whats', 1)\n",
      "('bigger', 1)\n",
      "('threat', 1)\n",
      "('normalization', 1)\n",
      "('alarmism', 1)\n",
      "('ivan', 1)\n",
      "('krastev', 1)\n",
      "('rightwing', 1)\n",
      "('populists', 1)\n",
      "('thrive', 1)\n",
      "('tense', 1)\n",
      "('polarization', 1)\n",
      "('shouldnt', 1)\n",
      "('fractured', 1)\n",
      "('roger', 1)\n",
      "('cohen', 1)\n",
      "('lurches', 1)\n",
      "('fragile', 1)\n",
      "('truth', 1)\n",
      "('blurred', 1)\n",
      "('clinton', 1)\n",
      "('election', 1)\n",
      "('plot', 1)\n",
      "('saudi', 1)\n",
      "('arabias', 1)\n",
      "('qatar', 1)\n",
      "('202', 1)\n",
      "('stop', 1)\n",
      "('north', 1)\n",
      "('act', 1)\n",
      "('israel', 1)\n",
      "('nitsana', 1)\n",
      "('darshanleitner', 1)\n",
      "('negotiations', 1)\n",
      "('sanctions', 1)\n",
      "('havent', 1)\n",
      "('stopped', 1)\n",
      "('kim', 1)\n",
      "('regime', 1)\n",
      "('financial', 1)\n",
      "('warfare', 1)\n",
      "('catalans', 1)\n",
      "('owe', 1)\n",
      "('explanation', 1)\n",
      "('albert', 1)\n",
      "('rivera', 1)\n",
      "('215', 1)\n",
      "('coexistence', 1)\n",
      "('union', 1)\n",
      "('articulate', 1)\n",
      "('common', 1)\n",
      "('spain', 1)\n",
      "('losing', 1)\n",
      "('elections', 1)\n",
      "('201', 1)\n",
      "('user', 1)\n",
      "('wordplay', 1)\n",
      "('watching', 1)\n",
      "('ozella', 1)\n",
      "('sister', 1)\n",
      "('ran', 1)\n",
      "('pats', 1)\n",
      "('luncheonette', 1)\n",
      "('1970s', 1)\n",
      "('days', 1)\n",
      "('restaurant', 1)\n",
      "('closed', 1)\n",
      "('ms', 1)\n",
      "('embarked', 1)\n",
      "('volunteering', 1)\n",
      "('106th', 1)\n",
      "('fund', 1)\n",
      "('provided', 1)\n",
      "('direct', 1)\n",
      "('assistance', 1)\n",
      "('donate', 1)\n",
      "('advertisers', 1)\n",
      "('player', 1)\n",
      "('previous', 1)\n",
      "('desk', 1)\n",
      "('vulgarians', 1)\n",
      "('sex', 1)\n",
      "('drive', 1)\n",
      "('readers', 1)\n",
      "('discuss', 1)\n",
      "('writers', 1)\n",
      "('mistreatment', 1)\n",
      "('rooted', 1)\n",
      "('“brutality', 1)\n",
      "('sexuality”', 1)\n",
      "('sisters', 1)\n",
      "('nurturing', 1)\n",
      "('countless', 1)\n",
      "('haircuts', 1)\n",
      "('dinner', 1)\n",
      "('happy', 1)\n",
      "('anniversary', 1)\n",
      "('heart', 1)\n",
      "('transplant', 1)\n",
      "('doctors', 1)\n",
      "('fail', 1)\n",
      "('children', 1)\n",
      "('sterilized', 1)\n",
      "('broadway', 1)\n",
      "('pro', 1)\n",
      "('basketball', 1)\n",
      "('ugly', 1)\n",
      "('streaks', 1)\n",
      "('warriors', 1)\n",
      "('knicks', 1)\n",
      "('terrible', 1)\n",
      "('navajo', 1)\n",
      "('economy', 1)\n",
      "('american', 1)\n",
      "('singlefamily', 1)\n",
      "('11yearold', 1)\n",
      "('spent', 1)\n",
      "('jail', 1)\n",
      "('serial', 1)\n",
      "('killer', 1)\n",
      "('cellmate', 1)\n",
      "('plan', 1)\n",
      "('snubs', 1)\n",
      "('palestinians', 1)\n",
      "('actually', 1)\n",
      "('chinas', 1)\n",
      "('ai', 1)\n",
      "('advances', 1)\n",
      "('contributor', 1)\n",
      "('abc', 1)\n",
      "('reporter', 1)\n",
      "('brian', 1)\n",
      "('erroneous', 1)\n",
      "('report', 1)\n",
      "('bound', 1)\n",
      "('history', 1)\n",
      "('roiled', 1)\n",
      "('metoo', 1)\n",
      "('moment', 1)\n",
      "('ministers', 1)\n",
      "('revive', 1)\n",
      "('martin', 1)\n",
      "('luther', 1)\n",
      "('kings', 1)\n",
      "('1968', 1)\n",
      "('poverty', 1)\n",
      "('campaign', 1)\n",
      "('technology', 1)\n",
      "('shift', 1)\n",
      "('41', 1)\n",
      "('lithuania', 1)\n",
      "('feed', 1)\n",
      "('drone', 1)\n",
      "('maker', 1)\n",
      "('dji', 1)\n",
      "('data', 1)\n",
      "('officials', 1)\n",
      "('snapchat', 1)\n",
      "('remakes', 1)\n",
      "('splitting', 1)\n",
      "('social', 1)\n",
      "('el', 1)\n",
      "('museos', 1)\n",
      "('leader', 1)\n",
      "('bridge', 1)\n",
      "('latino', 1)\n",
      "('kennedy', 1)\n",
      "('honors', 1)\n",
      "('evoke', 1)\n",
      "('pushes', 1)\n",
      "('avoid', 1)\n",
      "('path', 1)\n",
      "('tricky', 1)\n",
      "('drag', 1)\n",
      "('event', 1)\n",
      "('horizon', 1)\n",
      "('resort', 1)\n",
      "('canyon', 1)\n",
      "('ranch', 1)\n",
      "('succumbs', 1)\n",
      "('botox', 1)\n",
      "('rhythm', 1)\n",
      "('colombias', 1)\n",
      "('salsa', 1)\n",
      "('capital', 1)\n",
      "('water', 1)\n",
      "('altogether', 1)\n",
      "('wonderful', 1)\n",
      "('coco', 1)\n",
      "('tops', 1)\n",
      "('box', 1)\n",
      "('office', 1)\n",
      "('quiet', 1)\n",
      "('wonder', 1)\n",
      "('wheel', 1)\n",
      "('woody', 1)\n",
      "('allens', 1)\n",
      "('coney', 1)\n",
      "('memory', 1)\n",
      "('palace', 1)\n",
      "('boulevard', 1)\n",
      "('stabs', 1)\n",
      "('queens', 1)\n",
      "('drives', 1)\n",
      "('helpers', 1)\n",
      "('acting', 1)\n",
      "('studios', 1)\n",
      "('24', 1)\n",
      "('17', 1)\n",
      "('eli', 1)\n",
      "('manning', 1)\n",
      "('warms', 1)\n",
      "('bench', 1)\n",
      "('playoff', 1)\n",
      "('alabama', 1)\n",
      "('ohio', 1)\n",
      "('tiger', 1)\n",
      "('woods', 1)\n",
      "('relishes', 1)\n",
      "('struggle', 1)\n",
      "('upanddown', 1)\n",
      "('return', 1)\n",
      "('sleepwalking', 1)\n",
      "('70s', 1)\n",
      "('downtown', 1)\n",
      "('riot', 1)\n",
      "('silly', 1)\n",
      "('seas', 1)\n",
      "('pirates', 1)\n",
      "('penzance', 1)\n",
      "('2017s', 1)\n",
      "('supermoon', 1)\n",
      "('moons', 1)\n",
      "('super', 1)\n",
      "('trilobites', 1)\n",
      "('fossilized', 1)\n",
      "('pterosaur', 1)\n",
      "('eggs', 1)\n",
      "('uncovered', 1)\n",
      "('leon', 1)\n",
      "('carried', 1)\n",
      "('battle', 1)\n",
      "('tarawa', 1)\n",
      "('98', 1)\n",
      "('adventurer', 1)\n",
      "('william', 1)\n",
      "('mayer', 1)\n",
      "('wideranging', 1)\n",
      "('composer', 1)\n",
      "('dead', 1)\n",
      "('91', 1)\n",
      "('saturday', 1)\n",
      "('night', 1)\n",
      "('jabs', 1)\n",
      "('matt', 1)\n",
      "('lauer', 1)\n",
      "('plays', 1)\n",
      "('kicks', 1)\n",
      "('word', 1)\n",
      "('claire', 1)\n",
      "('foy', 1)\n",
      "('ready', 1)\n",
      "('quit', 1)\n",
      "('playing', 1)\n",
      "('queen', 1)\n",
      "('transplanted', 1)\n",
      "('uterus', 1)\n",
      "('birth', 1)\n",
      "('footsteps', 1)\n",
      "('inescapable', 1)\n",
      "('poet', 1)\n",
      "('nicaragua', 1)\n",
      "('getaway', 1)\n",
      "('sos', 1)\n",
      "('rise', 1)\n",
      "('shanghai', 1)\n",
      "('enthusiast', 1)\n",
      "('praise', 1)\n",
      "('romance', 1)\n",
      "('100', 1)\n",
      "('notable', 1)\n",
      "('applicant', 1)\n",
      "('getting', 1)\n",
      "('dream', 1)\n",
      "('six', 1)\n",
      "('myths', 1)\n",
      "('pasteles', 1)\n",
      "('puerto', 1)\n",
      "('rican', 1)\n",
      "('tradition', 1)\n",
      "('special', 1)\n",
      "('savor', 1)\n",
      "('kitchen', 1)\n",
      "('meat', 1)\n",
      "('potatoes', 1)\n",
      "('rachel', 1)\n",
      "('brosnahans', 1)\n",
      "('comic', 1)\n",
      "('timing', 1)\n",
      "('answer', 1)\n",
      "('ferry', 1)\n",
      "('changing', 1)\n",
      "('brooklynqueens', 1)\n",
      "('waterfront', 1)\n",
      "('ticket', 1)\n",
      "('38', 1)\n",
      "('penthouse', 1)\n",
      "('west', 1)\n",
      "('chelsea', 1)\n",
      "('novembers', 1)\n",
      "('renters', 1)\n",
      "('jersey', 1)\n",
      "('upshot', 1)\n",
      "('generation', 1)\n",
      "('grumpy', 1)\n",
      "('unhappy', 1)\n",
      "('50', 1)\n",
      "('bills', 1)\n",
      "('automatic', 1)\n",
      "('cuts', 1)\n",
      "('pages', 1)\n",
      "('explained', 1)\n",
      "('exciting', 1)\n",
      "('indian', 1)\n",
      "('automakers', 1)\n",
      "('comeback', 1)\n",
      "('wheels', 1)\n",
      "('near', 1)\n",
      "('driving', 1)\n",
      "('hands', 1)\n",
      "('jenna', 1)\n",
      "('lyonss', 1)\n",
      "('discusses', 1)\n",
      "('rap', 1)\n",
      "('trumps', 1)\n",
      "('studio', 1)\n",
      "('artist', 1)\n",
      "('painted', 1)\n",
      "('landlord', 1)\n",
      "('stage', 1)\n",
      "('ronda', 1)\n",
      "('kaysen', 1)\n",
      "('tenant', 1)\n",
      "('garden', 1)\n",
      "('provides', 1)\n",
      "('outside', 1)\n",
      "('homes', 1)\n",
      "('mortgage', 1)\n",
      "('calculator', 1)\n",
      "('emailed', 1)\n",
      "('viewed', 1)\n",
      "('trending', 1)\n",
      "('recommended', 1)\n",
      "('page', 1)\n",
      "('corrections', 1)\n",
      "('columnists', 1)\n",
      "('editorials', 1)\n",
      "('contributors', 1)\n",
      "('art', 1)\n",
      "('dance', 1)\n",
      "('music', 1)\n",
      "('jobs', 1)\n",
      "('weddings', 1)\n",
      "('celebrations', 1)\n",
      "('listings', 1)\n",
      "('reader', 1)\n",
      "('classifieds', 1)\n",
      "('photography', 1)\n",
      "('nyt', 1)\n",
      "('journeys', 1)\n",
      "('nytco', 1)\n",
      "('delivery', 1)\n",
      "('digital', 1)\n",
      "('alerts', 1)\n",
      "('rate', 1)\n",
      "('applications', 1)\n",
      "('replica', 1)\n",
      "('ad', 1)\n",
      "('feedback', 1)\n",
      "('view', 1)\n",
      "('version', 1)\n",
      "('espantildeol', 1)\n",
      "('instagram', 1)\n",
      "('copy2017cablenewsnetwork', 1)\n",
      "('turnerbroadcastingsysteminc', 1)\n",
      "('allrightsreserved', 1)\n",
      "('cnnsanstradecopy2016cablenewsnetwork', 1)\n",
      "('adchoices', 1)\n",
      "('msa', 1)\n",
      "('statement', 1)\n",
      "('transcripts', 1)\n",
      "('license', 1)\n",
      "('footage', 1)\n",
      "('newsource', 1)\n",
      "('world39s', 1)\n",
      "('pricing', 1)\n",
      "('dashboard', 1)\n",
      "('built', 1)\n",
      "('inspired', 1)\n",
      "('otherdevelopers', 1)\n",
      "('letter', 1)\n",
      "('numeral', 1)\n",
      "('characters', 1)\n",
      "('brings', 1)\n",
      "('move', 1)\n",
      "('write', 1)\n",
      "('collaboration', 1)\n",
      "('conversations', 1)\n",
      "('reviews', 1)\n",
      "('pull', 1)\n",
      "('requests', 1)\n",
      "('weight', 1)\n",
      "('improve', 1)\n",
      "('chaos', 1)\n",
      "('breath', 1)\n",
      "('happens', 1)\n",
      "('issues', 1)\n",
      "('mention', 1)\n",
      "('teammate', 1)\n",
      "('involved', 1)\n",
      "('favorites—then', 1)\n",
      "('minutes', 1)\n",
      "('administration', 1)\n",
      "('boxes', 1)\n",
      "('check', 1)\n",
      "('administrative', 1)\n",
      "('flexible', 1)\n",
      "('meet', 1)\n",
      "('requirements', 1)\n",
      "('prevent', 1)\n",
      "('protected', 1)\n",
      "('branches', 1)\n",
      "('commits', 1)\n",
      "('required', 1)\n",
      "('checks', 1)\n",
      "('standard', 1)\n",
      "('controlled', 1)\n",
      "('encourage', 1)\n",
      "('limiting', 1)\n",
      "('granular', 1)\n",
      "('permissions', 1)\n",
      "('samlsso', 1)\n",
      "('ldap', 1)\n",
      "('1clrcodehosting', 1)\n",
      "('hosted', 1)\n",
      "('reliably', 1)\n",
      "('githubcom', 1)\n",
      "('deploy', 1)\n",
      "('enterprise', 1)\n",
      "('servers', 1)\n",
      "('private', 1)\n",
      "('amazon', 1)\n",
      "('web', 1)\n",
      "('azure', 1)\n",
      "('google', 1)\n",
      "('compare', 1)\n",
      "('customize', 1)\n",
      "('intuitive', 1)\n",
      "('api', 1)\n",
      "('integrate', 1)\n",
      "('favorites', 1)\n",
      "('happier', 1)\n",
      "('efficient', 1)\n",
      "('sometimes', 1)\n",
      "('tool', 1)\n",
      "('job', 1)\n",
      "('try', 1)\n",
      "('welcome', 1)\n",
      "('theirprojects', 1)\n",
      "('ariya', 1)\n",
      "('hidayat', 1)\n",
      "('phantomjs', 1)\n",
      "('russell', 1)\n",
      "('keithmagee', 1)\n",
      "('pybee', 1)\n",
      "('mailchimp', 1)\n",
      "('marketing', 1)\n",
      "('kris', 1)\n",
      "('nova', 1)\n",
      "('kuberneteskops', 1)\n",
      "('evan', 1)\n",
      "('vue', 1)\n",
      "('mapbox', 1)\n",
      "('frazelle', 1)\n",
      "('kubernetes', 1)\n",
      "('previously', 1)\n",
      "('docker', 1)\n",
      "('commit', 1)\n",
      "('rover', 1)\n",
      "('mars', 1)\n",
      "('73m', 1)\n",
      "('repositories', 1)\n",
      "('githubs', 1)\n",
      "('users', 1)\n",
      "('influential', 1)\n",
      "('technologies', 1)\n",
      "('sourcecommunity', 1)\n",
      "('26m', 1)\n",
      "('experimenting', 1)\n",
      "('programming', 1)\n",
      "('languages', 1)\n",
      "('lifes', 1)\n",
      "('117k', 1)\n",
      "('sizes', 1)\n",
      "('support', 1)\n",
      "('started', 1)\n",
      "('free', 1)\n",
      "('mdash', 1)\n",
      "('join', 1)\n",
      "('amazing', 1)\n",
      "('documentation', 1)\n",
      "('atom', 1)\n",
      "('electron', 1)\n",
      "('desktop', 1)\n",
      "('partners', 1)\n",
      "('sponsorships', 1)\n",
      "('blog', 1)\n",
      "('careers', 1)\n",
      "('press', 1)\n",
      "('shop', 1)\n",
      "('resources', 1)\n",
      "('forum', 1)\n",
      "('training', 1)\n",
      "('perform', 1)\n",
      "('action', 1)\n",
      "('time', 1)\n"
     ]
    }
   ],
   "source": [
    "w4 = OrderedWebWordsFrequency('http://www.times.com', 'http://edition.cnn.com', 'https://github.com')\n",
    "for i in w4:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> - OrderedWebWordsFrequency은 부모 클래스인 WebWordsFrequency을 상속받고 ```__init__()``` 함수와 getWordsFrequency 함수는 위의 문제와 동일합니다. <br><br>\n",
    "> - 그리고 반복자와 관련된 메소드 ``` __iter__()```와 ```__next__()```을 정의해줍니다. 먼저 ```__iter__()```에서는 객체 변수 i을 -1으로 초기화해주고, 객체변수 tmpFrequency에 각 URL의 웹페이지들을 종합적으로 분석한 단어 출현빈도 사전을 반환하는 getWordsFrequency 함수를 호출해주고, 현재 객체를 반환해줍니다. <br><br>\n",
    "> - ```__next__()```에서는 객체변수 i를 하나 증가시키고 만약 tmpFrequency의 길이가 self.i보다 작거나 같으면 raise StopIteration을 통해 예외를 발생시켜줍니다. 그렇지 않다면 현재 위치의 tmpFrequency 값을 반환해줍니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "---\n",
    "소감 : 중간고사에 비해 배우는 파이썬의 개념이 어려워지면서 수업을 들어도 정확하게 제가 아는 것인지 확신이 없었습니다. 하지만 이번 과제를 통해 그동안 어렵다고 생각이 들었던 함수와 클래스, 반복자의 내용을 복습할 수 있어서 좋았습니다. 이번이 마지막 과제라고 하니 한학기를 시작한지 얼마안된 것 같은데 벌써 한학기가 지났다는 것이 신기하기도 하고 섭섭하기도 하네요.. 한연희 교수님의 수업을 들어본 게 이번이 처음인데 정말 많은 것을 배우고 갑니다. 교수님의 수업을 들으면 연구하고 싶어지는 생각이 들고 더 알고 싶다는 생각이 드네요. 수업에서 해주셨던 많은 조언들, 잊지 않고 꼭 기억하겠습니다!!!!!! 수업을 들으면서 방학 때 python을 이용한 데이터 처리나 딥러닝에 대해서 공부하겠다는 결심도 했습니다. 정말 감사드리고 항상 몸 조심하세요!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
